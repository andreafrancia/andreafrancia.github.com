<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>TITLE</title>
  <link href="http://andreafrancia.it/atom.xml" rel="self"/>
  <link href="http://andreafrancia.it/"/>
  <updated>2015-02-17T16:35:39+01:00</updated>
  <id>http://andreafrancia.it/</id>
  <author>
    <name>Andrea Francia</name>
    <email>andrea@andreafrancia.it</email>
  </author>
  
  <entry>
    <title>Open Suse</title>
    <link href="http://andreafrancia.it"/>
    <updated>2013-09-11T00:00:00+02:00</updated>
    <id>http://andreafrancia.it/open-suse</id>
    <content type="html">&lt;h1 id=&#39;open_suse&#39;&gt;Open Suse&lt;/h1&gt;

&lt;pre&gt;&lt;code&gt;# Essential packages
sudo zypper --non-interactive install -y vim ack

# how to start/stop services:
sudo /usr/sbin/rcmysql start

# how to make a service to be launched at startup
sudo /sbin/insserv mysql&lt;/code&gt;&lt;/pre&gt;</content>
  </entry>
  
  <entry>
    <title>Git</title>
    <link href="http://andreafrancia.it"/>
    <updated>2013-09-11T00:00:00+02:00</updated>
    <id>http://andreafrancia.it/git</id>
    <content type="html">&lt;h1 id=&#39;essential_git_config&#39;&gt;Essential Git config&lt;/h1&gt;

&lt;pre&gt;&lt;code&gt;git config --global user.name &amp;quot;Andrea Francia @ $(hostname)&amp;quot;
git config --global user.email EMAILHERE

git config --global core.excludesfile &amp;quot;~/.cvsignore&amp;quot;
git config --global core.editor vim
git config --global color.ui auto
git config --global alias.aa &amp;quot;add --all&amp;quot;
git config --global alias.l &amp;quot;log --graph --pretty=format&amp;#39;:%C(yellow)%h%Cblue%d%Creset %s %C(white) %an, %ar%Creset&amp;#39;&amp;quot;
git config --global alias.st &amp;quot;status --short&amp;quot;
git config --global alias.ci commit
git config --global alias.unstage &amp;quot;reset HEAD --&amp;quot;
git config --global alias.undo-last-commit &amp;quot;reset --soft HEAD~1&amp;quot;
git config --global alias.commit &amp;quot;commit -v&amp;quot;
git config --global alias.co &amp;quot;checkout&amp;quot;
git config --global difftool.prompt false

# need git v1.7.11
git config --global push.default simple&lt;/code&gt;&lt;/pre&gt;</content>
  </entry>
  
  <entry>
    <title>Dates in Cocoa</title>
    <link href="http://andreafrancia.it"/>
    <updated>2013-08-29T00:00:00+02:00</updated>
    <id>http://andreafrancia.it/cocoa-dates</id>
    <content type="html">&lt;h1 id=&#39;parse_an_iso8601_date_assuming_utc&#39;&gt;Parse an ISO8601 date (assuming UTC):&lt;/h1&gt;

&lt;pre&gt;&lt;code&gt;NSDateFormatter* dateFormatter = [[NSDateFormatter alloc] init];
[dateFormatter setTimeZone:[NSTimeZone timeZoneWithAbbreviation:@&amp;quot;UTC&amp;quot;]];
[dateFormatter setDateFormat:@&amp;quot;yyyy-MM-dd&amp;#39;T&amp;#39;HH:mm:ss&amp;quot;];

NSDate* newTime = [dateFormatter dateFromString:@&amp;quot;2011-10-20T01:10:50&amp;quot;];

STAssertEqualObjects(@&amp;quot;2011-10-20 01:10:50 +0000&amp;quot;, [newTime description], nil);&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&#39;create_a_date_from_compoments&#39;&gt;Create a date from compoments:&lt;/h1&gt;

&lt;pre&gt;&lt;code&gt; NSDateComponents * comps = [[NSDateComponents alloc]init];
 comps.year = 2013
 comps.month = 8;
 comps.day = 8;
 NSCalendar * gregorian = [[NSCalendar alloc]
                           initWithCalendarIdentifier:NSGregorianCalendar];
 NSDate * date = [gregorian dateFromComponents:comps];&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&#39;format_a_date&#39;&gt;Format a date:&lt;/h1&gt;

&lt;pre&gt;&lt;code&gt;NSString * format = @&amp;quot;EEE dd mmm yyyy&amp;quot;;
NSDateFormatter * format = [NSDateFormatter new];
[format setDateFormat:format];
NSString * text = [format stringFromDate:date];&lt;/code&gt;&lt;/pre&gt;</content>
  </entry>
  
  <entry>
    <title>Vim</title>
    <link href="http://andreafrancia.it"/>
    <updated>2013-08-22T00:00:00+02:00</updated>
    <id>http://andreafrancia.it/vim</id>
    <content type="html">&lt;h1 id=&#39;essential_vim_plugins&#39;&gt;Essential Vim plugins&lt;/h1&gt;

&lt;pre&gt;&lt;code&gt;mkdir -p ~/.vim/autoload ~/.vim/bundle
curl -Sso ~/.vim/autoload/pathogen.vim https://raw.github.com/tpope/vim-pathogen/master/autoload/pathogen.vim
cd ~/.vim/bundle/
git clone https://github.com/vim-scripts/Align.git 
git clone https://github.com/tpope/vim-sensible.git
git clone https://github.com/scrooloose/nerdtree.git&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&#39;essential_vim_config&#39;&gt;Essential Vim config&lt;/h1&gt;

&lt;pre&gt;&lt;code&gt;touch ~/.vimrc
cat &amp;gt;&amp;gt; ~/.vimrc &amp;lt;&amp;lt; EOF
set nocompatible 
set autoindent 
set hidden

set expandtab 
set smarttab 
set tabstop=8 
set shiftwidth=4 
set softtabstop=4

set incsearch 
set hlsearch

set textwidth=78 

if exists(&amp;#39;+colorcolumn&amp;#39;) 
   set colorcolumn=+1 
endif

&amp;quot; Integration
set clipboard=unnamed,unnamedplus,autoselect

set history=65535

syntax on
EOF&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&#39;vim_adding_plugin_with_git_submodules&#39;&gt;Vim: adding plugin with git submodules&lt;/h1&gt;

&lt;pre&gt;&lt;code&gt;cd ~/dot-files
git submodule add https://github.com/vim-scripts/VST.git .vim/bundle/VST&lt;/code&gt;&lt;/pre&gt;</content>
  </entry>
  
  <entry>
    <title>Essential Bash Configuration</title>
    <link href="http://andreafrancia.it"/>
    <updated>2013-08-22T00:00:00+02:00</updated>
    <id>http://andreafrancia.it/2013/08/essential-bash-configuration</id>
    <content type="html">&lt;h1 id=&#39;bash_configuration&#39;&gt;Bash Configuration&lt;/h1&gt;

&lt;pre&gt;&lt;code&gt;cat &amp;gt;&amp;gt; ~/.bashrc &amp;lt;&amp;lt; EOF
# elephant memory
export HISTSIZE=100000

# append all commands to the history file, 
# don&amp;#39;t overwrite it at the start of every new session
shopt -s histappend
EOF&lt;/code&gt;&lt;/pre&gt;</content>
  </entry>
  
  <entry>
    <title>Command Line</title>
    <link href="http://andreafrancia.it"/>
    <updated>2013-08-22T00:00:00+02:00</updated>
    <id>http://andreafrancia.it/2013/08/command-line</id>
    <content type="html">&lt;h1 id=&#39;make_stderr_red&#39;&gt;Make stderr red&lt;/h1&gt;

&lt;pre&gt;&lt;code&gt;command 2&amp;gt; &amp;gt;(while read line; do echo -e &amp;quot;$(tput setaf 1)$line$(tput sgr0)&amp;quot; &amp;gt;&amp;amp;2; done)&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&#39;bash_configuration&#39;&gt;Bash Configuration&lt;/h1&gt;

&lt;pre&gt;&lt;code&gt;cat &amp;gt;&amp;gt; ~/.bashrc &amp;lt;&amp;lt; EOF
# elephant memory
export HISTSIZE=100000

# append all commands to the history file, 
# don&amp;#39;t overwrite it at the start of every new session
shopt -s histappend
EOF&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&#39;essential_tools&#39;&gt;Essential tools&lt;/h1&gt;

&lt;pre&gt;&lt;code&gt;sudo apt-get install -y vim
sudo apt-get install -y ack-grep
sudo apt-get install -y bash-completion&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&#39;automate_user_creation&#39;&gt;Automate user creation&lt;/h1&gt;

&lt;pre&gt;&lt;code&gt;sudo /usr/sbin/useradd sysop
echo sysop: | sudo /usr/sbin/chpasswd
sudo mkdir -p /home/sysop
sudo chown sysop /home/sysop
sudo /usr/sbin/usermod -G admin sysop&lt;/code&gt;&lt;/pre&gt;</content>
  </entry>
  
  <entry>
    <title>tmux</title>
    <link href="http://andreafrancia.it"/>
    <updated>2013-02-28T00:00:00+01:00</updated>
    <id>http://andreafrancia.it/2013/02/tmux</id>
    <content type="html">&lt;p&gt;Con &lt;code&gt;tmux&lt;/code&gt; é possibile creare terminali virtuali che rimangono attivi anche quando la connessione cade.&lt;/p&gt;

&lt;p&gt;Per avviare un nuovo terminale virtuale basta scrivere tmux nella shell:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ tmux&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Una volta avviato puoi staccarti dal terminale con il comando C-b C-d (si legge CTRL+B, CTRL+D).&lt;/p&gt;

&lt;p&gt;Per ricollegarti alla sessione basta dare questo comando:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ tmux attach&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Questo ultimo comando funziona anche per recuperare una sessione scollegata in seguito a disconnessione della rete.&lt;/p&gt;

&lt;p&gt;Altri comandi utili:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ tmux list-session         # Elena le sessioni attive
$ tmux list-command         # Elenca i comandi riconosciuti da tmux
$ tmux list-keys            # Elenca gli shortcuts&lt;/code&gt;&lt;/pre&gt;</content>
  </entry>
  
  <entry>
    <title>Broadband Platform installation tutorial</title>
    <link href="http://andreafrancia.it"/>
    <updated>2013-02-18T00:00:00+01:00</updated>
    <id>http://andreafrancia.it/2013/02/broadband-platform-installation-tutorial</id>
    <content type="html">&lt;p&gt;In questi giorni ho dovuto installare Broadband Platform un programma per la stima della pericolosità sismica distribuito dallo SCEC (Southern California Earthquake Center).&lt;/p&gt;

&lt;p&gt;È un software Open Source scritto in Fortran e Python per Linux. L&amp;#8217;unica distribuzione supportata é Fedora Core 10 ma ho scoperto che funziona bene anche con l&amp;#8217;ultima versione 17. Ho provato anche a installarlo su Mac OS X ma mi sono scontrato con parecchi problemi di portabilità e ho dovuto lasciar perdere.&lt;/p&gt;

&lt;p&gt;Anche l&amp;#8217;installazione su Fedora é parecchio macchinosa e impegnativa.&lt;/p&gt;

&lt;p&gt;Ad esempio per riuscire nella compilazione è necessario possedere ben tre diversi compilatori Fortran (g77, gfortran, e ifortran) e almeno due compilatori C/C++ (gcc/g++ e ipc). Sembra che ognuno dei componente di Broadband sia stato scritto per supportare uno e un solo compilatore.&lt;/p&gt;

&lt;p&gt;La dipendenza dai compilatori Intel é particolarmente fastidiosa. Infatti sono disponibili solo per alcune piattaforme e richiedono l&amp;#8217;installazione di decine di pacchetti. Anche il compilatore g77 é difficile tra trovare in quanto non più attivamente supportato. Questi due compilatori rendono particolarmente difficile l&amp;#8217;installazione su sistemi diversi da Fedora.&lt;/p&gt;

&lt;p&gt;Di seguito ho riportato la traccia del lavoro fatto.&lt;/p&gt;

&lt;h2 id=&#39;installazione_delle_utilities_essenziali&#39;&gt;Installazione delle utilities essenziali&lt;/h2&gt;

&lt;p&gt;Prima di tutto ho installato alcune utilities che risulteranno utili durante l&amp;#8217;installazione.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo yum install -y tmux ack wget&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#39;installazione_degli_intel_compilers&#39;&gt;Installazione degli Intel compilers&lt;/h2&gt;

&lt;p&gt;Gli Intel Compilers sono disponibili solo attraverso il sito di Intel e quindi non si possono installare con &lt;code&gt;yum&lt;/code&gt;. Tra l&amp;#8217;altro il sito di Intel é un labirinto mal indicizzato e quindi é utile sapere da dove partire. Da questa pagina http://software.intel.com/en-us/non-commercial-software-development é possibile registrarsi e scaricare una versione di prova dei compilatori.&lt;/p&gt;

&lt;p&gt;I link da seguire sono:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Intel® Fortran Composer XE 2013 for Linux&lt;/li&gt;

&lt;li&gt;Intel® C++ Composer XE 2013 for Linux&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Evidentemente Intel considra la parola &amp;#8220;Composer&amp;#8221; molto più trendy di &amp;#8220;Compiler&amp;#8221;.&lt;/p&gt;

&lt;p&gt;Naturalmente scarico da linea di comando:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# scarico il compilatore fortran
wget http://registrationcenter-download.intel.com/akdlm/irc_nas/2959/l_fcompxe_2013.2.146.tgz

# scarico il compilatore c/c++
wget http://registrationcenter-download.intel.com/akdlm/irc_nas/2961/l_ccompxe_2013.2.146.tgz&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Prima di poter avviare l&amp;#8217;installer é necessario installare i pre-requisiti. Da notare che se manca il comando &lt;code&gt;g++&lt;/code&gt; (che é il compilatore GNU per C++) l&amp;#8217;installer del compilatore C++ di Intel si rifiuta di continuare.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo yum install -y gcc-c++ java-1.7.0-openjdk glibc libstdc++ libgcc \
    glibc.i686 libstdc++.i686 libgcc.i686 libstdc++-static.i686 lsb&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Procedo con l&amp;#8217;installazione del compilatore C/C++ di Intel:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;tar xvfz l_ccompxe_2013.2.146.tgz
cd l_ccompxe_2013
sudo bash install.sh&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Quando l&amp;#8217;installazione é finita ricordatevi di appuntarvi la directory di installazione, nel mio caso era:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;INTEL_DIR=/opt/intel/composer_xe_2013.2.146&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Ora passo all&amp;#8217;installazione del compilatore Fortran di Intel:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;tar xvfz l_fcompxe_2013.2.146.tgz
cd l_fcompxe_2013.2.146/
sudo bash install.sh&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Anche in questo caso l&amp;#8217;installer mi suggerisce di modificare il file &lt;code&gt;.bashrc&lt;/code&gt;. Trattandosi della stessa modifica fatta per il compilatore C/C++ non dobbiamo fare niente.&lt;/p&gt;

&lt;p&gt;Bisogna poi aggiornare i file di configurazione della shell.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;cat &amp;gt;&amp;gt; ~/.bashrc &amp;lt;&amp;lt;&amp;lt; &amp;#39;
source /opt/intel/composer_xe_2013.2.146/bin/compilervars.sh intel64
&amp;#39;

cat &amp;gt;&amp;gt; ~/.bash_profile &amp;lt;&amp;lt;&amp;lt; &amp;#39;
export PATH=&amp;quot;/usr/usc/intel/composerxe-2011.4.191/bin/intel64:$PATH&amp;quot;
export PATH=&amp;quot;/usr/usc/intel/composerxe-2011.4.191/mpirt/bin/intel64:$PATH&amp;quot;
&amp;#39;&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#39;installazione_di_broadband_platform&#39;&gt;Installazione di Broadband Platform&lt;/h2&gt;

&lt;p&gt;Verifico che l&amp;#8217;integrità dei pacchetti.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;md5sum -c bbp_data_v11.2.3.tgz.md5
md5sum -c bbp_dist_v11.2.3.tgz.md5&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Installo i pre-requisiti:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo yum install -y python numpy python-matplotlib pygtk2 gcc gcc-gfortran 
sudo yum install -y compat-gcc-34-g77 ImageMagick                     
sudo yum install -y curl dos2unix grep htop bash-completion vim man tar make&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Broadband Platform richiede anche PyProj. Sfortunatamente PyProj non é disponibile attraverso &lt;code&gt;yum&lt;/code&gt;, l&amp;#8217;unico modo per installarlo é usare il sistema a pacchetti nativo di Python: PIP:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo yum install -y python-virtualenv python-pip
sudo pip-python install pyproj&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Ora decomprimo i due pacchetti:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;tar xvfz bbp_data_v11.2.3.tgz
tar xvfz bbp_dist_v11.2.3.tgz.md5&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;È necessario poi spiegare al programma dove sono si trovano queste directory:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ vim ~/bbp_2g/comps/install_cfg.py
    self.A_INSTALL_ROOT = &amp;quot;/home/&amp;lt;user&amp;gt;/bbp_2g&amp;quot;
    self.A_GF_DIR = &amp;quot;/home/&amp;lt;user&amp;gt;/bbp_2g_gf&amp;quot;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;E aggiungere queste configurazioni alla shell:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;cat &amp;gt;&amp;gt; ~/.bash_profile &amp;lt;&amp;lt;&amp;lt; &amp;#39;
export BBP=~/bbp_2g
export PYTHONPATH=&amp;quot;$BBP/comps:$PYTHONPATH&amp;quot;
&amp;#39;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Una volta finita la configurazione é possibile passare alla compilazione.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;cd /home/geo/bbp_2g/src
make&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Se questo comando fallisce é probabile che manchino alcune dipendenze (in particolare qualche compilatore).&lt;/p&gt;

&lt;h2 id=&#39;verifica_che_tutto_funziona&#39;&gt;Verifica che tutto funziona&lt;/h2&gt;

&lt;p&gt;Ci sono due suite di test, una suite per i test di unità e una per i test di accettazione.&lt;/p&gt;

&lt;p&gt;Eseguo tutti i test:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;cd ~/bbp_2g/tests/
python UnitTests.py&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Se qualcosa non passa conviene eseguirne uno alla volta, vederlo fallire, aggiustare e poi rieseguirlo. Per eseguire un test alla volta é sufficiente avviare il relativo script python:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;python test_bband_utils.py
python test_urs.py         
python test_ucsb.py 
python test_sdsu.py&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Alcuni test impiegano anche 6 minuti ad eseguire. Durante l&amp;#8217;esecuzione di questi test ho scoperto che mancavano delle dipendenze:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# richiesti da test_genslip.py
sudo yum install -y csh GMT

# questi servono per zittire dei warning durante la creazione dei grafici
sudo yum install -y stix-fonts.noarch stix-variants-fonts.noarch \
    stix-sizes-fonts.noarch stix-pua-fonts.noarch \
    stix-integrals-fonts.noarch&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Dopo queste ultime modifiche tutti i test dovrebbero passare.&lt;/p&gt;

&lt;p&gt;Ora che i test di unità passano provo con i test di accettazione. Dovrebbero passare senza problemi:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;python AcceptTests.py &lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;EOF&lt;/p&gt;</content>
  </entry>
  
  <entry>
    <title>Printing left aligned Fortran</title>
    <link href="http://andreafrancia.it"/>
    <updated>2012-12-04T00:00:00+01:00</updated>
    <id>http://andreafrancia.it/2012/12/printing-left-aligned-fortran</id>
    <content type="html">&lt;p&gt;Fortran é un linguaggio che per vari motivi é molto usato nel calcolo scientifico e che, però, a volte si rivela scomodo, sopratutto quando c&amp;#8217;è da manipolare del testo.&lt;/p&gt;

&lt;p&gt;Oggi era una di quelle volte. Il problema era: stampare un numero allineato a sinistra invece di allinearlo a destra (come si fa di solito).&lt;/p&gt;

&lt;p&gt;Di solito i numeri sono stampati allineati a destra perché così quando sono incolonnati é più facile confrontarli a colpo d&amp;#8217;occhio.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;Alineati a destra           Allineti a sinistra

 124.345                    124.345
   3.354                    3.354
  23.165                    23.165&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Però a me i numeri servivano allineati a sinistra!&lt;/p&gt;

&lt;p&gt;Il Fortran é un linguaggio pragmatico per gente seria che conosce che il modo giusto di allineare i numeri é solo uno e non ha senso mettere un opzione che consideri l&amp;#8217;altro modo.&lt;/p&gt;

&lt;p&gt;Infatti, sia che il formato non sia specificato:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;gt; cat free_format.f90
write(*,*) 5.
end
&amp;gt; gfortran free_format.f90 &amp;amp;&amp;amp; ./a.out
   5.00000000    &lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;o che lo sia:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;gt; cat decimal_format.f90 
write(*,&amp;#39;(f10.3)&amp;#39;) 5.
end
&amp;gt; gfortran decimal_format.f90&amp;amp;&amp;amp; ./a.out 
     5.000&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;I numeri saranno sempre allineati a destra e nel caso ve lo steste chiedendo &amp;#8230; no, non esiste nessuna opzione per allinearli a sinistra. Ho trovato due soluzioni.&lt;/p&gt;

&lt;h2 id=&#39;soluzione_dei_due_passi&#39;&gt;Soluzione dei due passi&lt;/h2&gt;

&lt;p&gt;Il problema si può risolvere appoggiandosi ad una variabile stringa intermedia è alla funzione adjustl (introdotta dal Fortran 90):&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;gt; cat simple_left_align.f90 
character* 255 tmp
write(tmp,&amp;#39;(f10.3)&amp;#39;) 5.
write(*,&amp;#39;(a)&amp;#39;) adjustl(tmp)
end

&amp;gt; gfortran simple_left_align.f90 &amp;amp;&amp;amp; ./a.out 
5.000&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Il difetto di questa soluzione é che il codice é un po&amp;#8217; scriptico ed é difficile leggere l&amp;#8217;intento del programmatore.&lt;/p&gt;

&lt;h2 id=&#39;soluzione_con_funzione&#39;&gt;Soluzione con funzione&lt;/h2&gt;

&lt;p&gt;In questo caso bisogna prepare una funzione come questa:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;character *255 function left_align(format, number)
    character(len=255) buffer
    character(len=*) format
    double precision number
    write(buffer, format) number
    left_align=adjustl(buffer)
end function&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;e poi usarla così:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;double precision :: a = 5.
character* 255 left_align
write(*, &amp;#39;(a)&amp;#39;) left_align(&amp;#39;(f10.5)&amp;#39;, a)
end&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Il risultato é quello che mi serviva:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;gt; gfortran left_align.f90 &amp;amp;&amp;amp; ./a.out
5.00000&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Questo modo funziona ma mi piacerebbe migliorarlo anche se al momento non conosco abbastanza Fortran per sapere come. Vedo i seguenti problemi:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Per qualche motivo sono stato costretto a ridichiarare il tipo restituito dalla funzione &lt;code&gt;left_align&lt;/code&gt; nel codice client, chissà come si può evitare?&lt;/li&gt;

&lt;li&gt;La funzione &lt;code&gt;left_align&lt;/code&gt; opera su variabili di tipo &lt;code&gt;double precision&lt;/code&gt;. Se nello stesso programma mi si ripresentasse un problema simile con un &lt;code&gt;real&lt;/code&gt; o un &lt;code&gt;integer&lt;/code&gt; dovrei ricreare un&amp;#8217;altra funzione analoga? Non c&amp;#8217;è modo di scriverne una generica che va bene per tutti?&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Misteri del fortran.&lt;/p&gt;</content>
  </entry>
  
  <entry>
    <title>Wake on LAN</title>
    <link href="http://andreafrancia.it"/>
    <updated>2012-11-02T00:00:00+01:00</updated>
    <id>http://andreafrancia.it/2012/11/wake-on-lan</id>
    <content type="html">&lt;h1 id=&#39;wake_on_lan&#39;&gt;Wake on LAN&lt;/h1&gt;

&lt;p&gt;I computer che ci sono in ufficio sono delle piccole stufette elettriche: scaldano e consumano corrente. A chi ha tante workstation in ufficio conviene spegnerle la sera e riaccenderle alla mattina, fa bene all&amp;#8217;ambiente e al portafogli.&lt;/p&gt;

&lt;p&gt;Ma se le macchine sono tante può essere noioso riaccenderle manualmente una ad una. In questo post racconto come è possibile automatizzare questa operazione usando &lt;a href=&#39;http://en.wikipedia.org/wiki/Wake-on-LAN&#39;&gt;&lt;em&gt;Wake on LAN&lt;/em&gt;&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&#39;wake_on_lan&#39;&gt;&lt;em&gt;Wake on LAN&lt;/em&gt;&lt;/h2&gt;

&lt;p&gt;&lt;em&gt;Wake on LAN&lt;/em&gt; è una tecnologia che permette di accendere un computer da remoto: mandandogli un invito di accensione via rete. Se opportunamente configurata la scheda di rete raccoglie l&amp;#8217;invito, lo riconosce e accende il resto del computer. È una tecnologia presente su praticamente ogni computer.&lt;/p&gt;

&lt;p&gt;Questo &amp;#8220;invito&amp;#8221; è uno speciale messaggio chiamato &lt;em&gt;Magic Packet&lt;/em&gt; e per essere preparato è necessario conoscere l&amp;#8217;indirizzo MAC della scheda di rete di destinazione.&lt;/p&gt;

&lt;p&gt;Il programma Open Source &lt;a href=&#39;http://code.google.com/p/gwakeonlan/&#39;&gt;gWakeOnLan&lt;/a&gt; oltre a fornire una interfaccia interattiva per spedire i &lt;em&gt;Magic Packet&lt;/em&gt;s ed è capace di recuperare da solo i MAC address delle schede di rete.&lt;/p&gt;

&lt;h2 id=&#39;abilitazione_del_wake_on_lan_sul_computer_da_accendere&#39;&gt;Abilitazione del Wake on LAN sul computer da accendere&lt;/h2&gt;

&lt;p&gt;Mandare messaggi di accensione via rete non basta, bisogna configurare il computer di destinazione in modo che si risvegli quando li riceve. Infatti solitamente il &lt;em&gt;Wake on LAN&lt;/em&gt; è disabilitato come impostazione di default e va abilitato esplicitamente.&lt;/p&gt;

&lt;p&gt;A seconda del tipo di computer l&amp;#8217;attivazione si fa in maniera diversa. Per i Mac bisogna andare in System Preferences &amp;gt; Energy Saver &amp;gt; Power Adapter e abilitare la voce &amp;#8220;Wake for network access&amp;#8221;.&lt;/p&gt;

&lt;p&gt;Per i PC l&amp;#8217;attivazione si può fare accedendo all&amp;#8217;utility di configurazione del BIOS, solitamente sotto le voci &lt;em&gt;&amp;#8220;Power Management&amp;#8221;&lt;/em&gt;, &lt;em&gt;&amp;#8220;Wake on Network&amp;#8221;&lt;/em&gt; o simili.&lt;/p&gt;

&lt;h2 id=&#39;automazione_e_schedulazione&#39;&gt;Automazione e schedulazione&lt;/h2&gt;

&lt;p&gt;&lt;em&gt;gWakeOnLan&lt;/em&gt; é utile per fare delle prove o per attivare le macchine da remoto. Se invece si vuole automatizzare l&amp;#8217;esecuzione conviene usare uno script come quello che si trova su &lt;a href=&#39;http://code.activestate.com/recipes/358449-wake-on-lan/&#39;&gt;activestate&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;In questo caso é necessario recuperare gli indirizzi MAC Address associati alle schede di rete dei computer da accendere. Per farlo si può usare il comando arp:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ arp nome.computer
? (192.168.1.44) at 00:65:4F:D3:79:59 on en1 ifscope [ethernet]&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Ricordandosi che &lt;code&gt;arp&lt;/code&gt; funziona solo se abbiamo contattato il computer di cui vogliamo conoscere il mac address almeno una volta. Quindi se non l&amp;#8217;abbiamo fatto possiamo mandare un ping (con &lt;code&gt;ping -c 1 nome.computer&lt;/code&gt;).&lt;/p&gt;</content>
  </entry>
  
  <entry>
    <title>Minimizzare il numero di classi e metodi</title>
    <link href="http://andreafrancia.it"/>
    <updated>2012-10-15T00:00:00+02:00</updated>
    <id>http://andreafrancia.it/2012/10/minimizzare-il-numero-di-classi-e-metodi</id>
    <content type="html">&lt;p&gt;L&amp;#8217;altro giorno mentre guidavo una sessione di pair programming, il mio collega mi ha criticato perché durante il TDD creavo troppe classi e interfacce che, secondo lui, complicavano le cose.&lt;/p&gt;

&lt;p&gt;Egli faceva riferimento al principio secondo il quale un design con meno elementi é più semplice di uno che ne ha di più.&lt;/p&gt;

&lt;p&gt;L&amp;#8217;idea di ridurre complessità riducendo (o evitando di aumentare) il numero di elementi sembra plausibile ma non dice tutta la storia.&lt;/p&gt;

&lt;p&gt;Kent Beck ci é arrivato prima di me e quando l&amp;#8217;ha inclusa nelle sue regole di &amp;#8220;Simple Design&amp;#8221; ha posto l&amp;#8217;attenzione anche sulla sua importanza relativa.&lt;/p&gt;

&lt;p&gt;In questo contesto un design é &amp;#8220;Simple&amp;#8221; quando é facile da comprendere e, di conseguenza, facile da modificare. Non necessariamente un design semplice é anche facile da creare. Per arrivare a questo obbiettivo bisogna sforzarsi di ottenere il design più compatto e espressivo possibile che sia in grado di soddisfare i requisiti (attuali) dell&amp;#8217;applicazione e nulla di più.&lt;/p&gt;

&lt;p&gt;Queste regole sono riportate anche nel libro &amp;#8220;Clean Code&amp;#8221; di Robert Martin:&lt;/p&gt;

&lt;p&gt;A design is &amp;#8220;simple&amp;#8221; when it:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Runs all the tests&lt;/li&gt;

&lt;li&gt;Contains no duplication&lt;/li&gt;

&lt;li&gt;Expresses the intent of the programmer&lt;/li&gt;

&lt;li&gt;Minimizes the number of classes and methods&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Queste regole sono fornite in ordine di importanza.&lt;/p&gt;

&lt;p&gt;Prima di tutto il codice deve fare ciò che dovrebbe (regola 1), altrimenti non ci si pone neanche il problema del design. Finché il codice non funziona é inutile giudicarne il design!&lt;/p&gt;

&lt;p&gt;Poi vengono le regole 2 e 3; queste due regole arrivano quasi a pari merito: alcuni autori preferiscono riportarle con l&amp;#8217;ordine scambiato.&lt;/p&gt;

&lt;p&gt;É abbastanza chiaro che la duplicazione aumenta il costo della manutenzione del codice: una modifica deve essere ripetuta in più punti invece che in uno. Ma perché contribuisce a renderlo meno semplice? Perché ogni duplicazione é una astrazione mancata. Le (buone) astrazioni riducono il numero di cose che il programmatore deve comprendere mentre legge un pezzo di codice e quindi lo rendono più facile da capire. Gli stessi motivi portano alla terza regola: il codice deve esprimere l&amp;#8217;intento del programmatore.&lt;/p&gt;

&lt;p&gt;L&amp;#8217;ultima regola serve a ridurre il numero di &amp;#8220;elementi da capire&amp;#8221;. Serve per controbilanciare la tendenza ad applicare (a volte inutilmente) principi o design pattern che richiedono l&amp;#8217;aggiunta di nuovi metodi o classi non realmente necessari come, ad esempio, SRP o la riduzione del numero di linee in un metodo). La regola fa da contrappeso a tale possibile tendenza.&lt;/p&gt;

&lt;p&gt;Anche l&amp;#8217;ultima regola è importante ma va applicata tenendo conto che ha la priorità più bassa. Io ad esempio all&amp;#8217;inizio di una sessione di TDD la ritengo abbastanza flessibile e non mi faccio problemi a violarla, e aggiungo elementi ogni volta che mi sembra sensato o ne ho bisogno (ad esempio per introdurre astrazioni). Poi, man mano che procedo nello sviluppo, rimuovo le astrazioni che non si dimostrano abbastanza utili da essere mantenute.&lt;/p&gt;

&lt;p&gt;In questo senso considero la progettazione un processo fatto di raffinamenti successivi, dove all&amp;#8217;inizio si cerca di far funzionare le cose con il minimo sforzo non curandosi di alcuna regola se non la prima. Poi, una volta che il codice funziona come dovrebbe passo al refactoring. Con passi incrementali di refactoring lo rendo sempre più conforme alle restanti regole considerandone l&amp;#8217;importanza relativa.&lt;/p&gt;</content>
  </entry>
  
  <entry>
    <title>Perché il layout US é meglio?</title>
    <link href="http://andreafrancia.it"/>
    <updated>2012-07-27T00:00:00+02:00</updated>
    <id>http://andreafrancia.it/2012/07/keyboard-layout</id>
    <content type="html">&lt;h1 id=&#39;keyboard_layout&#39;&gt;Keyboard layout&lt;/h1&gt;

&lt;p&gt;Al momento dell&amp;#8217;acquisto di un nuovo Mac un programmatore si può chiedere quale sia il miglior layout da scegliere. Dato che é chiaro che la tastiera italiana non é il massimo per un programmatore solitamente il dubbio rimane su due scelte:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Layout U.S. International&lt;/li&gt;

&lt;li&gt;Layout U.S.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Quale conviene scegliere? La risposta é semplice, il layout US.&lt;/p&gt;

&lt;p&gt;Il motivo principale é l&amp;#8217;ergonomia. Per chi non é programmatore la cosa potrà sembrare strana ma per noi che abbiamo bisogno di sfruttarla al massimo la cosa ha molto più senso.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;La tastiera US é quella su cui é stato sviluppato Unix, e gli shortcut Unix sono più comodi su quella.&lt;/li&gt;

&lt;li&gt;Sulla tastiera US il tasto Return é molto largo e basso e la sua estremità sinistra é abbastanza vicina al mignolo per mettere alle mani di non spostarsi dalla &amp;#8220;home row&amp;#8221;.&lt;/li&gt;

&lt;li&gt;Il tasto quote inverso/tilde si trova in alto a sinistra e quindi riesci facilmente a fare Cmd+~ per spostarsi tra le finestre della stessa applicazione. Su UK international il suo posto é stato spodestato da due tasti inutili come il section sign (§) e il plus-minus sign (±), mentre il tasto backquote/~ é finito tra la Z e lo shift, la mano sinistra deve fare un movimento innaturale per fare switch tra le finestre.&lt;/li&gt;

&lt;li&gt;Su U.S. international ci sono due tasti morti, servono per fare gli accenti: il backquote(&lt;code&gt;`&lt;/code&gt;) e il quote(&lt;code&gt;&amp;#39;&lt;/code&gt;). Peccato che noi programmatori li usiamo più nella loro forma originale che per scrivere lettere accentate. Ed in ogni caso si possiamo sempre usare &lt;code&gt;alt+e&lt;/code&gt; e &lt;code&gt;alt+`&lt;/code&gt; per fare gli accenti.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Se acquisti un Mac con tastiera internazionale puoi comunque risolvere alcuni degli incovenienti descritti ma non tutti. Per esempio puoi risolvere il problema dei tasti morti impostando il layout software su US. Altri problemi che sono prettamente fisici non li puoi assolutamente risolvere, come il fatto che il tasto Return sia lontano dalla &amp;#8216;home row&amp;#8217;. Infine altri problemi li potresti risolvere &amp;#8220;in teoria&amp;#8221;, per esempio, con un software che rimappa i tasti. Io l&amp;#8217;ho fatto é ho ottenuto un sistema instabile che ogni tanto andava in Crash.&lt;/p&gt;

&lt;p&gt;Fonti:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;ultimo paragrafo di &lt;a href=&#39;http://en.wikipedia.org/wiki/British_and_American_keyboards&#39;&gt;http://en.wikipedia.org/wiki/British_and_American_keyboards&lt;/a&gt;&lt;/li&gt;

&lt;li&gt;il mio vecchio Mac del lavoro (che aveva tastiera US International).&lt;/li&gt;
&lt;/ul&gt;</content>
  </entry>
  
  <entry>
    <title>aggiunto ndiff a homebrew</title>
    <link href="http://andreafrancia.it"/>
    <updated>2012-04-03T00:00:00+02:00</updated>
    <id>http://andreafrancia.it/2012/04/ndiff-formula-added</id>
    <content type="html">&lt;p&gt;In questi giorni è stata &lt;a href=&#39;https://github.com/mxcl/homebrew/pull/11324#issuecomment-4867716&#39;&gt;inclusa&lt;/a&gt; una delle mie patch in &lt;a href=&#39;https://github.com/mxcl/homebrew/&#39;&gt;Homebrew&lt;/a&gt;, la patch aggiunge &lt;a href=&#39;http://www.math.utah.edu/~beebe/software/ndiff/&#39;&gt;ndiff&lt;/a&gt; (una specie di &lt;code&gt;diff&lt;/code&gt; che ignora le eventuali piccole differenze numeriche tra file).&lt;/p&gt;

&lt;p&gt;La cosa mi é piaciuta e servita. Facendolo ho avuto la possibilità di capire come meglio come usare Git per lo sviluppo collaborativo (con le patch e i branch per feature) e come usare anche GitHub e le &amp;#8220;Pull request&amp;#8221;.&lt;/p&gt;

&lt;p&gt;L&amp;#8217;altra cosa é che Homebrew é proprio progettato bene e studiandolo riesco a imparare molto dal suo design, sia dal modello di iterazioen con l&amp;#8217;utente.&lt;/p&gt;

&lt;p&gt;Al momento ho un&amp;#8217;altra patch che ho richiesto essere inclusa. Si tratta dell&amp;#8217;utility &lt;code&gt;ren&lt;/code&gt; che in passato veniva distribuito con &lt;a href=&#39;http://www.finkproject.org/&#39;&gt;Fink&lt;/a&gt;. A differenza della mia pull-request per &lt;code&gt;ndiff&lt;/code&gt; questa é ancora aperta. Mi farebbe piacere che venga accettata ma non é immediato, ci sono altre 233 richieste oltre alla mia.&lt;/p&gt;

&lt;p&gt;Se includono o meno questo secondo pacchetto per me l&amp;#8217;importanza è relativa.&lt;br /&gt;Ho cominciato a lavorare su questi pacchetti perché servivano a mia moglie per il suo lavoro. Lei può comunque installare &lt;code&gt;ren&lt;/code&gt; facendo riferimento al mio repository personale::&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;brew install https://raw.github.com/andreafrancia/homebrew/ren/Library/Formula/ren.rb&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Mentre per ndiff si può semplicemente usare&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;brew update
brew install ndiff&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Il &lt;code&gt;brew udpate&lt;/code&gt; serve per aggiornare. Nel caso ci sia una versione vecchia di brew.&lt;/p&gt;</content>
  </entry>
  
  <entry>
    <title>Ritorno dal codemotion</title>
    <link href="http://andreafrancia.it"/>
    <updated>2012-04-03T00:00:00+02:00</updated>
    <id>http://andreafrancia.it/2012/04/codemotion-wrap-up</id>
    <content type="html">Il weekend scorso sono stato al Codemotion di Roma, una grande conferenza 
sulla programmazione in tutte le tecnologie. Ho anche presentato il mio primo
talk ad un evento nazionale.

Il mio talk aveva titolo &quot;Tutti i miei sbagli&quot;. Parlavo di sviluppo Open 
Source e in particolare dell&#39;esperienza che mi sono fatto con lo sviluppo 
dell&#39;applicazione `trash-cli`.


</content>
  </entry>
  
  <entry>
    <title>Hacking di un Hard disk di rete</title>
    <link href="http://andreafrancia.it"/>
    <updated>2012-01-09T00:00:00+01:00</updated>
    <id>http://andreafrancia.it/2012/01/hacking-di-un-hard-disk-di-rete</id>
    <content type="html">&lt;h1&gt;Hacking di un Hard disk di rete&lt;/h1&gt;
&lt;h1 id=&#39;problema&#39;&gt;Problema&lt;/h1&gt;

&lt;p&gt;In questi giorni sono tornato a smanettare con il mio My Book World Edition.&lt;/p&gt;

&lt;p&gt;Lo vendono come &amp;#8220;Harddisk di rete&amp;#8221;, in realtà è un NAS (Network Attached Storage) cioè un computer con un grosso disco, una scheda di rete e tutto il software necessario per condividere il proprio disco con gli altri PC della LAN. Questo NAS, come molti altri dispositivi con computer integrato, nasconde al suo interno un sistema operativo Linux processore ARM.&lt;/p&gt;

&lt;p&gt;La distribuzione Linux usata è una versione proprietaria e soprattutto minimale. Mancano comandi quasi indispensabili come &lt;code&gt;screen&lt;/code&gt;, le utility di base sono limitate (ad esempio &lt;code&gt;rm&lt;/code&gt; non ha l&amp;#8217;opzione &lt;code&gt;-v&lt;/code&gt;), manca il Vim e in generale non è possibile aggiungere nuovo software.&lt;/p&gt;

&lt;p&gt;Per queste distribuzioni senza un proprio package manager e che girano su ARM il modo più semplice per installare software è quello di usare &lt;strong&gt;optware&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;In teoria dopo aver seguito le istruzioni di installazione esso dovrebbe permettere di installare i nuovi pacchetti con::&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;ipkg install &amp;lt;nome-pachetto&amp;gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Per installare optware basta seguire la guida su &lt;a href=&#39;http://mybookworld.wikidot.com/first-steps-with-mbwe&#39;&gt;mybookworld.wikidot.com&lt;/a&gt; dove è anche spiegato come accedere alla shell del NAS tramite SSH.&lt;/p&gt;

&lt;p&gt;Qui finisce la teoria e inizia la pratica perché a casa mia c&amp;#8217;é un problema che non mi permettere di sfruttare questo utile programma: il NAS non può accedere ad Internet! Di conseguenza &lt;strong&gt;ipkg&lt;/strong&gt; non potrebbe scaricare nessun pacchetto! Infatti a casa non ho l&amp;#8217;ADSL e l&amp;#8217;unico modo che ho per accedere alla Rete è la chiavetta Internet :-(&lt;/p&gt;

&lt;p&gt;Improbabili cablaggi e riconfigurazioni della tabella di routing sono fuori discussione. Si tratta di un problema soft, il mio portatile può accedere ad Internet e può accedere al NAS, quindi la soluzione deve essere soft.&lt;/p&gt;

&lt;h1 id=&#39;soluzione&#39;&gt;Soluzione&lt;/h1&gt;

&lt;p&gt;La soluzione soft si basa sui web proxy e sui tunnel SSH e si compone di due passi:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;installo sul mio portatile un web proxy&lt;/li&gt;

&lt;li&gt;faccio in modo che ipkg usi il web proxy del portatile&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Ho deciso di installare &lt;code&gt;polipo&lt;/code&gt;, un web proxy mono-thread che sembra più semplice di &lt;code&gt;squid&lt;/code&gt;::&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;(portatile) $ brew install polipo
(portatile) $ polipo
Established listening socket on port 8123.
...&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Ora il proxy si trova in ascolto sulla porta 8123 del mio portatile; con il port-forwarding di SSH posso fare in modo che sia accessibile anche dal mio NAS::&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;(portatile) $ ssh -R8123:localhost:8123 nas.local&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Però non so come configurare ipkg in modo che usi il proxy giusto. Fa niente, lo posso scoprire con un avvio di prova::&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;(nas) ~ # ipkg install nano     
Installing nano (2.2.6-1) to root...
Downloading http://ipkg.nslu2-linux.org/feeds/optware/cs05q1armel/cross/unstable/nano_2.2.6-1_arm.ipk
Nothing to be done
An error ocurred, return value: 22.
Collected errors:
ipkg_download: ERROR: Command failed with return value 1: `wget 
--passive-ftp -q -P /opt/ipkg-ZFXnou http://ipkg.nslu2-linux.org
/feeds/optware/cs05q1armel/cross/unstable/nano_2.2.6-1_arm.ipk&amp;#39;
Failed to download nano. Perhaps you need to run &amp;#39;ipkg update&amp;#39;?&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Dal messaggio di errore appare chiaro che &lt;strong&gt;ipkg&lt;/strong&gt; usi &lt;code&gt;wget&lt;/code&gt; come backend per il download, quindi mi dovrebbe bastare configurare quello::&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;(nas) ~ # cat &amp;gt;&amp;gt; ~/.wgetrc &amp;lt;&amp;lt; EOF
http_proxy = http://localhost:8123/
use_proxy = on
EOF&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;E in effetti funziona::&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;(nas) ~ # ipkg install nano
Installing nano (2.2.6-1) to root...
Downloading http://ipkg.nslu2-linux.org/feeds/optware/cs05q1armel/cross/unstable/nano_2.2.6-1_arm.ipk
Configuring nano
Successfully terminated.&lt;/code&gt;&lt;/pre&gt;</content>
  </entry>
  
  <entry>
    <title>Moving to ZSH</title>
    <link href="http://andreafrancia.it"/>
    <updated>2011-11-09T00:00:00+01:00</updated>
    <id>http://andreafrancia.it/2011/11/moving-to-zsh</id>
    <content type="html">&lt;h1&gt;Moving to ZSH&lt;/h1&gt;
&lt;div class=&#39;post&#39;&gt;
In those days I decided to adopt &lt;b&gt;Zsh&lt;/b&gt; as my working shell instead of Bash.
I don&#39;t know yet whether Zsh will be a better shell for my purposes but I decided to give it a try.&lt;br /&gt;
&lt;a href=&quot;http://3.bp.blogspot.com/-W-8NJ8OlIOo/TrpJCZVV68I/AAAAAAAAEMA/VdOxpWBP-g8/s1600/zsh-main-manpage.png&quot; imageanchor=&quot;1&quot; style=&quot;clear: right; float: right; margin-bottom: 1em; margin-left: 1em;&quot;&gt;&lt;img border=&quot;0&quot; height=&quot;136&quot; src=&quot;http://3.bp.blogspot.com/-W-8NJ8OlIOo/TrpJCZVV68I/AAAAAAAAEMA/VdOxpWBP-g8/s200/zsh-main-manpage.png&quot; width=&quot;200&quot; /&gt;&lt;/a&gt;&lt;br /&gt;
Up to now I found these interesting things:&lt;br /&gt;
&lt;b&gt;Better man pages:&lt;/b&gt;&lt;div&gt;
&lt;a href=&quot;http://2.bp.blogspot.com/-cLyAhYlkYF8/TrpJB_IxwmI/AAAAAAAAEL4/eDzIi_pSeo4/s1600/zsh-colorized-completion.png&quot; imageanchor=&quot;1&quot; style=&quot;clear: right; float: right; margin-bottom: 1em; margin-left: 1em;&quot;&gt;&lt;img border=&quot;0&quot; height=&quot;136&quot; src=&quot;http://2.bp.blogspot.com/-cLyAhYlkYF8/TrpJB_IxwmI/AAAAAAAAEL4/eDzIi_pSeo4/s200/zsh-colorized-completion.png&quot; width=&quot;200&quot; /&gt;&lt;/a&gt;Bash has a big single man page that explains every facet of the shell.&amp;nbsp;Zsh man pages are split out in a few pages, each one of a more&amp;nbsp;manageable&amp;nbsp;size.&amp;nbsp;The bash(1) man page uses a very prescriptive tone in describing the behaviour of the program, reading the bash man page is more like reading a technical specification than a user manual.&amp;nbsp;The zsh man pages are more geared towards the final user.&lt;/div&gt;
&lt;div&gt;
&lt;a href=&quot;http://3.bp.blogspot.com/-BtDgMMz5Oqw/TrpJCgOQINI/AAAAAAAAEMI/JsCYYbOaT4k/s1600/zsh-right-prompt.png&quot; imageanchor=&quot;1&quot; style=&quot;clear: right; float: right; margin-bottom: 1em; margin-left: 1em;&quot;&gt;&lt;img border=&quot;0&quot; height=&quot;136&quot; src=&quot;http://3.bp.blogspot.com/-BtDgMMz5Oqw/TrpJCgOQINI/AAAAAAAAEMI/JsCYYbOaT4k/s200/zsh-right-prompt.png&quot; width=&quot;200&quot; /&gt;&lt;/a&gt;&lt;ul&gt;&lt;ul&gt;
&lt;/ul&gt;
&lt;/ul&gt;
&lt;b&gt;Support for colors even in completion suggestions&lt;/b&gt;&lt;br /&gt;&lt;ul&gt;
&lt;ul&gt;
&lt;/ul&gt;
&lt;/ul&gt;
Command completion is the thing I always loved in Bash. Zsh goes one step further, it supports completion and even&amp;nbsp;colors in completion.&lt;br /&gt;&lt;ul&gt;&lt;ul&gt;
&lt;/ul&gt;
&lt;/ul&gt;
&lt;b&gt;More support for the prompt&amp;nbsp;customization&lt;/b&gt;&lt;br /&gt;Zsh provides out-of-the-box some features than in Bash can be only emulated, for example you can define also a right-side prompt that will be drawn along side the normal prompt on the left.&lt;br /&gt;&lt;ul&gt;&lt;ul&gt;
&lt;/ul&gt;
&lt;/ul&gt;
&lt;b&gt;Configuration wizard for new users&lt;/b&gt;&lt;br /&gt;&lt;ul&gt;

&lt;/ul&gt;
New users can use the configuration wizard that will create the configuration file (.zshrc) according with their preferences.&lt;ul&gt;&lt;ul&gt;
&lt;/ul&gt;
&lt;/ul&gt;
&lt;/div&gt;&lt;/div&gt;
</content>
  </entry>
  
  <entry>
    <title>svn-repair-move</title>
    <link href="http://andreafrancia.it"/>
    <updated>2011-10-04T00:00:00+02:00</updated>
    <id>http://andreafrancia.it/2011/10/svn-repair-move</id>
    <content type="html">&lt;h1&gt;svn-repair-move&lt;/h1&gt;
&lt;div class=&#39;post&#39;&gt;
Subversion does not detect moves as other version control system does. This could be a problem when you rename or move a file not using the appropriate subversion command.&lt;br /&gt;
For example, if you rename a file named &quot;foo&quot; to &quot;bar&quot; without using the Subversion command, it shows &quot;foo&quot; as &quot;missing&quot;and bar as &quot;non-versioned&quot;:&lt;br /&gt;
&lt;pre&gt;&lt;code&gt;
$ svn status
?       bar
!       foo
&lt;/code&gt;&lt;/pre&gt;
While TortoiseSVN has it&#39;s own &quot;Repair move...&quot; &lt;a href=&quot;http://tortoisesvn.net/repairmoves.html&quot;&gt;feature&lt;/a&gt;, from the command line perspective I had had to fix this&amp;nbsp;manually until I wrote a &lt;a href=&quot;https://github.com/andreafrancia/dot-files/blob/master/bin/svn-repair-move&quot;&gt;simple script&lt;/a&gt; that handles this situation.&lt;br /&gt;
It works like that:&lt;br /&gt;
&lt;pre&gt;&lt;code&gt;
$ svn-repair-move foo bar
$ svn status
D       foo
A  +    bar
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
</content>
  </entry>
  
  <entry>
    <title>Come aggiungere un custom task a setup.py</title>
    <link href="http://andreafrancia.it"/>
    <updated>2011-07-26T00:00:00+02:00</updated>
    <id>http://andreafrancia.it/2011/07/come-aggiungere-un-custom-task-a-setup-py</id>
    <content type="html">&lt;h1&gt;Come aggiungere un custom task a setup.py&lt;/h1&gt;
&lt;div class=&#39;post&#39;&gt;

Per avere questo comportamento:
&lt;pre&gt;&lt;code&gt;
$ python setup.py foo
running foo
foo ... foo ... foo!
&lt;/code&gt;&lt;/pre&gt;

Si fa così:

    &lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;python&quot;&gt;    &lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;setuptools&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;setup&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Command&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;():&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;setup&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;cmdclass&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;foo&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;FooCommand&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;FooCommand&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Command&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;description&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;Does foo-ish things.&amp;quot;&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;user_options&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;initialize_options&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;pass&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;finalize_options&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;pass&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;run&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;foo ... foo ... foo!&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
    
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
</content>
  </entry>
  
  <entry>
    <title>Writing a Crawler with Python and TDD (slide disponibili)</title>
    <link href="http://andreafrancia.it"/>
    <updated>2011-07-21T00:00:00+02:00</updated>
    <id>http://andreafrancia.it/2011/07/writing-a-crawler-with-python-and-tdd-slide-disponibili</id>
    <content type="html">&lt;h1&gt;Writing a Crawler with Python and TDD (slide disponibili)&lt;/h1&gt;
&lt;div class=&#39;post&#39;&gt;
Ieri ho partecipato al meeting XPUG di Milano dove ho presentato il mio ultimo lavoro.&lt;br /&gt;
Su&amp;nbsp;&lt;a href=&quot;http://www.slideshare.net/andreafrancia/writing-a-crawler-with-python-and-tdd&quot;&gt;slideshare&lt;/a&gt;&amp;nbsp;trovate le diapositive che ho usato.&lt;/div&gt;
</content>
  </entry>
  
  <entry>
    <title>Mock Object in Python</title>
    <link href="http://andreafrancia.it"/>
    <updated>2011-05-10T00:00:00+02:00</updated>
    <id>http://andreafrancia.it/2011/05/mock-object-in-python</id>
    <content type="html">&lt;h1&gt;Mock Object in Python&lt;/h1&gt;
&lt;div class=&#39;post&#39;&gt;
Uno dei problemi che ho quando sviluppo in Python e&#39; che non ho ancora
trovato una libreria di mocking che mi soddisfi. Non che non ci sia scelta, ci
sono almeno tre librerie, peccato che ognuna abbia qualcosa che non mi va.
Ieri, mentre stavo scrivendo dei test per trash-cli, ho scritto una classe
&lt;cite&gt;Mock&lt;/cite&gt; ex-novo adatta alle mie esigenze. L&#39;esempio di utilizzo e&#39; il
seguente: &lt;br /&gt;
&lt;pre class=&quot;python:nogutter:nocontrols&quot; name=&quot;code&quot;&gt;from double import Double

fs=Double(&#39;fs&#39;)
fs.on_method(&#39;volume_of&#39;).will_reply(&#39;/&#39;)
fs.on_method(&#39;exists&#39;).with_args(&#39;/.Trash&#39;).will_reply(True)
fs.on_method(&#39;has_sticky_bit&#39;).with_args(&#39;/.Trash&#39;).will_reply(True)
&lt;/pre&gt;
La classe è questa:&lt;br /&gt;
&lt;pre class=&quot;python:nogutter:nocontrols&quot; name=&quot;code&quot;&gt;class Double:
    def __init__(self, name):
        self.name = name
        self.expectations = {}
        self.expectations_with_args = {}
    def __getattr__(self, name):
        if name in self.expectations:
            def fake_method(*args, **kwargs):
                return self.expectations[name]
            return fake_method
        else:
            def fake_method(*args, **kwargs):
                if (name, args) in self.expectations_with_args.keys():
                    return self.expectations_with_args[(name,args)]
                self._report_unexpected_call(name, *args, **kwargs)
            return fake_method
    def __call__(self, *args, **kwargs):
        self._report_unexpected_call(self.name, args, kwargs)
    def on_method(self,name):
        class Expectation:
            def will_reply(_, return_value):
                self.expectations[name] = return_value
            def with_args(_,*args):
                class Expectation2:
                    def will_reply(_, return_value):
                        self.expectations_with_args[(name,args)] = return_value
                return Expectation2()
        return Expectation()
    def _report_unexpected_call(self, method_name, *args, **kwargs):
        assert False, (&quot;Unexpected call: %s(%s,%s)&quot; % ( method_name,
                     &#39;,&#39;.join(repr(arg) for arg in args),
                     &#39;,&#39;.join(&#39;%s=%s&#39; %(key,value) for key, value in
                         kwargs))
                     + &quot;Calls expected:%s and %s &quot; %
                     (self.expectations,
                         self.expectations_with_args))
&lt;/pre&gt;
Si tratta di una soluzione quick and dirty, molto dirty. Nonostante sia dirty
ha un suo valore. Scrivendola ho imparato che scrivere una classe di Mock non
richiede molto tempo e ora so che potrebbe volerci meno
tempo a scrivere un Mock in Python rispetto a trovare la libreria di mocking
giusta tra quelle disponibili in rete.&lt;br /&gt;
Credo che questo dipenda essenzialmente dal fatto che Python e&#39; un linguaggio
dinamico e che di conseguenza offre costrutti molto piu&#39; semplici per fare
metaprogramming rispetto ad altri linguaggi con tipizzazione piu&#39; statica.&lt;/div&gt;
</content>
  </entry>
  
  <entry>
    <title>Submit an HTML form using POST method via Java</title>
    <link href="http://andreafrancia.it"/>
    <updated>2010-09-04T00:00:00+02:00</updated>
    <id>http://andreafrancia.it/2010/09/submit-an-html-form-using-post-method-via-java</id>
    <content type="html">&lt;h1&gt;Submit an HTML form using POST method via Java&lt;/h1&gt;
&lt;div class=&#39;post&#39;&gt;
In the recent days I&#39;m studying how to implement HTTP/REST architecture in Java.&lt;br /&gt;
I decided to work without any REST framework, so nothing like &lt;a href=&quot;https://jersey.dev.java.net/&quot;&gt;Jersey&lt;/a&gt; or &lt;a href=&quot;http://www.restlet.org/&quot;&gt;restlet&lt;/a&gt;.&amp;nbsp;Instead I decided to exploit the good old Servlet API which seems to use an faithful model on how the HTTP works.&lt;br /&gt;
&lt;br /&gt;
And also I decided to starts from study how to design Web applications in a way that&amp;nbsp;uses correctly the HTTP protocol.&lt;br /&gt;
&lt;br /&gt;
During my study I didn&#39;t find a HTTP client which fit my requirements so I&#39;m writing some client functionalities from scratch. This is the way I implemented the posting of a form with only one parameter:&lt;br /&gt;
&lt;br /&gt;

&lt;div class=&quot;code&quot;&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;java&quot;&gt;&lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;InputStream&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;postForm&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;paramName&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;paramValue&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;throws&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;IOException&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;Object&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;

        &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;InputStream&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;postForm&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;throws&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;IOException&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;prepareConnectionToServer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;packageFormValuesInAMessage&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;submitTheMessage&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;theServerReply&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

        &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;prepareConnectionToServer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;throws&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;IOException&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;connection&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;URL&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;openConnection&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;connection&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;setDoInput&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;connection&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;setDoOutput&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;connection&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;setRequestProperty&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;Content-Type&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;application/x-www-form-urlencoded&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

        &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;URLConnection&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;connection&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

        &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;packageFormValuesInAMessage&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;throws&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;UnsupportedEncodingException&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;message&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;format&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;%s=%s&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;paramName&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;URLEncoder&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;encode&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;paramValue&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;UTF-8&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;));&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

        &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;message&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

        &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;submitTheMessage&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;throws&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;IOException&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;OutputStream&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;output&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;connection&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getOutputStream&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;output&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;write&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;message&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getBytes&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;UTF-8&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;));&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;output&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;close&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

        &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;InputStream&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;theServerReply&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;throws&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;IOException&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;connection&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getInputStream&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;o&quot;&gt;}.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;postForm&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
</content>
  </entry>
  
  <entry>
    <title>Povero modello a cascata</title>
    <link href="http://andreafrancia.it"/>
    <updated>2010-08-25T00:00:00+02:00</updated>
    <id>http://andreafrancia.it/2010/08/povero-modello-a-cascata</id>
    <content type="html">&lt;h1&gt;Povero modello a cascata&lt;/h1&gt;
&lt;div class=&#39;post&#39;&gt;
    &lt;a
        href=&quot;http://www.cartoonstock.com/newscartoons/cartoonists/bgr/lowres/bgrn848l.jpg&quot;
        imageanchor=&quot;1&quot; style=&quot;clear: right; float: right; margin-bottom: 1em;
        margin-left: 1em;&quot;&gt;&lt;img border=&quot;0&quot; height=&quot;320&quot;
        src=&quot;http://www.cartoonstock.com/newscartoons/cartoonists/bgr/lowres/bgrn848l.jpg&quot;
        width=&quot;256&quot; /&gt;&lt;/a&gt;Tutti se la prendono con il modello di sviluppo
    software a cascata.&lt;br /&gt;
    &lt;br /&gt;
    Da un certo punto di vista fanno bene perché è una soluzione che ha diversi
    difetti, come ad esempio il fatto che non consente di utilizzare la
    esperienza e la conoscenze acquisite nel corso del progetto.&lt;br /&gt;
    &lt;br /&gt;
    Però, nonostante questo, &amp;nbsp;ci sono dei pregi che gli vanno
    riconosciuti. Non tanto perché lui si offenda (è un modello non può
    offendersi!) ma il rischio è sempre quello di gettare via il bambino con
    l&#39;acqua sporca.&lt;br /&gt;
    &lt;br /&gt;
    Sono stato quindi contento di leggere questo &lt;a
        href=&quot;http://www.scrum-breakfast.com/2010/07/in-praise-of-waterfall.html&quot;&gt;post&lt;/a&gt;&amp;nbsp;dove
    Peter Stevens ne sottolinea i principi (cito letteralmente):&lt;br /&gt;

    &lt;blockquote&gt;Waterfall says:&lt;br /&gt;
        1. Figure out the business requirements first&lt;br /&gt;
        2. Don&#39;t change your requirements while you are implementing&lt;br /&gt;
        3. Test your code to ensure that it works&lt;/blockquote&gt;
    &lt;div&gt;Se ci pensate bene sono gli stessi principi (che dovrebbero essere)
        applicati quando si usa Scrum, &amp;nbsp;XP, o TDD, l&#39;unica (grande)
        differenza è la scala temporale.&lt;/div&gt;
&lt;/div&gt;

&lt;h2&gt;Comments&lt;/h2&gt;
&lt;div class=&#39;comments&#39;&gt;
    &lt;div class=&#39;comment&#39;&gt;
        &lt;div class=&#39;author&#39;&gt;.MOz&lt;/div&gt;
        &lt;div class=&#39;content&#39;&gt;Come dimostra 
            &lt;a href=&quot;http://andreamoz.blogspot.com/2010/04/way-to-go-waterfall.html&quot; rel=&quot;nofollow&quot;&gt;questo studio&lt;/a&gt; il modello a cascata è spettacolare :-)&lt;/div&gt;
    &lt;/div&gt;
&lt;/div&gt;
</content>
  </entry>
  
  <entry>
    <title>Il Mac OS X</title>
    <link href="http://andreafrancia.it"/>
    <updated>2010-07-03T00:00:00+02:00</updated>
    <id>http://andreafrancia.it/2010/07/il-mac-os-x</id>
    <content type="html">&lt;h1&gt;Il Mac OS X&lt;/h1&gt;
&lt;div class=&#39;post&#39;&gt;
Il Mac OS X è unico ed avvicente.&lt;br /&gt;
&lt;br /&gt;
Unisce in modo unico i difetti di Windows a con quelli di Linux e, non contento, aggiunge qualcosa di speciale che fa solo lui. Il magico effetto mac!&lt;br /&gt;
&lt;br /&gt;
Risultato? Non c&#39;e&#39; il taglia e incolla dei file. Non puoi fare copia path della cartella che stai visualizzando. Il cestino non si ricorda la data di cancellazione e la posizione originale. Non c&#39;e&#39; un sistema a pacchetti unico. È possibile avere tre diverse versioni di Ruby (o Python) e non saperlo (macruby, ruby su macports, ruby su fink).&lt;br /&gt;
&lt;br /&gt;
Il mac aiuta ad esercitare la mente. Su linux è quasi banale usare &#39;ls --color&#39;, &#39;ls --sort=time&#39;. Gli utenti mac hanno più memoria ed usano &#39;ls -G&#39; e &#39;ls -t&#39;. Sapete come risponde il mac alla frase &#39;ls --help&#39;? Così:&lt;br /&gt;
&lt;br /&gt;
[andreafrancia@deneb ~]$ ls --help&lt;br /&gt;
/bin/ls: illegal option -- -&lt;br /&gt;
usage: ls [-ABCFGHLOPRSTUWabcdefghiklmnopqrstuwx1] [file ...]&lt;br /&gt;
&lt;br /&gt;
Sono proprio belle le utility BSD!&lt;/div&gt;
&lt;h2&gt;Comments&lt;/h2&gt;
&lt;div class=&#39;comments&#39;&gt;
&lt;div class=&#39;comment&#39;&gt;
&lt;div class=&#39;author&#39;&gt;rene gommes&lt;/div&gt;
&lt;div class=&#39;content&#39;&gt;
Joshua 24:14, &amp;quot;Now fear the Lord and serve him with all faithfulness. Throw away the gods your forefathers worshiped [i.e. linux, windows] beyond the River and in Egypt, and serve the Lord.&amp;quot;&lt;br /&gt;&lt;br /&gt;I_Samuel, 12:24, &amp;quot;But be sure to fear the Lord and serve him faithfully with all your heart; consider what great things [i.e. backlit keys, one button mice] he has done for you.&amp;quot;&lt;br /&gt;&lt;br /&gt;I_Chronicles, 16:25-26, &amp;quot;For great is the Lord and most worthy of praise; he is to be feared above all gods [because the subtle hardware-software equilibrium is so fragile] . For all the gods of the nations are idols, but the Lord made the heavens.&amp;quot;&lt;br /&gt;&lt;br /&gt;Psalms, 2:11, &amp;quot;Serve the Lord with fear and rejoice with trembling.&amp;quot; [use the Mac, but be aware that you can easily break the suysstem]&lt;br /&gt;&lt;br /&gt;Isaiah, 50:10, &amp;quot;Who among you fears the Lord and obeys the word of his servant? Let him who walks in the dark, who has no light [this refers to the already mentioned backlit keyboard], trust in the name of the Lord and rely on his God.&amp;quot; &lt;br /&gt;&lt;br /&gt;I just love Mac bashing! My son, who&amp;#39;s an IT professional, ex linux fan, eventually saw light and converted to the Mac. He did a lot of evangelising at a time when I was about to buy a new computer, and he almost convinced me of the perfection of the thing. Then I discovered that he actually fears his Mac and rejects any software/hardware that might alter or even jeopardise the purity of the System.&lt;br /&gt;&lt;br /&gt;I am against all types of worship: I prefer to be in control myself. I do not let others decide that GMOs are good (or bad) for me, and I hate sects!&lt;br /&gt;&lt;br /&gt;The Macmania is no exception.&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#39;comment&#39;&gt;
&lt;div class=&#39;author&#39;&gt;Andrea Francia&lt;/div&gt;
&lt;div class=&#39;content&#39;&gt;
No. In effetti le stesse funzionalità (review della lista dei dei processi e terminazione) sono disponibili in qualsiasi altro sistema operativo moderno, sia esso *nix  o Windows.&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#39;comment&#39;&gt;
&lt;div class=&#39;author&#39;&gt;ynw&lt;/div&gt;
&lt;div class=&#39;content&#39;&gt;
Neanche vedere Microsoft Word nel top a portata di kill risolleva la tua esperienza utente? ;)&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
</content>
  </entry>
  
  <entry>
    <title>Gabriele Lana sui Code Kata al</title>
    <link href="http://andreafrancia.it"/>
    <updated>2010-06-19T00:00:00+02:00</updated>
    <id>http://andreafrancia.it/2010/06/gabriele-lana-sui-code-kata-al-codingdojo</id>
    <content type="html">&lt;h1&gt;Gabriele Lana sui Code Kata al&lt;/h1&gt;
&lt;div class=&#39;post&#39;&gt;
&lt;div style=&quot;margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px;&quot;&gt;&lt;a href=&quot;http://4.bp.blogspot.com/_bikdOOm3kpc/TByAN5b6GkI/AAAAAAAAEGI/4ptPugnc_fU/s1600/Photo+on+2010-06-19+at+10.29.jpg&quot; imageanchor=&quot;1&quot; style=&quot;clear: right; float: right; margin-bottom: 1em; margin-left: 1em;&quot;&gt;&lt;img border=&quot;0&quot; height=&quot;150&quot; src=&quot;http://4.bp.blogspot.com/_bikdOOm3kpc/TByAN5b6GkI/AAAAAAAAEGI/4ptPugnc_fU/s200/Photo+on+2010-06-19+at+10.29.jpg&quot; width=&quot;200&quot; /&gt;&lt;/a&gt;Il quick &amp;amp; dirty è &quot;quick&quot; perché è &quot;dirty&quot;?&amp;nbsp;&lt;/div&gt;&lt;div style=&quot;margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px;&quot;&gt;Secondo Gabriele Il &quot;quick&quot; é quick perché siamo abituato a farlo.&lt;/div&gt;Da dove viene il talento? Viene dalla genetica o dall&#39;ambiente?&amp;nbsp;Cos&#39;è la pratica profonda?&lt;br /&gt;
Cosa sono i code kata?&lt;br /&gt;
&lt;br /&gt;
Gabriele illustra come si è scoperto che la pratica profonda sia il vero e unico fattore comune tra le persone riconosciute di talento e spiega come applicare questa &quot;scoperta&quot; alla nostre performance nello sviluppo software.&lt;/div&gt;
</content>
  </entry>
  
  <entry>
    <title>Writing automatic tests using bash</title>
    <link href="http://andreafrancia.it"/>
    <updated>2010-06-11T00:00:00+02:00</updated>
    <id>http://andreafrancia.it/2010/06/writing-automatic-tests-using-bash</id>
    <content type="html">&lt;h1&gt;Writing automatic tests using bash&lt;/h1&gt;
&lt;div class=&#39;post&#39;&gt;
This may be not well know but the bash shell could also be used to write automatic test. These tests could be also used with Hudson which recognizes if they are failed or not.&lt;br /&gt;
&lt;br /&gt;
This is a little integration test for a legacy application:&lt;br /&gt;
&lt;br /&gt;
&lt;pre class=&quot;literal-block&quot; style=&quot;margin-left: 2em; margin-right: 2em;&quot;&gt;set -o errexit     # this tell bash to stop on any error
set -o xtrace      # this tell bash to print any command before execution

# setup the database
mysql -u root test-database &amp;lt;&amp;lt; EOF
    DELETE FROM orders_to_be_exported;
    INSERT INTO orders_to_be_exported(id) VALUES(&#39;1235&#39;);
    DELETE FROM order;
    INSERT INTO order(customer_name, amount) VALUES(&#39;andrea&#39;, &#39;1234&#39;);
EOF

# clean up filesystem
rm /tmp/orders/exported-*.order -f

# start up the application
mvn jetty:run

curl -X POST http://localhost:8080/application/export-orders

test -f /tmp/exported-1235.order  # this check if the file exists

# the following checks the contents of the file
diff /tmp/exported-1235.order - &amp;lt;&amp;lt; EOF
Customer: Andrea
Amount: 1234 eur
EOF&lt;/pre&gt;&lt;br /&gt;
Whenever this script fail in any of its operation it stops with an non zero exit code. This is because the&amp;nbsp;&lt;tt class=&quot;docutils literal&quot;&gt;set&amp;nbsp;&lt;span class=&quot;pre&quot; style=&quot;white-space: pre;&quot;&gt;-o&lt;/span&gt;&amp;nbsp;errexit&lt;/tt&gt;&amp;nbsp;instruction. As you may known a non zero exit status often means that an error has been occured. Also Hudson knows this and when this happen it marks the build as broken.&lt;br /&gt;
The&amp;nbsp;&lt;tt class=&quot;docutils literal&quot;&gt;set&amp;nbsp;&lt;span class=&quot;pre&quot; style=&quot;white-space: pre;&quot;&gt;-o&lt;/span&gt;&amp;nbsp;xtrace&lt;/tt&gt;&amp;nbsp;instructions tell to bash to write each command before executing it.&lt;br /&gt;
&lt;dl class=&quot;docutils&quot;&gt;&lt;dt&gt;This script demonstrate clearly how powerfull could be the shell, you can&lt;/dt&gt;
&lt;dd style=&quot;margin-bottom: 0.5em;&quot;&gt;&lt;ul class=&quot;first last simple&quot; style=&quot;margin-bottom: 1em; margin-top: 0px !important;&quot;&gt;&lt;li&gt;invoke ReST web services (with&amp;nbsp;&lt;tt class=&quot;docutils literal&quot;&gt;curl&lt;/tt&gt;)&lt;/li&gt;
&lt;li&gt;inspect the contents of a file (with&amp;nbsp;&lt;tt class=&quot;docutils literal&quot;&gt;diff&lt;/tt&gt;)&lt;/li&gt;
&lt;li&gt;test for the existence of a file (with&amp;nbsp;&lt;tt class=&quot;docutils literal&quot;&gt;test&amp;nbsp;&lt;span class=&quot;pre&quot; style=&quot;white-space: pre;&quot;&gt;-f&lt;/span&gt;&lt;/tt&gt;), a directory (&lt;tt class=&quot;docutils literal&quot;&gt;test&amp;nbsp;&lt;span class=&quot;pre&quot; style=&quot;white-space: pre;&quot;&gt;-d&lt;/span&gt;&lt;/tt&gt;), and many others facts about your filesystem&lt;/li&gt;
&lt;li&gt;interact with the database&lt;/li&gt;
&lt;/ul&gt;&lt;/dd&gt;&lt;/dl&gt;As you know these kind of test (integration tests) are slow and when they fails is difficult to know which component is broken. Nevertheless they are a essential to know if yours unit are playing well together.&lt;br /&gt;
They may be also useful when you work with legacy code. You may want to put some part of the system under unit test but can&#39;t do that before of many refactoring. You could create an integration test, refactor the code toward a better modularity and then place the unit test and, maybe, delete the integration test.&lt;/div&gt;
</content>
  </entry>
  
  <entry>
    <title>How to download from jars from mavencentral with Ant without Ivy</title>
    <link href="http://andreafrancia.it"/>
    <updated>2010-04-29T00:00:00+02:00</updated>
    <id>http://andreafrancia.it/2010/04/how-to-download-from-jars-from-mavencentral-with-ant-without-ivy</id>
    <content type="html">&lt;h1&gt;How to download from jars from mavencentral with Ant without Ivy&lt;/h1&gt;
&lt;div class=&#39;post&#39;&gt;
&lt;div&gt;For my Ant projects I want download the dependencies from the maven repository without converting it to maven.&lt;/div&gt; I solved putting this &amp;quot;build.xml&amp;quot; in the &amp;quot;lib&amp;quot; directory:&lt;br&gt;&lt;br&gt;&lt;pre&gt;&amp;lt;project name=&amp;quot;lib&amp;quot; default=&amp;quot;download-libs&amp;quot; 
         xmlns:artifact=&amp;quot;urn:maven-artifact-ant&amp;quot;&amp;gt;

  &amp;lt;property name=&amp;quot;maven.ant.tasks.jar&amp;quot; value=&amp;quot;maven-ant-tasks-2.1.0.jar&amp;quot; /&amp;gt;

  &amp;lt;target name=&amp;quot;download-libs&amp;quot; depends=&amp;quot;-init-maven-task&amp;quot;&amp;gt;
    &amp;lt;artifact:dependencies pathId=&amp;quot;dependencies.classpath&amp;quot;&amp;gt;
      &amp;lt;dependency groupId=&amp;quot;org.codehaus.groovy&amp;quot; 
                      artifactId=&amp;quot;groovy&amp;quot; version=&amp;quot;1.7.2&amp;quot; /&amp;gt; 
      &amp;lt;dependency groupId=&amp;quot;org.ccil.cowan.tagsoup&amp;quot; 
                      artifactId=&amp;quot;tagsoup&amp;quot; version=&amp;quot;1.2&amp;quot; /&amp;gt;

      &amp;lt;remoteRepository id=&amp;quot;maven-central&amp;quot; 
                      url=&amp;quot;http://repo1.maven.org/maven2/&amp;quot; /&amp;gt;
    &amp;lt;/artifact:dependencies&amp;gt;

    &amp;lt;move todir=&amp;quot;.&amp;quot;&amp;gt;
      &amp;lt;path refid=&amp;quot;dependencies.classpath&amp;quot;/&amp;gt;
    &amp;lt;/move&amp;gt;
  &amp;lt;/target&amp;gt;

  &amp;lt;target name=&amp;quot;-init-maven-task&amp;quot; depends=&amp;quot;-obtain-maven-task-jar&amp;quot;&amp;gt;
    &amp;lt;available property=&amp;quot;maven.ant.tasks.jar.exists&amp;quot; 
               file=&amp;quot;${maven.ant.tasks.jar}&amp;quot; /&amp;gt;
    &amp;lt;typedef resource=&amp;quot;org/apache/maven/artifact/ant/antlib.xml&amp;quot; 
             uri=&amp;quot;urn:maven-artifact-ant&amp;quot; classpath=&amp;quot;${maven.ant.tasks.jar}&amp;quot; /&amp;gt; 
  &amp;lt;/target&amp;gt;

  &amp;lt;target name=&amp;quot;-obtain-maven-task-jar&amp;quot;&amp;gt;
    &amp;lt;available property=&amp;quot;maven.ant.tasks.jar.exists&amp;quot; 
               file=&amp;quot;${maven.ant.tasks.jar}&amp;quot; /&amp;gt;
    &amp;lt;antcall target=&amp;quot;download-maven-jar&amp;quot;/&amp;gt;
  &amp;lt;/target&amp;gt;

  &amp;lt;target name=&amp;quot;download-maven-jar&amp;quot; unless=&amp;quot;maven.ant.tasks.jar.exists&amp;quot;&amp;gt;
    &amp;lt;property name=&amp;quot;maven.ant.tasks.url&amp;quot; 
              value=&amp;quot;http://www.apache.org/dist/maven/binaries/${maven.ant.tasks.jar}&amp;quot; /&amp;gt;
    &amp;lt;get src=&amp;quot;${maven.ant.tasks.url}&amp;quot; dest=&amp;quot;${maven.ant.tasks.jar}&amp;quot; /&amp;gt;
  &amp;lt;/target&amp;gt;

&amp;lt;/project&amp;gt;
&lt;/pre&gt;&lt;br&gt;&lt;div&gt;To download libs just type:&lt;/div&gt;&lt;div&gt;&lt;font face=&quot;&amp;#39;courier new&amp;#39;&quot;&gt;$ cd lib&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font face=&quot;&amp;#39;courier new&amp;#39;&quot;&gt;$ ant&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font face=&quot;&amp;#39;courier new&amp;#39;&quot;&gt;...&lt;/font&gt;&lt;/div&gt;&lt;br&gt;and all dependencies will be downloaded.&lt;br&gt;&lt;br&gt;&lt;/div&gt;
</content>
  </entry>
  
  <entry>
    <title>Presentazione su Google C++ Testing Framework e Visual Studio 2008 all'XPUG di Milano</title>
    <link href="http://andreafrancia.it"/>
    <updated>2010-04-15T00:00:00+02:00</updated>
    <id>http://andreafrancia.it/2010/04/presentazione-su-google-c-testing-framework-e-visual-studio-2008-all-xpug-di-milano</id>
    <content type="html">&lt;h1&gt;Presentazione su Google C++ Testing Framework e Visual Studio 2008 all&#39;XPUG di Milano&lt;/h1&gt;
&lt;div class=&#39;post&#39;&gt;
Sono appena tornato dal meeting XPUG di Milano dove ho presentato come usare &lt;a href=&quot;http://code.google.com/p/googletest/&quot;&gt;Google Test&lt;/a&gt; in Visual Studio 2008.

Le slides usate sono già disponibile su &lt;a href=&quot;http://www.slideshare.net/andreafrancia/google-c-testing-framework-in-visual-studio-2008&quot;&gt;slideshare&lt;/a&gt;.&lt;/div&gt;
</content>
  </entry>
  
  <entry>
    <title>Tutorial Google Test</title>
    <link href="http://andreafrancia.it"/>
    <updated>2010-04-01T00:00:00+02:00</updated>
    <id>http://andreafrancia.it/2010/04/tutorial-google-test</id>
    <content type="html">&lt;h1&gt;Tutorial Google Test&lt;/h1&gt;
&lt;div class=&#39;post&#39;&gt;
&lt;div&gt;&lt;p style=&quot;margin:0pt 0pt 12pt&quot;&gt;&lt;span style=&quot;font-family:&amp;#39;Times New Roman&amp;#39;&quot;&gt;&lt;font size=&quot;3&quot;&gt;Google Test è un framework di test per C++. In questa miniguida spi&lt;/font&gt;&lt;/span&gt;&lt;span style=&quot;font-family:&amp;#39;Times New Roman&amp;#39;&quot;&gt;&lt;font size=&quot;3&quot;&gt;ego come &lt;/font&gt;&lt;/span&gt;&lt;span style=&quot;font-family:&amp;#39;Times New Roman&amp;#39;&quot;&gt;&lt;font size=&quot;3&quot;&gt;usarlo in Visual Studio&lt;/font&gt;&lt;/span&gt;&lt;span style=&quot;font-family:&amp;#39;Times New Roman&amp;#39;&quot;&gt;&lt;font size=&quot;3&quot;&gt; 2008&lt;/font&gt;&lt;/span&gt;&lt;span style=&quot;font-family:&amp;#39;Times New Roman&amp;#39;&quot;&gt;&lt;font size=&quot;3&quot;&gt;.&lt;/font&gt;&lt;/span&gt;&lt;span style=&quot;font-family:&amp;#39;Times New Roman&amp;#39;&quot;&gt;&lt;font size=&quot;3&quot;&gt; Per seguire la guida non avete bisogno di conoscere Visual Studio 2008, dovete però avere un idea di cosa sia un framework xUnit, e dovete conoscere C o C++.&lt;/font&gt;&lt;/span&gt;&lt;/p&gt;&lt;h2 style=&quot;margin:12pt 0pt 3pt&quot;&gt;&lt;span style=&quot;font-family:Arial&quot;&gt;&lt;b&gt;&lt;i&gt;&lt;font size=&quot;4&quot;&gt;Scaricare e installare Google Test&lt;/font&gt;&lt;/i&gt;&lt;/b&gt;&lt;/span&gt;&lt;/h2&gt;&lt;p style=&quot;margin:0pt 0pt 12pt&quot;&gt;&lt;span style=&quot;font-family:&amp;#39;Times New Roman&amp;#39;&quot;&gt;&lt;font size=&quot;3&quot;&gt;Scarichiamo dal sito ufficiale l&amp;#39;ultima release, ad oggi il file &lt;/font&gt;&lt;/span&gt;&lt;a href=&quot;http://googletest.googlecode.com/files/gtest-1.4.0.zip&quot;&gt;&lt;span style=&quot;color:#0000ff; font-family:&amp;#39;Times New Roman&amp;#39;&quot;&gt;&lt;u&gt;&lt;font size=&quot;3&quot;&gt;gtest-1.4.0.zip&lt;/font&gt;&lt;/u&gt;&lt;/span&gt;&lt;/a&gt;&lt;span style=&quot;font-family:&amp;#39;Times New Roman&amp;#39;&quot;&gt;&lt;font size=&quot;3&quot;&gt; &lt;/font&gt;&lt;/span&gt;&lt;span style=&quot;font-family:&amp;#39;Times New Roman&amp;#39;&quot;&gt;&lt;font size=&quot;3&quot;&gt;e lo decompriamo&lt;/font&gt;&lt;/span&gt;&lt;span style=&quot;font-family:&amp;#39;Times New Roman&amp;#39;&quot;&gt;&lt;font size=&quot;3&quot;&gt;, per esempio&lt;/font&gt;&lt;/span&gt;&lt;span style=&quot;font-family:&amp;#39;Times New Roman&amp;#39;&quot;&gt;&lt;font size=&quot;3&quot;&gt; in c:\gtest-1.4.0.&lt;/font&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin:0pt 0pt 12pt&quot;&gt;&lt;span style=&quot;font-family:&amp;#39;Times New Roman&amp;#39;&quot;&gt;&lt;font size=&quot;3&quot;&gt;Google Test &lt;/font&gt;&lt;/span&gt;&lt;span style=&quot;font-family:&amp;#39;Times New Roman&amp;#39;&quot;&gt;&lt;font size=&quot;3&quot;&gt;supporta diversi compilatori tra cui &lt;/font&gt;&lt;/span&gt;&lt;span style=&quot;font-family:&amp;#39;Times New Roman&amp;#39;&quot;&gt;&lt;font size=&quot;3&quot;&gt;fortunatamene &lt;/font&gt;&lt;/span&gt;&lt;span style=&quot;font-family:&amp;#39;Times New Roman&amp;#39;&quot;&gt;&lt;font size=&quot;3&quot;&gt;Visual Studio&lt;/font&gt;&lt;/span&gt;&lt;span style=&quot;font-family:&amp;#39;Times New Roman&amp;#39;&quot;&gt;&lt;font size=&quot;3&quot;&gt; 2008. &lt;/font&gt;&lt;/span&gt;&lt;span style=&quot;font-family:&amp;#39;Times New Roman&amp;#39;&quot;&gt;&lt;font size=&quot;3&quot;&gt;I progetti di Visual&lt;/font&gt;&lt;/span&gt;&lt;span style=&quot;font-family:&amp;#39;Times New Roman&amp;#39;&quot;&gt;&lt;font size=&quot;3&quot;&gt; Studio si chiamano “Soluzioni”, d&lt;/font&gt;&lt;/span&gt;&lt;span style=&quot;font-family:&amp;#39;Times New Roman&amp;#39;&quot;&gt;&lt;font size=&quot;3&quot;&gt;entro la cartella &lt;/font&gt;&lt;/span&gt;&lt;span style=&quot;font-family:&amp;#39;Times New Roman&amp;#39;&quot;&gt;&lt;font size=&quot;3&quot;&gt;C:\gtest-1.4.0\msvc&lt;/font&gt;&lt;/span&gt; &lt;span style=&quot;font-family:&amp;#39;Times New Roman&amp;#39;&quot;&gt;&lt;font size=&quot;3&quot;&gt;ci sono due soluzioni&lt;/font&gt;&lt;/span&gt;&lt;span style=&quot;font-family:&amp;#39;Times New Roman&amp;#39;&quot;&gt;&lt;font size=&quot;3&quot;&gt;:&lt;/font&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin:0pt 0pt 12pt 36pt&quot;&gt;&lt;span style=&quot;font-family:Symbol&quot;&gt;&lt;font size=&quot;3&quot;&gt;·&lt;/font&gt;&lt;/span&gt;       &lt;span style=&quot;font-family:&amp;#39;Times New Roman&amp;#39;&quot;&gt;&lt;b&gt;&lt;font size=&quot;3&quot;&gt;gtest.sln&lt;/font&gt;&lt;/b&gt;&lt;/span&gt;&lt;span style=&quot;font-family:&amp;#39;Times New Roman&amp;#39;&quot;&gt;&lt;font size=&quot;3&quot;&gt; (da usare se volete linkare staticamente la libreria gtest&lt;/font&gt;&lt;/span&gt;&lt;span style=&quot;font-family:&amp;#39;Times New Roman&amp;#39;&quot;&gt;&lt;font size=&quot;3&quot;&gt;,&lt;/font&gt;&lt;/span&gt;&lt;span style=&quot;font-family:&amp;#39;Times New Roman&amp;#39;&quot;&gt;&lt;font size=&quot;3&quot;&gt;come .LIB&lt;/font&gt;&lt;/span&gt;&lt;span style=&quot;font-family:&amp;#39;Times New Roman&amp;#39;&quot;&gt;&lt;font size=&quot;3&quot;&gt;)&lt;/font&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin:0pt 0pt 12pt 36pt&quot;&gt;&lt;span style=&quot;font-family:Symbol&quot;&gt;&lt;font size=&quot;3&quot;&gt;·&lt;/font&gt;&lt;/span&gt;       &lt;span style=&quot;font-family:&amp;#39;Times New Roman&amp;#39;&quot;&gt;&lt;b&gt;&lt;font size=&quot;3&quot;&gt;gtest-md.sln&lt;/font&gt;&lt;/b&gt;&lt;/span&gt;&lt;span style=&quot;font-family:&amp;#39;Times New Roman&amp;#39;&quot;&gt;&lt;font size=&quot;3&quot;&gt; (da usare se volete linkare dinamicamente la libreria&lt;/font&gt;&lt;/span&gt;&lt;span style=&quot;font-family:&amp;#39;Times New Roman&amp;#39;&quot;&gt;&lt;font size=&quot;3&quot;&gt;, come DLL&lt;/font&gt;&lt;/span&gt;&lt;span style=&quot;font-family:&amp;#39;Times New Roman&amp;#39;&quot;&gt;&lt;font size=&quot;3&quot;&gt;).&lt;/font&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin:0pt 0pt 12pt&quot;&gt;&lt;span style=&quot;font-family:&amp;#39;Times New Roman&amp;#39;&quot;&gt;&lt;font size=&quot;3&quot;&gt;Potete scegliere di usare sia uno che l’altro, io per &lt;/font&gt;&lt;/span&gt;&lt;span style=&quot;font-family:&amp;#39;Times New Roman&amp;#39;&quot;&gt;&lt;font size=&quot;3&quot;&gt;semplicità io scelgo di usare la libreria statica&lt;/font&gt;&lt;/span&gt;&lt;span style=&quot;font-family:&amp;#39;Times New Roman&amp;#39;&quot;&gt;&lt;font size=&quot;3&quot;&gt;.&lt;/font&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin:0pt 0pt 12pt&quot;&gt;&lt;span style=&quot;font-family:&amp;#39;Times New Roman&amp;#39;&quot;&gt;&lt;font size=&quot;3&quot;&gt;Prima di aprire la soluzione togliete &lt;/font&gt;&lt;/span&gt;&lt;span style=&quot;font-family:&amp;#39;Times New Roman&amp;#39;&quot;&gt;&lt;font size=&quot;3&quot;&gt;però l’eventuale &lt;/font&gt;&lt;/span&gt;&lt;span style=&quot;font-family:&amp;#39;Times New Roman&amp;#39;&quot;&gt;&lt;font size=&quot;3&quot;&gt;flag &lt;/font&gt;&lt;/span&gt;&lt;span style=&quot;font-family:&amp;#39;Times New Roman&amp;#39;&quot;&gt;&lt;font size=&quot;3&quot;&gt;“&lt;/font&gt;&lt;/span&gt;&lt;span style=&quot;font-family:&amp;#39;Times New Roman&amp;#39;&quot;&gt;&lt;font size=&quot;3&quot;&gt;read only&lt;/font&gt;&lt;/span&gt;&lt;span style=&quot;font-family:&amp;#39;Times New Roman&amp;#39;&quot;&gt;&lt;font size=&quot;3&quot;&gt;”&lt;/font&gt;&lt;/span&gt;&lt;span style=&quot;font-family:&amp;#39;Times New Roman&amp;#39;&quot;&gt;&lt;font size=&quot;3&quot;&gt; da tutti i file dentro msvc. &lt;/font&gt;&lt;/span&gt;&lt;span style=&quot;font-family:&amp;#39;Times New Roman&amp;#39;&quot;&gt;&lt;font size=&quot;3&quot;&gt;Se non lo fate ve ne pentirete &lt;/font&gt;&lt;/span&gt;&lt;span style=&quot;font-family:Wingdings&quot;&gt;&lt;font size=&quot;3&quot;&gt;J&lt;/font&gt;&lt;/span&gt;&lt;span style=&quot;font-family:&amp;#39;Times New Roman&amp;#39;&quot;&gt;&lt;font size=&quot;3&quot;&gt;. Quando &lt;/font&gt;&lt;/span&gt;&lt;span style=&quot;font-family:&amp;#39;Times New Roman&amp;#39;&quot;&gt;&lt;b&gt;&lt;font size=&quot;3&quot;&gt;gtest.sln&lt;/font&gt;&lt;/b&gt;&lt;/span&gt;&lt;span style=&quot;font-family:&amp;#39;Times New Roman&amp;#39;&quot;&gt;&lt;font size=&quot;3&quot;&gt; con Visual Studio&lt;/font&gt;&lt;/span&gt;&lt;span style=&quot;font-family:&amp;#39;Times New Roman&amp;#39;&quot;&gt;&lt;font size=&quot;3&quot;&gt; 2008 &lt;/font&gt;&lt;/span&gt;&lt;span style=&quot;font-family:&amp;#39;Times New Roman&amp;#39;&quot;&gt;&lt;font size=&quot;3&quot;&gt;vi chiederà di aggiornare la soluzione al nuovo formato, ditegli di sì con il solito Avanti, Avanti, Avanti. Se non avete tolto il readonly il Visual Studio si lamenterà.&lt;/font&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin:0pt 0pt 12pt&quot;&gt;&lt;span style=&quot;font-family:&amp;#39;Times New Roman&amp;#39;&quot;&gt;&lt;font size=&quot;3&quot;&gt;Una volta apete provvede alla build di tutta la soluzione con F7 (Build &amp;gt; Build Solution).&lt;/font&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin:0pt 0pt 12pt&quot;&gt;&lt;span style=&quot;font-family:&amp;#39;Times New Roman&amp;#39;&quot;&gt;&lt;font size=&quot;3&quot;&gt;Se tutto va bene dovrebbe crearvi i file &lt;/font&gt;&lt;/span&gt;&lt;span style=&quot;font-family:&amp;#39;Courier New&amp;#39;&quot;&gt;&lt;font size=&quot;2&quot;&gt;gtest_maind.lib&lt;/font&gt;&lt;/span&gt;&lt;span style=&quot;font-family:&amp;#39;Times New Roman&amp;#39;&quot;&gt;&lt;font size=&quot;3&quot;&gt; e &lt;/font&gt;&lt;/span&gt;&lt;span style=&quot;font-family:&amp;#39;Courier New&amp;#39;&quot;&gt;&lt;font size=&quot;2&quot;&gt;gtestd.lib&lt;/font&gt;&lt;/span&gt;&lt;span style=&quot;font-family:&amp;#39;Times New Roman&amp;#39;&quot;&gt;&lt;font size=&quot;3&quot;&gt; in &lt;/font&gt;&lt;/span&gt;&lt;span style=&quot;font-family:&amp;#39;Courier New&amp;#39;&quot;&gt;&lt;font size=&quot;2&quot;&gt;C:\gtest-1.4.0\msvc\gtest\Debug&lt;/font&gt;&lt;/span&gt;&lt;span style=&quot;font-family:&amp;#39;Times New Roman&amp;#39;&quot;&gt;&lt;font size=&quot;3&quot;&gt;.&lt;/font&gt;&lt;/span&gt;&lt;/p&gt;&lt;h2 style=&quot;margin:12pt 0pt 3pt&quot;&gt;&lt;span style=&quot;font-family:Arial&quot;&gt;&lt;b&gt;&lt;i&gt;&lt;font size=&quot;4&quot;&gt;Il primo progetto Visual Studio&lt;/font&gt;&lt;/i&gt;&lt;/b&gt;&lt;/span&gt;&lt;/h2&gt;&lt;p style=&quot;margin:0pt 0pt 12pt&quot;&gt;&lt;span style=&quot;font-family:&amp;#39;Times New Roman&amp;#39;&quot;&gt;&lt;font size=&quot;3&quot;&gt;Se siete pratici di Visual Studio saltate pure al prossimo paragrafo. Se come me non siete pratici seguitelo.&lt;/font&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin:0pt 0pt 12pt&quot;&gt;&lt;span style=&quot;font-family:&amp;#39;Times New Roman&amp;#39;&quot;&gt;&lt;font size=&quot;3&quot;&gt;Creiamo&lt;/font&gt;&lt;/span&gt;&lt;span style=&quot;font-family:&amp;#39;Times New Roman&amp;#39;&quot;&gt;&lt;font size=&quot;3&quot;&gt; il primo progetto di test&lt;/font&gt;&lt;/span&gt;&lt;span style=&quot;font-family:&amp;#39;Times New Roman&amp;#39;&quot;&gt;&lt;font size=&quot;3&quot;&gt;,  da&lt;/font&gt;&lt;/span&gt;&lt;span style=&quot;font-family:&amp;#39;Times New Roman&amp;#39;&quot;&gt;&lt;font size=&quot;3&quot;&gt;Visual Studio scegliamo:&lt;/font&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin:0pt 0pt 12pt&quot;&gt;&lt;span style=&quot;font-family:&amp;#39;Times New Roman&amp;#39;&quot;&gt;&lt;i&gt;&lt;font size=&quot;3&quot;&gt;File &amp;gt; New &amp;gt; New Project &lt;/font&gt;&lt;/i&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin:0pt 0pt 12pt&quot;&gt;&lt;span style=&quot;font-family:&amp;#39;Times New Roman&amp;#39;&quot;&gt;&lt;font size=&quot;3&quot;&gt;e &lt;/font&gt;&lt;/span&gt;&lt;span style=&quot;font-family:&amp;#39;Times New Roman&amp;#39;&quot;&gt;&lt;font size=&quot;3&quot;&gt;scegliamo &lt;/font&gt;&lt;/span&gt;&lt;span style=&quot;font-family:&amp;#39;Times New Roman&amp;#39;&quot;&gt;&lt;font size=&quot;3&quot;&gt;“&lt;/font&gt;&lt;/span&gt;&lt;span style=&quot;font-family:&amp;#39;Times New Roman&amp;#39;&quot;&gt;&lt;font size=&quot;3&quot;&gt;Win32 Console Application&lt;/font&gt;&lt;/span&gt;&lt;span style=&quot;font-family:&amp;#39;Times New Roman&amp;#39;&quot;&gt;&lt;font size=&quot;3&quot;&gt;”.&lt;/font&gt;&lt;/span&gt; &lt;span style=&quot;font-family:&amp;#39;Times New Roman&amp;#39;&quot;&gt;&lt;font size=&quot;3&quot;&gt;Diamo al progetto un nome qualsiasi, &lt;/font&gt;&lt;/span&gt;&lt;span style=&quot;font-family:&amp;#39;Times New Roman&amp;#39;&quot;&gt;&lt;font size=&quot;3&quot;&gt;io ho usato &lt;/font&gt;&lt;/span&gt;&lt;span style=&quot;font-family:&amp;#39;Times New Roman&amp;#39;&quot;&gt;&lt;font size=&quot;3&quot;&gt;&amp;quot;LearningGoogleTest&amp;quot;.&lt;/font&gt;&lt;/span&gt; &lt;span style=&quot;font-family:&amp;#39;Times New Roman&amp;#39;&quot;&gt;&lt;font size=&quot;3&quot;&gt;Se il wizard ve lo chiede, sappiate che le &lt;/font&gt;&lt;/span&gt;&lt;span style=&quot;font-family:&amp;#39;Times New Roman&amp;#39;&quot;&gt;&lt;font size=&quot;3&quot;&gt;&amp;quot;Precompiled Header&amp;quot; non &lt;/font&gt;&lt;/span&gt;&lt;span style=&quot;font-family:&amp;#39;Times New Roman&amp;#39;&quot;&gt;&lt;font size=&quot;3&quot;&gt;vi &lt;/font&gt;&lt;/span&gt;&lt;span style=&quot;font-family:&amp;#39;Times New Roman&amp;#39;&quot;&gt;&lt;font size=&quot;3&quot;&gt;servono.&lt;/font&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin:0pt 0pt 12pt&quot;&gt;&lt;span style=&quot;font-family:&amp;#39;Times New Roman&amp;#39;&quot;&gt;&lt;font size=&quot;3&quot;&gt;Il risultato dovrebbe essere simile a questo:&lt;/font&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin:0pt 0pt 13.5pt&quot;&gt;&lt;img src=&quot;http://docs.google.com/File?id=dcwhf6k8_909gz4vcdt_b&quot; width=&quot;249&quot; height=&quot;217&quot; alt=&quot;&quot; style=&quot;border:none&quot;&gt;&lt;/img&gt;&lt;/p&gt;&lt;p style=&quot;margin:0pt 0pt 12pt&quot;&gt;&lt;span style=&quot;font-family:&amp;#39;Times New Roman&amp;#39;&quot;&gt;&lt;font size=&quot;3&quot;&gt;I &lt;/font&gt;&lt;/span&gt;&lt;span style=&quot;font-family:&amp;#39;Times New Roman&amp;#39;&quot;&gt;&lt;font size=&quot;3&quot;&gt;file stdafx.h, stdafx.cpp, targetver.h &lt;/font&gt;&lt;/span&gt;&lt;span style=&quot;font-family:&amp;#39;Times New Roman&amp;#39;&quot;&gt;&lt;font size=&quot;3&quot;&gt;sono &lt;/font&gt;&lt;/span&gt;&lt;span style=&quot;font-family:&amp;#39;Times New Roman&amp;#39;&quot;&gt;&lt;font size=&quot;3&quot;&gt;creati &lt;/font&gt;&lt;/span&gt;&lt;span style=&quot;font-family:&amp;#39;Times New Roman&amp;#39;&quot;&gt;&lt;font size=&quot;3&quot;&gt;gratuitamente &lt;/font&gt;&lt;/span&gt;&lt;span style=&quot;font-family:&amp;#39;Times New Roman&amp;#39;&quot;&gt;&lt;font size=&quot;3&quot;&gt;dal Visual Studio &lt;/font&gt;&lt;/span&gt;&lt;span style=&quot;font-family:&amp;#39;Times New Roman&amp;#39;&quot;&gt;&lt;font size=&quot;3&quot;&gt;e per i miei scopi non &lt;/font&gt;&lt;/span&gt;&lt;span style=&quot;font-family:&amp;#39;Times New Roman&amp;#39;&quot;&gt;&lt;font size=&quot;3&quot;&gt;valgono lo spazio che occupano&lt;/font&gt;&lt;/span&gt;&lt;span style=&quot;font-family:&amp;#39;Times New Roman&amp;#39;&quot;&gt;&lt;font size=&quot;3&quot;&gt;, quindi io li cancello.&lt;/font&gt;&lt;/span&gt;&lt;span style=&quot;font-family:&amp;#39;Times New Roman&amp;#39;&quot;&gt;&lt;font size=&quot;3&quot;&gt; &lt;/font&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin:0pt 0pt 12pt&quot;&gt;&lt;span style=&quot;font-family:&amp;#39;Times New Roman&amp;#39;&quot;&gt;&lt;font size=&quot;3&quot;&gt;Dato che non sono pratico di Visual Studio prima &lt;/font&gt;&lt;/span&gt;&lt;span style=&quot;font-family:&amp;#39;Times New Roman&amp;#39;&quot;&gt;&lt;font size=&quot;3&quot;&gt;di procedere oltre &lt;/font&gt;&lt;/span&gt;&lt;span style=&quot;font-family:&amp;#39;Times New Roman&amp;#39;&quot;&gt;&lt;font size=&quot;3&quot;&gt;provo con un Hello World&lt;/font&gt;&lt;/span&gt;&lt;span style=&quot;font-family:&amp;#39;Times New Roman&amp;#39;&quot;&gt;&lt;font size=&quot;3&quot;&gt;:&lt;/font&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin:0pt 0pt 0pt 36pt&quot;&gt;&lt;span style=&quot;color:#008000; font-family:&amp;#39;Courier New&amp;#39;&quot;&gt;&lt;font size=&quot;2&quot;&gt;// LearningGoogleTest.cpp&lt;/font&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin:0pt 0pt 0pt 36pt&quot;&gt;&lt;span style=&quot;color:#008000; font-family:&amp;#39;Courier New&amp;#39;&quot;&gt;&lt;font size=&quot;2&quot;&gt; &lt;/font&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin:0pt 0pt 0pt 36pt&quot;&gt;&lt;span style=&quot;color:#0000ff; font-family:&amp;#39;Courier New&amp;#39;&quot;&gt;&lt;font size=&quot;2&quot;&gt;#include&lt;/font&gt;&lt;/span&gt; &lt;span style=&quot;color:#a31515; font-family:&amp;#39;Courier New&amp;#39;&quot;&gt;&lt;font size=&quot;2&quot;&gt;&amp;lt;stdio.h&amp;gt;&lt;/font&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin:0pt 0pt 0pt 36pt&quot;&gt;&lt;span style=&quot;font-family:&amp;#39;Courier New&amp;#39;&quot;&gt;&lt;font size=&quot;2&quot;&gt;              &lt;/font&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin:0pt 0pt 0pt 36pt&quot;&gt;&lt;span style=&quot;color:#0000ff; font-family:&amp;#39;Courier New&amp;#39;&quot;&gt;&lt;font size=&quot;2&quot;&gt;int&lt;/font&gt;&lt;/span&gt;&lt;span style=&quot;font-family:&amp;#39;Courier New&amp;#39;&quot;&gt;&lt;font size=&quot;2&quot;&gt; main(&lt;/font&gt;&lt;/span&gt;&lt;span style=&quot;color:#0000ff; font-family:&amp;#39;Courier New&amp;#39;&quot;&gt;&lt;font size=&quot;2&quot;&gt;int&lt;/font&gt;&lt;/span&gt;&lt;span style=&quot;font-family:&amp;#39;Courier New&amp;#39;&quot;&gt;&lt;font size=&quot;2&quot;&gt; argc, &lt;/font&gt;&lt;/span&gt;&lt;span style=&quot;color:#0000ff; font-family:&amp;#39;Courier New&amp;#39;&quot;&gt;&lt;font size=&quot;2&quot;&gt;char&lt;/font&gt;&lt;/span&gt;&lt;span style=&quot;font-family:&amp;#39;Courier New&amp;#39;&quot;&gt;&lt;font size=&quot;2&quot;&gt; * argv[]) {&lt;/font&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin:0pt 0pt 0pt 36pt&quot;&gt;&lt;span style=&quot;font-family:&amp;#39;Courier New&amp;#39;&quot;&gt;&lt;font size=&quot;2&quot;&gt;    printf(&lt;/font&gt;&lt;/span&gt;&lt;span style=&quot;color:#a31515; font-family:&amp;#39;Courier New&amp;#39;&quot;&gt;&lt;font size=&quot;2&quot;&gt;&amp;quot;Hello world!\n&amp;quot;&lt;/font&gt;&lt;/span&gt;&lt;span style=&quot;font-family:&amp;#39;Courier New&amp;#39;&quot;&gt;&lt;font size=&quot;2&quot;&gt;);&lt;/font&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin:0pt 0pt 0pt 36pt&quot;&gt;&lt;span style=&quot;font-family:&amp;#39;Courier New&amp;#39;&quot;&gt;&lt;font size=&quot;2&quot;&gt;    &lt;/font&gt;&lt;/span&gt;&lt;span style=&quot;color:#0000ff; font-family:&amp;#39;Courier New&amp;#39;&quot;&gt;&lt;font size=&quot;2&quot;&gt;return&lt;/font&gt;&lt;/span&gt;&lt;span style=&quot;font-family:&amp;#39;Courier New&amp;#39;&quot;&gt;&lt;font size=&quot;2&quot;&gt; 0;&lt;/font&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin:0pt 0pt 0pt 36pt&quot;&gt;&lt;span style=&quot;font-family:&amp;#39;Courier New&amp;#39;&quot;&gt;&lt;font size=&quot;2&quot;&gt;}&lt;/font&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin:0pt 0pt 12pt&quot;&gt;&lt;br&gt;&lt;span style=&quot;font-family:&amp;#39;Times New Roman&amp;#39;&quot;&gt;&lt;font size=&quot;3&quot;&gt;Con &lt;/font&gt;&lt;/span&gt;&lt;span style=&quot;font-family:&amp;#39;Times New Roman&amp;#39;&quot;&gt;&lt;font size=&quot;3&quot;&gt;CTRL+F5 (Debug &amp;gt; Start Without Debugging) &lt;/font&gt;&lt;/span&gt;&lt;span style=&quot;font-family:&amp;#39;Times New Roman&amp;#39;&quot;&gt;&lt;font size=&quot;3&quot;&gt;possiamo ammirare la nostra creazione:&lt;/font&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin:0pt 0pt 12pt; text-align:center&quot;&gt;&lt;img src=&quot;http://docs.google.com/File?id=dcwhf6k8_91g7b3v8hd_b&quot; width=&quot;373&quot; height=&quot;127&quot; alt=&quot;&quot; style=&quot;border:none&quot;&gt;&lt;/img&gt;&lt;/p&gt;&lt;p style=&quot;margin:0pt 0pt 12pt&quot;&gt;&lt;span style=&quot;font-family:&amp;#39;Times New Roman&amp;#39;&quot;&gt;&lt;font size=&quot;3&quot;&gt;Notate quanto sia gentile Visual Studio&lt;/font&gt;&lt;/span&gt;&lt;span style=&quot;font-family:&amp;#39;Times New Roman&amp;#39;&quot;&gt;&lt;font size=&quot;3&quot;&gt; 2008&lt;/font&gt;&lt;/span&gt;&lt;span style=&quot;font-family:&amp;#39;Times New Roman&amp;#39;&quot;&gt;&lt;font size=&quot;3&quot;&gt; a chiedervi di schiaccciare un tast&lt;/font&gt;&lt;/span&gt;&lt;span style=&quot;font-family:&amp;#39;Times New Roman&amp;#39;&quot;&gt;&lt;font size=&quot;3&quot;&gt;o prima di chiudere la finestra, Visual Studio 6.0 non era così simpatico.&lt;/font&gt;&lt;/span&gt;&lt;/p&gt;&lt;h2 style=&quot;margin:12pt 0pt 3pt&quot;&gt;&lt;span style=&quot;font-family:Arial&quot;&gt;&lt;b&gt;&lt;i&gt;&lt;font size=&quot;4&quot;&gt;Aggiungiamo la libreria&lt;/font&gt;&lt;/i&gt;&lt;/b&gt;&lt;/span&gt;&lt;span style=&quot;font-family:Arial&quot;&gt;&lt;b&gt;&lt;i&gt;&lt;font size=&quot;4&quot;&gt; Google Test &lt;/font&gt;&lt;/i&gt;&lt;/b&gt;&lt;/span&gt;&lt;span style=&quot;font-family:Arial&quot;&gt;&lt;b&gt;&lt;i&gt;&lt;font size=&quot;4&quot;&gt;al &lt;/font&gt;&lt;/i&gt;&lt;/b&gt;&lt;/span&gt;&lt;span style=&quot;font-family:Arial&quot;&gt;&lt;b&gt;&lt;i&gt;&lt;font size=&quot;4&quot;&gt;nostro progetto&lt;/font&gt;&lt;/i&gt;&lt;/b&gt;&lt;/span&gt;&lt;/h2&gt;&lt;p style=&quot;margin:0pt 0pt 12pt&quot;&gt;&lt;span style=&quot;font-family:&amp;#39;Times New Roman&amp;#39;&quot;&gt;&lt;font size=&quot;3&quot;&gt;Le librerie C/C++ sono una scocciatura perché per poterle usare devi sistemare due cose:&lt;/font&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin:0pt 0pt 12pt 36pt&quot;&gt;&lt;span style=&quot;font-family:Symbol&quot;&gt;&lt;font size=&quot;3&quot;&gt;·&lt;/font&gt;&lt;/span&gt;       &lt;span style=&quot;font-family:&amp;#39;Times New Roman&amp;#39;&quot;&gt;&lt;font size=&quot;3&quot;&gt;i path dei file header (.h)&lt;/font&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin:0pt 0pt 12pt 36pt&quot;&gt;&lt;span style=&quot;font-family:Symbol&quot;&gt;&lt;font size=&quot;3&quot;&gt;·&lt;/font&gt;&lt;/span&gt;       &lt;span style=&quot;font-family:&amp;#39;Times New Roman&amp;#39;&quot;&gt;&lt;font size=&quot;3&quot;&gt;i path dei file di libreria (.dll o .lib)&lt;/font&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin:0pt 0pt 12pt&quot;&gt;&lt;span style=&quot;font-family:&amp;#39;Times New Roman&amp;#39;&quot;&gt;&lt;font size=&quot;3&quot;&gt;Io preferisco affrontare questi problemi uno alla volta.&lt;/font&gt;&lt;/span&gt;&lt;/p&gt;&lt;h2 style=&quot;margin:12pt 0pt 3pt&quot;&gt;&lt;span style=&quot;font-family:Arial&quot;&gt;&lt;b&gt;&lt;i&gt;&lt;font size=&quot;4&quot;&gt;Sistemare i path degli headers&lt;/font&gt;&lt;/i&gt;&lt;/b&gt;&lt;/span&gt;&lt;/h2&gt;&lt;p style=&quot;margin:0pt 0pt 12pt&quot;&gt;&lt;span style=&quot;font-family:&amp;#39;Times New Roman&amp;#39;&quot;&gt;&lt;font size=&quot;3&quot;&gt;Includiamo&lt;/font&gt;&lt;/span&gt;&lt;span style=&quot;font-family:&amp;#39;Times New Roman&amp;#39;&quot;&gt;&lt;font size=&quot;3&quot;&gt; l&amp;#39;header di gtest&lt;/font&gt;&lt;/span&gt;&lt;span style=&quot;font-family:&amp;#39;Times New Roman&amp;#39;&quot;&gt;&lt;font size=&quot;3&quot;&gt; in &lt;/font&gt;&lt;/span&gt;&lt;span style=&quot;font-family:&amp;#39;Times New Roman&amp;#39;&quot;&gt;&lt;b&gt;&lt;font size=&quot;3&quot;&gt;“&lt;/font&gt;&lt;/b&gt;&lt;/span&gt;&lt;span style=&quot;font-family:&amp;#39;Times New Roman&amp;#39;&quot;&gt;&lt;b&gt;&lt;font size=&quot;3&quot;&gt;LearningGoogleTest.cpp”&lt;/font&gt;&lt;/b&gt;&lt;/span&gt;&lt;span style=&quot;font-family:&amp;#39;Times New Roman&amp;#39;&quot;&gt;&lt;font size=&quot;3&quot;&gt;:&lt;/font&gt;&lt;/span&gt;&lt;/p&gt;&lt;table cellspacing=&quot;0&quot; cellpadding=&quot;0&quot; style=&quot; margin-left:0pt&quot; class=&quot;zeroBorder&quot;&gt;&lt;tr&gt;&lt;td style=&quot; vertical-align:top; width:221.4pt&quot;&gt;&lt;p style=&quot;margin:0pt&quot;&gt;&lt;span style=&quot;color:#008000; font-family:&amp;#39;Courier New&amp;#39;&quot;&gt;&lt;font size=&quot;2&quot;&gt;// LearningGoogleTest.cpp&lt;/font&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin:0pt&quot;&gt;&lt;span style=&quot;color:#008000; font-family:&amp;#39;Courier New&amp;#39;&quot;&gt;&lt;font size=&quot;2&quot;&gt; &lt;/font&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin:0pt&quot;&gt;&lt;span style=&quot;color:#0000ff; font-family:&amp;#39;Courier New&amp;#39;&quot;&gt;&lt;font size=&quot;2&quot;&gt;#include&lt;/font&gt;&lt;/span&gt; &lt;span style=&quot;color:#a31515; font-family:&amp;#39;Courier New&amp;#39;&quot;&gt;&lt;font size=&quot;2&quot;&gt;&amp;lt;stdio.h&amp;gt;&lt;/font&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin:0pt&quot;&gt;&lt;span style=&quot;font-family:&amp;#39;Courier New&amp;#39;&quot;&gt;&lt;font size=&quot;2&quot;&gt;              &lt;/font&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin:0pt&quot;&gt;&lt;span style=&quot;color:#0000ff; font-family:&amp;#39;Courier New&amp;#39;&quot;&gt;&lt;font size=&quot;2&quot;&gt;int&lt;/font&gt;&lt;/span&gt;&lt;span style=&quot;font-family:&amp;#39;Courier New&amp;#39;&quot;&gt;&lt;font size=&quot;2&quot;&gt; main(&lt;/font&gt;&lt;/span&gt;&lt;span style=&quot;color:#0000ff; font-family:&amp;#39;Courier New&amp;#39;&quot;&gt;&lt;font size=&quot;2&quot;&gt;int&lt;/font&gt;&lt;/span&gt;&lt;span style=&quot;font-family:&amp;#39;Courier New&amp;#39;&quot;&gt;&lt;font size=&quot;2&quot;&gt; argc, &lt;/font&gt;&lt;/span&gt;&lt;span style=&quot;color:#0000ff; font-family:&amp;#39;Courier New&amp;#39;&quot;&gt;&lt;font size=&quot;2&quot;&gt;char&lt;/font&gt;&lt;/span&gt;&lt;span style=&quot;font-family:&amp;#39;Courier New&amp;#39;&quot;&gt;&lt;font size=&quot;2&quot;&gt; * argv[]) {&lt;/font&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin:0pt&quot;&gt;&lt;span style=&quot;font-family:&amp;#39;Courier New&amp;#39;&quot;&gt;&lt;font size=&quot;2&quot;&gt;    printf(&lt;/font&gt;&lt;/span&gt;&lt;span style=&quot;color:#a31515; font-family:&amp;#39;Courier New&amp;#39;&quot;&gt;&lt;font size=&quot;2&quot;&gt;&amp;quot;Hello world!\n&amp;quot;&lt;/font&gt;&lt;/span&gt;&lt;span style=&quot;font-family:&amp;#39;Courier New&amp;#39;&quot;&gt;&lt;font size=&quot;2&quot;&gt;);&lt;/font&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin:0pt&quot;&gt;&lt;span style=&quot;font-family:&amp;#39;Courier New&amp;#39;&quot;&gt;&lt;font size=&quot;2&quot;&gt;    &lt;/font&gt;&lt;/span&gt;&lt;span style=&quot;color:#0000ff; font-family:&amp;#39;Courier New&amp;#39;&quot;&gt;&lt;font size=&quot;2&quot;&gt;return&lt;/font&gt;&lt;/span&gt;&lt;span style=&quot;font-family:&amp;#39;Courier New&amp;#39;&quot;&gt;&lt;font size=&quot;2&quot;&gt; 0;&lt;/font&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin:0pt&quot;&gt;&lt;span style=&quot;font-family:&amp;#39;Courier New&amp;#39;&quot;&gt;&lt;font size=&quot;2&quot;&gt;}&lt;/font&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin:0pt 0pt 12pt&quot;&gt;&lt;span style=&quot;font-family:&amp;#39;Times New Roman&amp;#39;&quot;&gt;&lt;font size=&quot;3&quot;&gt; &lt;/font&gt;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td style=&quot; vertical-align:top; width:221.4pt&quot;&gt;&lt;p style=&quot;margin:0pt&quot;&gt;&lt;span style=&quot;color:#008000; font-family:&amp;#39;Courier New&amp;#39;&quot;&gt;&lt;font size=&quot;2&quot;&gt;// LearningGoogleTest.cpp&lt;/font&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin:0pt&quot;&gt;&lt;span style=&quot;color:#008000; font-family:&amp;#39;Courier New&amp;#39;&quot;&gt;&lt;font size=&quot;2&quot;&gt; &lt;/font&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin:0pt&quot;&gt;&lt;span style=&quot;color:#0000ff; font-family:&amp;#39;Courier New&amp;#39;&quot;&gt;&lt;font size=&quot;2&quot;&gt;#include&lt;/font&gt;&lt;/span&gt; &lt;span style=&quot;color:#a31515; font-family:&amp;#39;Courier New&amp;#39;&quot;&gt;&lt;font size=&quot;2&quot;&gt;&amp;lt;stdio.h&amp;gt;&lt;/font&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin:0pt&quot;&gt;&lt;span style=&quot;background-color:#ffff00; color:#0000ff; font-family:&amp;#39;Courier New&amp;#39;&quot;&gt;&lt;font size=&quot;2&quot;&gt;#include&lt;/font&gt;&lt;/span&gt; &lt;span style=&quot;background-color:#ffff00; color:#a31515; font-family:&amp;#39;Courier New&amp;#39;&quot;&gt;&lt;font size=&quot;2&quot;&gt;&amp;lt;gtest/gtest.h&amp;gt;&lt;/font&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin:0pt&quot;&gt;&lt;span style=&quot;font-family:&amp;#39;Courier New&amp;#39;&quot;&gt;&lt;font size=&quot;2&quot;&gt;              &lt;/font&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin:0pt&quot;&gt;&lt;span style=&quot;color:#0000ff; font-family:&amp;#39;Courier New&amp;#39;&quot;&gt;&lt;font size=&quot;2&quot;&gt;int&lt;/font&gt;&lt;/span&gt;&lt;span style=&quot;font-family:&amp;#39;Courier New&amp;#39;&quot;&gt;&lt;font size=&quot;2&quot;&gt; main(&lt;/font&gt;&lt;/span&gt;&lt;span style=&quot;color:#0000ff; font-family:&amp;#39;Courier New&amp;#39;&quot;&gt;&lt;font size=&quot;2&quot;&gt;int&lt;/font&gt;&lt;/span&gt;&lt;span style=&quot;font-family:&amp;#39;Courier New&amp;#39;&quot;&gt;&lt;font size=&quot;2&quot;&gt; argc, &lt;/font&gt;&lt;/span&gt;&lt;span style=&quot;color:#0000ff; font-family:&amp;#39;Courier New&amp;#39;&quot;&gt;&lt;font size=&quot;2&quot;&gt;char&lt;/font&gt;&lt;/span&gt;&lt;span style=&quot;font-family:&amp;#39;Courier New&amp;#39;&quot;&gt;&lt;font size=&quot;2&quot;&gt; * argv[]) {&lt;/font&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin:0pt&quot;&gt;&lt;span style=&quot;font-family:&amp;#39;Courier New&amp;#39;&quot;&gt;&lt;font size=&quot;2&quot;&gt;    printf(&lt;/font&gt;&lt;/span&gt;&lt;span style=&quot;color:#a31515; font-family:&amp;#39;Courier New&amp;#39;&quot;&gt;&lt;font size=&quot;2&quot;&gt;&amp;quot;Hello world!\n&amp;quot;&lt;/font&gt;&lt;/span&gt;&lt;span style=&quot;font-family:&amp;#39;Courier New&amp;#39;&quot;&gt;&lt;font size=&quot;2&quot;&gt;);&lt;/font&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin:0pt&quot;&gt;&lt;span style=&quot;font-family:&amp;#39;Courier New&amp;#39;&quot;&gt;&lt;font size=&quot;2&quot;&gt;    &lt;/font&gt;&lt;/span&gt;&lt;span style=&quot;color:#0000ff; font-family:&amp;#39;Courier New&amp;#39;&quot;&gt;&lt;font size=&quot;2&quot;&gt;return&lt;/font&gt;&lt;/span&gt;&lt;span style=&quot;font-family:&amp;#39;Courier New&amp;#39;&quot;&gt;&lt;font size=&quot;2&quot;&gt; 0;&lt;/font&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin:0pt&quot;&gt;&lt;span style=&quot;font-family:&amp;#39;Courier New&amp;#39;&quot;&gt;&lt;font size=&quot;2&quot;&gt;}&lt;/font&gt;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;p style=&quot;margin:0pt 0pt 12pt&quot;&gt;&lt;span style=&quot;font-family:&amp;#39;Times New Roman&amp;#39;&quot;&gt;&lt;font size=&quot;3&quot;&gt; &lt;/font&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin:0pt 0pt 12pt&quot;&gt;&lt;span style=&quot;font-family:&amp;#39;Times New Roman&amp;#39;&quot;&gt;&lt;font size=&quot;3&quot;&gt;Compiliamo (F7) &lt;/font&gt;&lt;/span&gt;&lt;span style=&quot;font-family:&amp;#39;Times New Roman&amp;#39;&quot;&gt;&lt;font size=&quot;3&quot;&gt;e notiamo&lt;/font&gt;&lt;/span&gt;&lt;span style=&quot;font-family:&amp;#39;Times New Roman&amp;#39;&quot;&gt;&lt;font size=&quot;3&quot;&gt; l’errore:&lt;/font&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin:0pt 0pt 12pt 36pt&quot;&gt;&lt;span style=&quot;font-family:&amp;#39;Courier New&amp;#39;&quot;&gt;&lt;font size=&quot;2&quot;&gt;learninggoogletest.cpp(4) : warning C4627: &amp;#39;#include &amp;lt;gtest/gtest.h&amp;gt;&amp;#39;: skipped when looking for precompiled header use&lt;/font&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin:0pt 0pt 12pt&quot;&gt;&lt;span style=&quot;font-family:&amp;#39;Times New Roman&amp;#39;&quot;&gt;&lt;font size=&quot;3&quot;&gt;Risolviamo aggiungendo &lt;/font&gt;&lt;/span&gt;&lt;span style=&quot;font-family:&amp;#39;Times New Roman&amp;#39;&quot;&gt;&lt;font size=&quot;3&quot;&gt;in&lt;/font&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin:0pt 0pt 12pt 36pt&quot;&gt;&lt;span style=&quot;font-family:&amp;#39;Times New Roman&amp;#39;&quot;&gt;&lt;i&gt;&lt;font size=&quot;3&quot;&gt;Project Settings &amp;gt; Configuration Properties &amp;gt; C/C++ &amp;gt; Additional Include Directories&lt;/font&gt;&lt;/i&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin:0pt 0pt 12pt&quot;&gt;&lt;span style=&quot;font-family:&amp;#39;Times New Roman&amp;#39;&quot;&gt;&lt;font size=&quot;3&quot;&gt;il path (completo) di &lt;/font&gt;&lt;/span&gt;&lt;span style=&quot;font-family:&amp;#39;Courier New&amp;#39;&quot;&gt;&lt;font size=&quot;2&quot;&gt;gtest-1.4.0\include&lt;/font&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin:0pt 0pt 12pt&quot;&gt;&lt;span style=&quot;font-family:&amp;#39;Times New Roman&amp;#39;&quot;&gt;&lt;font size=&quot;3&quot;&gt;Tentiamo di nuovo ed ora abbiamo un errore durante la fase di linking:&lt;/font&gt;&lt;/span&gt;&lt;span style=&quot;color:#000000; font-family:&amp;#39;Times New Roman&amp;#39;&quot;&gt;&lt;font size=&quot;4&quot;&gt;              &lt;/font&gt;&lt;/span&gt;&lt;img src=&quot;http://docs.google.com/File?id=dcwhf6k8_92hnhkstrk_b&quot; width=&quot;554&quot; height=&quot;181&quot; alt=&quot;&quot; style=&quot;border:none&quot;&gt;&lt;/img&gt;&lt;/p&gt;&lt;p style=&quot;margin:0pt 0pt 12pt&quot;&gt;&lt;span style=&quot;font-family:&amp;#39;Times New Roman&amp;#39;&quot;&gt;&lt;font size=&quot;3&quot;&gt;Risolviamo &lt;/font&gt;&lt;/span&gt;&lt;span style=&quot;font-family:&amp;#39;Times New Roman&amp;#39;&quot;&gt;&lt;font size=&quot;3&quot;&gt;aggiungendo &lt;/font&gt;&lt;/span&gt;&lt;span style=&quot;font-family:&amp;#39;Times New Roman&amp;#39;&quot;&gt;&lt;font size=&quot;3&quot;&gt;in &lt;/font&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin:0pt 0pt 12pt 36pt&quot;&gt;&lt;span style=&quot;font-family:&amp;#39;Times New Roman&amp;#39;&quot;&gt;&lt;i&gt;&lt;font size=&quot;3&quot;&gt;Project Settings &amp;gt; Configuration Properties &amp;gt; Linker &amp;gt; Input &amp;gt; Additional Dependencies &lt;/font&gt;&lt;/i&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin:0pt 0pt 12pt&quot;&gt;&lt;span style=&quot;font-family:&amp;#39;Times New Roman&amp;#39;&quot;&gt;&lt;font size=&quot;3&quot;&gt;i &lt;/font&gt;&lt;/span&gt;&lt;span style=&quot;font-family:&amp;#39;Times New Roman&amp;#39;&quot;&gt;&lt;font size=&quot;3&quot;&gt;path di queste due librerie&lt;/font&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin:0pt 0pt 12pt 36pt&quot;&gt;&lt;span style=&quot;font-family:Symbol&quot;&gt;&lt;font size=&quot;3&quot;&gt;·&lt;/font&gt;&lt;/span&gt;       &lt;span style=&quot;font-family:&amp;#39;Times New Roman&amp;#39;&quot;&gt;&lt;font size=&quot;3&quot;&gt;&amp;quot;c:\gtest-1.4.0\msvc\gtest\Debug\gtest_maind.lib&amp;quot;&lt;/font&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin:0pt 0pt 12pt 36pt&quot;&gt;&lt;span style=&quot;font-family:Symbol&quot;&gt;&lt;font size=&quot;3&quot;&gt;·&lt;/font&gt;&lt;/span&gt;       &lt;span style=&quot;font-family:&amp;#39;Times New Roman&amp;#39;&quot;&gt;&lt;font size=&quot;3&quot;&gt;&amp;quot;c:\gtest-1.4.0\msvc\gtest\Debug\gtestd.lib&amp;quot;&lt;/font&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin:0pt 0pt 12pt&quot;&gt;&lt;span style=&quot;font-family:&amp;#39;Times New Roman&amp;#39;&quot;&gt;&lt;font size=&quot;3&quot;&gt;Mi raccomando di usare i doppi apici (&amp;quot;) se ci sono spazi &lt;/font&gt;&lt;/span&gt;&lt;span style=&quot;font-family:&amp;#39;Times New Roman&amp;#39;&quot;&gt;&lt;font size=&quot;3&quot;&gt;nei path!&lt;/font&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin:0pt 0pt 12pt&quot;&gt;&lt;span style=&quot;font-family:&amp;#39;Times New Roman&amp;#39;&quot;&gt;&lt;font size=&quot;3&quot;&gt;In teoria farlo ora dovrebbe funzionare &lt;/font&gt;&lt;/span&gt;&lt;span style=&quot;font-family:&amp;#39;Times New Roman&amp;#39;&quot;&gt;&lt;font size=&quot;3&quot;&gt;ma in pratica no! Se anche voi avete errori del genere:&lt;/font&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin:0pt 0pt 12pt&quot;&gt;&lt;img src=&quot;http://docs.google.com/File?id=dcwhf6k8_93hrv59n4v_b&quot; width=&quot;482&quot; height=&quot;109&quot; alt=&quot;&quot; style=&quot;border:none&quot;&gt;&lt;/img&gt;&lt;/p&gt;&lt;p style=&quot;margin:0pt 0pt 12pt&quot;&gt;&lt;span style=&quot;font-family:&amp;#39;Times New Roman&amp;#39;&quot;&gt;&lt;font size=&quot;3&quot;&gt;allora vuol dire che lo switch &lt;/font&gt;&lt;/span&gt;&lt;span style=&quot;font-family:&amp;#39;Times New Roman&amp;#39;&quot;&gt;&lt;b&gt;&lt;font size=&quot;3&quot;&gt;Runtime Library&lt;/font&gt;&lt;/b&gt;&lt;/span&gt;&lt;span style=&quot;font-family:&amp;#39;Times New Roman&amp;#39;&quot;&gt;&lt;font size=&quot;3&quot;&gt; usato per il progetto gtest.sln e quello del vostro progetto non coincidono.&lt;/font&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin:0pt 0pt 12pt&quot;&gt;&lt;span style=&quot;font-family:&amp;#39;Times New Roman&amp;#39;&quot;&gt;&lt;font size=&quot;3&quot;&gt;Per risolvere andate in&lt;/font&gt;&lt;/span&gt;&lt;span style=&quot;color:#000000; font-family:&amp;#39;Times New Roman&amp;#39;&quot;&gt;&lt;font size=&quot;4&quot;&gt;:&lt;/font&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin:0pt 0pt 12pt 36pt&quot;&gt;&lt;span style=&quot;color:#000000; font-family:&amp;#39;Times New Roman&amp;#39;&quot;&gt;&lt;i&gt;&lt;font size=&quot;4&quot;&gt;Project Settings &amp;gt; Configuration Properties &amp;gt; C/C++ &amp;gt; Code Generation &amp;gt; Runtime Library&lt;/font&gt;&lt;/i&gt;&lt;/span&gt;&lt;span style=&quot;color:#000000; font-family:&amp;#39;Times New Roman&amp;#39;&quot;&gt;&lt;i&gt;&lt;font size=&quot;4&quot;&gt; &lt;/font&gt;&lt;/i&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin:0pt 0pt 12pt&quot;&gt;&lt;span style=&quot;font-family:&amp;#39;Times New Roman&amp;#39;&quot;&gt;&lt;font size=&quot;3&quot;&gt;E assicuratevi che ci sia&lt;/font&gt;&lt;/span&gt;&lt;span style=&quot;font-family:&amp;#39;Times New Roman&amp;#39;&quot;&gt;&lt;font size=&quot;3&quot;&gt;:&lt;/font&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin:0pt 0pt 12pt&quot;&gt;&lt;span style=&quot;font-family:&amp;#39;Times New Roman&amp;#39;&quot;&gt;&lt;font size=&quot;3&quot;&gt;Multi-threaded Debug (/MTd)&lt;/font&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin:0pt 0pt 12pt&quot;&gt;&lt;span style=&quot;font-family:&amp;#39;Times New Roman&amp;#39;&quot;&gt;&lt;font size=&quot;3&quot;&gt;A questo punto la build dovrebbe andare a buon fine.&lt;/font&gt;&lt;/span&gt;&lt;/p&gt;&lt;h2 style=&quot;margin:12pt 0pt 3pt&quot;&gt;&lt;span style=&quot;font-family:Arial&quot;&gt;&lt;b&gt;&lt;i&gt;&lt;font size=&quot;4&quot;&gt;Eseguire i test&lt;/font&gt;&lt;/i&gt;&lt;/b&gt;&lt;/span&gt;&lt;/h2&gt;&lt;p style=&quot;margin:0pt 0pt 12pt&quot;&gt;&lt;span style=&quot;font-family:&amp;#39;Times New Roman&amp;#39;&quot;&gt;&lt;font size=&quot;3&quot;&gt;A questo punto dovremmo avere a disposizione tutto l’occorrente per scrivere, compilare ed eseguire i test.&lt;/font&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin:0pt 0pt 12pt&quot;&gt;&lt;span style=&quot;font-family:&amp;#39;Times New Roman&amp;#39;&quot;&gt;&lt;font size=&quot;3&quot;&gt;Riprendiamo il file &lt;/font&gt;&lt;/span&gt;&lt;span style=&quot;font-family:&amp;#39;Times New Roman&amp;#39;&quot;&gt;&lt;font size=&quot;3&quot;&gt;LearningGoogleTest.cpp&lt;/font&gt;&lt;/span&gt;&lt;span style=&quot;font-family:&amp;#39;Times New Roman&amp;#39;&quot;&gt;&lt;font size=&quot;3&quot;&gt; e togliamo la funzione main()&lt;/font&gt;&lt;/span&gt;&lt;span style=&quot;font-family:&amp;#39;Times New Roman&amp;#39;&quot;&gt;&lt;font size=&quot;3&quot;&gt;.&lt;/font&gt;&lt;/span&gt;&lt;/p&gt;&lt;table cellspacing=&quot;0&quot; cellpadding=&quot;0&quot; style=&quot; margin-left:0pt&quot; class=&quot;zeroBorder&quot;&gt;&lt;tr&gt;&lt;td style=&quot; vertical-align:top; width:221.4pt&quot;&gt;&lt;p style=&quot;margin:0pt&quot;&gt;&lt;span style=&quot;color:#008000; font-family:&amp;#39;Courier New&amp;#39;&quot;&gt;&lt;font size=&quot;2&quot;&gt;// LearningGoogleTest.cpp&lt;/font&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin:0pt&quot;&gt;&lt;span style=&quot;color:#008000; font-family:&amp;#39;Courier New&amp;#39;&quot;&gt;&lt;font size=&quot;2&quot;&gt; &lt;/font&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin:0pt&quot;&gt;&lt;span style=&quot;color:#0000ff; font-family:&amp;#39;Courier New&amp;#39;&quot;&gt;&lt;font size=&quot;2&quot;&gt;#include&lt;/font&gt;&lt;/span&gt; &lt;span style=&quot;color:#a31515; font-family:&amp;#39;Courier New&amp;#39;&quot;&gt;&lt;font size=&quot;2&quot;&gt;&amp;lt;stdio.h&amp;gt;&lt;/font&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin:0pt&quot;&gt;&lt;span style=&quot;color:#0000ff; font-family:&amp;#39;Courier New&amp;#39;&quot;&gt;&lt;font size=&quot;2&quot;&gt;#include&lt;/font&gt;&lt;/span&gt; &lt;span style=&quot;color:#a31515; font-family:&amp;#39;Courier New&amp;#39;&quot;&gt;&lt;font size=&quot;2&quot;&gt;&amp;lt;gtest/gtest.h&amp;gt;&lt;/font&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin:0pt&quot;&gt;&lt;span style=&quot;color:#a31515; font-family:&amp;#39;Courier New&amp;#39;&quot;&gt;&lt;font size=&quot;2&quot;&gt; &lt;/font&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin:0pt&quot;&gt;&lt;span style=&quot;font-family:&amp;#39;Courier New&amp;#39;&quot;&gt;&lt;font size=&quot;2&quot;&gt;TEST(foo,bar) {&lt;/font&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin:0pt&quot;&gt;&lt;span style=&quot;font-family:&amp;#39;Courier New&amp;#39;&quot;&gt;&lt;font size=&quot;2&quot;&gt;              &lt;/font&gt;&lt;/span&gt;&lt;span style=&quot;font-family:&amp;#39;Courier New&amp;#39;&quot;&gt;&lt;font size=&quot;2&quot;&gt;FAIL();&lt;/font&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin:0pt&quot;&gt;&lt;span style=&quot;font-family:&amp;#39;Courier New&amp;#39;&quot;&gt;&lt;font size=&quot;2&quot;&gt;}&lt;/font&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin:0pt&quot;&gt;&lt;span style=&quot;font-family:&amp;#39;Courier New&amp;#39;&quot;&gt;&lt;font size=&quot;2&quot;&gt; &lt;/font&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin:0pt&quot;&gt;&lt;span style=&quot;color:#0000ff; font-family:&amp;#39;Courier New&amp;#39;&quot;&gt;&lt;strike&gt;&lt;font size=&quot;2&quot;&gt;int&lt;/font&gt;&lt;/strike&gt;&lt;/span&gt;&lt;span style=&quot;font-family:&amp;#39;Courier New&amp;#39;&quot;&gt;&lt;strike&gt;&lt;font size=&quot;2&quot;&gt; main(&lt;/font&gt;&lt;/strike&gt;&lt;/span&gt;&lt;span style=&quot;color:#0000ff; font-family:&amp;#39;Courier New&amp;#39;&quot;&gt;&lt;strike&gt;&lt;font size=&quot;2&quot;&gt;int&lt;/font&gt;&lt;/strike&gt;&lt;/span&gt;&lt;span style=&quot;font-family:&amp;#39;Courier New&amp;#39;&quot;&gt;&lt;strike&gt;&lt;font size=&quot;2&quot;&gt; argc, &lt;/font&gt;&lt;/strike&gt;&lt;/span&gt;&lt;span style=&quot;color:#0000ff; font-family:&amp;#39;Courier New&amp;#39;&quot;&gt;&lt;strike&gt;&lt;font size=&quot;2&quot;&gt;char&lt;/font&gt;&lt;/strike&gt;&lt;/span&gt;&lt;span style=&quot;font-family:&amp;#39;Courier New&amp;#39;&quot;&gt;&lt;strike&gt;&lt;font size=&quot;2&quot;&gt; * argv[]) {&lt;/font&gt;&lt;/strike&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin:0pt&quot;&gt;&lt;span style=&quot;font-family:&amp;#39;Courier New&amp;#39;&quot;&gt;&lt;strike&gt;&lt;font size=&quot;2&quot;&gt;    printf(&lt;/font&gt;&lt;/strike&gt;&lt;/span&gt;&lt;span style=&quot;color:#a31515; font-family:&amp;#39;Courier New&amp;#39;&quot;&gt;&lt;strike&gt;&lt;font size=&quot;2&quot;&gt;&amp;quot;Hello world!\n&amp;quot;&lt;/font&gt;&lt;/strike&gt;&lt;/span&gt;&lt;span style=&quot;font-family:&amp;#39;Courier New&amp;#39;&quot;&gt;&lt;strike&gt;&lt;font size=&quot;2&quot;&gt;);&lt;/font&gt;&lt;/strike&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin:0pt&quot;&gt;&lt;span style=&quot;font-family:&amp;#39;Courier New&amp;#39;&quot;&gt;&lt;strike&gt;&lt;font size=&quot;2&quot;&gt;    &lt;/font&gt;&lt;/strike&gt;&lt;/span&gt;&lt;span style=&quot;color:#0000ff; font-family:&amp;#39;Courier New&amp;#39;&quot;&gt;&lt;strike&gt;&lt;font size=&quot;2&quot;&gt;return&lt;/font&gt;&lt;/strike&gt;&lt;/span&gt;&lt;span style=&quot;font-family:&amp;#39;Courier New&amp;#39;&quot;&gt;&lt;strike&gt;&lt;font size=&quot;2&quot;&gt; 0;&lt;/font&gt;&lt;/strike&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin:0pt&quot;&gt;&lt;span style=&quot;font-family:&amp;#39;Courier New&amp;#39;&quot;&gt;&lt;strike&gt;&lt;font size=&quot;2&quot;&gt;}&lt;/font&gt;&lt;/strike&gt;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td style=&quot; vertical-align:top; width:221.4pt&quot;&gt;&lt;p style=&quot;margin:0pt&quot;&gt;&lt;span style=&quot;color:#008000; font-family:&amp;#39;Courier New&amp;#39;&quot;&gt;&lt;font size=&quot;2&quot;&gt;// LearningGoogleTest.cpp&lt;/font&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin:0pt&quot;&gt;&lt;span style=&quot;color:#008000; font-family:&amp;#39;Courier New&amp;#39;&quot;&gt;&lt;font size=&quot;2&quot;&gt; &lt;/font&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin:0pt&quot;&gt;&lt;span style=&quot;color:#0000ff; font-family:&amp;#39;Courier New&amp;#39;&quot;&gt;&lt;font size=&quot;2&quot;&gt;#include&lt;/font&gt;&lt;/span&gt; &lt;span style=&quot;color:#a31515; font-family:&amp;#39;Courier New&amp;#39;&quot;&gt;&lt;font size=&quot;2&quot;&gt;&amp;lt;stdio.h&amp;gt;&lt;/font&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin:0pt&quot;&gt;&lt;span style=&quot;color:#0000ff; font-family:&amp;#39;Courier New&amp;#39;&quot;&gt;&lt;font size=&quot;2&quot;&gt;#include&lt;/font&gt;&lt;/span&gt; &lt;span style=&quot;color:#a31515; font-family:&amp;#39;Courier New&amp;#39;&quot;&gt;&lt;font size=&quot;2&quot;&gt;&amp;lt;gtest/gtest.h&amp;gt;&lt;/font&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin:0pt&quot;&gt;&lt;span style=&quot;color:#a31515; font-family:&amp;#39;Courier New&amp;#39;&quot;&gt;&lt;font size=&quot;2&quot;&gt; &lt;/font&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin:0pt&quot;&gt;&lt;span style=&quot;font-family:&amp;#39;Courier New&amp;#39;&quot;&gt;&lt;font size=&quot;2&quot;&gt;TEST(foo,bar) {&lt;/font&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin:0pt&quot;&gt;&lt;span style=&quot;font-family:&amp;#39;Courier New&amp;#39;&quot;&gt;&lt;font size=&quot;2&quot;&gt;              &lt;/font&gt;&lt;/span&gt;&lt;span style=&quot;font-family:&amp;#39;Courier New&amp;#39;&quot;&gt;&lt;font size=&quot;2&quot;&gt;FAIL();&lt;/font&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin:0pt&quot;&gt;&lt;span style=&quot;font-family:&amp;#39;Courier New&amp;#39;&quot;&gt;&lt;font size=&quot;2&quot;&gt;}&lt;/font&gt;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;p style=&quot;margin:0pt 0pt 12pt&quot;&gt;&lt;span style=&quot;color:#000000; font-family:&amp;#39;Times New Roman&amp;#39;&quot;&gt;&lt;font size=&quot;4&quot;&gt; &lt;/font&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin:0pt 0pt 12pt&quot;&gt;&lt;span style=&quot;font-family:&amp;#39;Times New Roman&amp;#39;&quot;&gt;&lt;font size=&quot;3&quot;&gt;In questo modo il linker andrà a prendere la &lt;/font&gt;&lt;/span&gt;&lt;span style=&quot;font-family:&amp;#39;Times New Roman&amp;#39;&quot;&gt;&lt;b&gt;&lt;font size=&quot;3&quot;&gt;main()&lt;/font&gt;&lt;/b&gt;&lt;/span&gt;&lt;span style=&quot;font-family:&amp;#39;Times New Roman&amp;#39;&quot;&gt;&lt;font size=&quot;3&quot;&gt; da &lt;/font&gt;&lt;/span&gt;&lt;span style=&quot;font-family:&amp;#39;Times New Roman&amp;#39;&quot;&gt;&lt;b&gt;&lt;font size=&quot;3&quot;&gt;gtest_maind.lib&lt;/font&gt;&lt;/b&gt;&lt;/span&gt;&lt;span style=&quot;font-family:&amp;#39;Times New Roman&amp;#39;&quot;&gt;&lt;font size=&quot;3&quot;&gt; la quale &lt;/font&gt;&lt;/span&gt;&lt;span style=&quot;font-family:&amp;#39;Times New Roman&amp;#39;&quot;&gt;&lt;font size=&quot;3&quot;&gt;fa &lt;/font&gt;&lt;/span&gt;&lt;span style=&quot;font-family:&amp;#39;Times New Roman&amp;#39;&quot;&gt;&lt;font size=&quot;3&quot;&gt;esattamente quello che ci serve:&lt;/font&gt;&lt;/span&gt;&lt;span style=&quot;font-family:&amp;#39;Times New Roman&amp;#39;&quot;&gt;&lt;font size=&quot;3&quot;&gt; e&lt;/font&gt;&lt;/span&gt;&lt;span style=&quot;font-family:&amp;#39;Times New Roman&amp;#39;&quot;&gt;&lt;font size=&quot;3&quot;&gt;s&lt;/font&gt;&lt;/span&gt;&lt;span style=&quot;font-family:&amp;#39;Times New Roman&amp;#39;&quot;&gt;&lt;font size=&quot;3&quot;&gt;egue &lt;/font&gt;&lt;/span&gt;&lt;span style=&quot;font-family:&amp;#39;Times New Roman&amp;#39;&quot;&gt;&lt;font size=&quot;3&quot;&gt;tutti i test.&lt;/font&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin:0pt 0pt 12pt&quot;&gt;&lt;span style=&quot;font-family:&amp;#39;Times New Roman&amp;#39;&quot;&gt;&lt;font size=&quot;3&quot;&gt;Premendo CTRL+F5 il programma si avvia e vengono eseguiti tutti i test. Il risultato dovrebbe essere questo:&lt;/font&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin:0pt 0pt 12pt&quot;&gt;&lt;img src=&quot;http://docs.google.com/File?id=dcwhf6k8_94fxgv46f2_b&quot; width=&quot;525&quot; height=&quot;271&quot; alt=&quot;&quot; style=&quot;border:none&quot;&gt;&lt;/img&gt;&lt;/p&gt;&lt;p style=&quot;margin:0pt 0pt 12pt&quot;&gt;&lt;span style=&quot;font-family:&amp;#39;Times New Roman&amp;#39;&quot;&gt;&lt;font size=&quot;3&quot;&gt;Abbiamo &lt;/font&gt;&lt;/span&gt;&lt;span style=&quot;font-family:&amp;#39;Times New Roman&amp;#39;&quot;&gt;&lt;font size=&quot;3&quot;&gt;un solo test e questo non passa ... per forza 0 non è uguale a 1!&lt;/font&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin:0pt 0pt 12pt&quot;&gt;&lt;span style=&quot;font-family:&amp;#39;Times New Roman&amp;#39;&quot;&gt;&lt;font size=&quot;3&quot;&gt;Facciamo passare il test:&lt;/font&gt;&lt;/span&gt;&lt;/p&gt;&lt;table cellspacing=&quot;0&quot; cellpadding=&quot;0&quot; style=&quot; margin-left:0pt&quot; class=&quot;zeroBorder&quot;&gt;&lt;tr&gt;&lt;td style=&quot; vertical-align:top; width:221.4pt&quot;&gt;&lt;p style=&quot;margin:0pt&quot;&gt;&lt;span style=&quot;color:#008000; font-family:&amp;#39;Courier New&amp;#39;&quot;&gt;&lt;font size=&quot;2&quot;&gt;// LearningGoogleTest.cpp&lt;/font&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin:0pt&quot;&gt;&lt;span style=&quot;color:#008000; font-family:&amp;#39;Courier New&amp;#39;&quot;&gt;&lt;font size=&quot;2&quot;&gt; &lt;/font&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin:0pt&quot;&gt;&lt;span style=&quot;color:#0000ff; font-family:&amp;#39;Courier New&amp;#39;&quot;&gt;&lt;font size=&quot;2&quot;&gt;#include&lt;/font&gt;&lt;/span&gt; &lt;span style=&quot;color:#a31515; font-family:&amp;#39;Courier New&amp;#39;&quot;&gt;&lt;font size=&quot;2&quot;&gt;&amp;lt;stdio.h&amp;gt;&lt;/font&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin:0pt&quot;&gt;&lt;span style=&quot;color:#0000ff; font-family:&amp;#39;Courier New&amp;#39;&quot;&gt;&lt;font size=&quot;2&quot;&gt;#include&lt;/font&gt;&lt;/span&gt; &lt;span style=&quot;color:#a31515; font-family:&amp;#39;Courier New&amp;#39;&quot;&gt;&lt;font size=&quot;2&quot;&gt;&amp;lt;gtest/gtest.h&amp;gt;&lt;/font&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin:0pt&quot;&gt;&lt;span style=&quot;color:#a31515; font-family:&amp;#39;Courier New&amp;#39;&quot;&gt;&lt;font size=&quot;2&quot;&gt; &lt;/font&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin:0pt&quot;&gt;&lt;span style=&quot;font-family:&amp;#39;Courier New&amp;#39;&quot;&gt;&lt;font size=&quot;2&quot;&gt;TEST(foo,bar) {&lt;/font&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin:0pt&quot;&gt;&lt;span style=&quot;font-family:&amp;#39;Courier New&amp;#39;&quot;&gt;&lt;font size=&quot;2&quot;&gt;              &lt;/font&gt;&lt;/span&gt;&lt;span style=&quot;font-family:&amp;#39;Courier New&amp;#39;&quot;&gt;&lt;font size=&quot;2&quot;&gt;ASSERT_EQ(&lt;/font&gt;&lt;/span&gt;&lt;span style=&quot;background-color:#ffff00; font-family:&amp;#39;Courier New&amp;#39;&quot;&gt;&lt;b&gt;&lt;font size=&quot;2&quot;&gt;0&lt;/font&gt;&lt;/b&gt;&lt;/span&gt;&lt;span style=&quot;font-family:&amp;#39;Courier New&amp;#39;&quot;&gt;&lt;font size=&quot;2&quot;&gt;,1);&lt;/font&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin:0pt&quot;&gt;&lt;span style=&quot;font-family:&amp;#39;Courier New&amp;#39;&quot;&gt;&lt;font size=&quot;2&quot;&gt;}&lt;/font&gt;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td style=&quot; vertical-align:top; width:221.4pt&quot;&gt;&lt;p style=&quot;margin:0pt&quot;&gt;&lt;span style=&quot;color:#008000; font-family:&amp;#39;Courier New&amp;#39;&quot;&gt;&lt;font size=&quot;2&quot;&gt;// LearningGoogleTest.cpp&lt;/font&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin:0pt&quot;&gt;&lt;span style=&quot;color:#008000; font-family:&amp;#39;Courier New&amp;#39;&quot;&gt;&lt;font size=&quot;2&quot;&gt; &lt;/font&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin:0pt&quot;&gt;&lt;span style=&quot;color:#0000ff; font-family:&amp;#39;Courier New&amp;#39;&quot;&gt;&lt;font size=&quot;2&quot;&gt;#include&lt;/font&gt;&lt;/span&gt; &lt;span style=&quot;color:#a31515; font-family:&amp;#39;Courier New&amp;#39;&quot;&gt;&lt;font size=&quot;2&quot;&gt;&amp;lt;stdio.h&amp;gt;&lt;/font&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin:0pt&quot;&gt;&lt;span style=&quot;color:#0000ff; font-family:&amp;#39;Courier New&amp;#39;&quot;&gt;&lt;font size=&quot;2&quot;&gt;#include&lt;/font&gt;&lt;/span&gt; &lt;span style=&quot;color:#a31515; font-family:&amp;#39;Courier New&amp;#39;&quot;&gt;&lt;font size=&quot;2&quot;&gt;&amp;lt;gtest/gtest.h&amp;gt;&lt;/font&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin:0pt&quot;&gt;&lt;span style=&quot;color:#a31515; font-family:&amp;#39;Courier New&amp;#39;&quot;&gt;&lt;font size=&quot;2&quot;&gt; &lt;/font&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin:0pt&quot;&gt;&lt;span style=&quot;font-family:&amp;#39;Courier New&amp;#39;&quot;&gt;&lt;font size=&quot;2&quot;&gt;TEST(foo,bar) {&lt;/font&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin:0pt&quot;&gt;&lt;span style=&quot;font-family:&amp;#39;Courier New&amp;#39;&quot;&gt;&lt;font size=&quot;2&quot;&gt;              &lt;/font&gt;&lt;/span&gt;&lt;span style=&quot;font-family:&amp;#39;Courier New&amp;#39;&quot;&gt;&lt;font size=&quot;2&quot;&gt;ASSERT_EQ(1,1);&lt;/font&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin:0pt&quot;&gt;&lt;span style=&quot;font-family:&amp;#39;Courier New&amp;#39;&quot;&gt;&lt;font size=&quot;2&quot;&gt;}&lt;/font&gt;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;p style=&quot;margin:0pt 0pt 12pt&quot;&gt;&lt;span style=&quot;font-family:&amp;#39;Times New Roman&amp;#39;&quot;&gt;&lt;font size=&quot;3&quot;&gt; &lt;/font&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin:0pt 0pt 12pt&quot;&gt;&lt;span style=&quot;font-family:&amp;#39;Times New Roman&amp;#39;&quot;&gt;&lt;font size=&quot;3&quot;&gt;E con CTRL+F5 otteniamo la prima barra verde&lt;/font&gt;&lt;/span&gt;&lt;span style=&quot;font-family:&amp;#39;Times New Roman&amp;#39;&quot;&gt;&lt;font size=&quot;3&quot;&gt;:&lt;/font&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin:0pt 0pt 12pt&quot;&gt;&lt;img src=&quot;http://docs.google.com/File?id=dcwhf6k8_95fzrvndcz_b&quot; width=&quot;477&quot; height=&quot;211&quot; alt=&quot;&quot; style=&quot;border:none&quot;&gt;&lt;/img&gt;&lt;/p&gt;&lt;h1 style=&quot;margin:5pt 0pt&quot;&gt;&lt;span style=&quot;color:#000000; font-family:&amp;#39;Times New Roman&amp;#39;&quot;&gt;&lt;b&gt;&lt;font size=&quot;5&quot;&gt;Integrazione in Visual C++&lt;/font&gt;&lt;/b&gt;&lt;/span&gt;&lt;/h1&gt;&lt;p style=&quot;margin:0pt 0pt 12pt&quot;&gt;&lt;span style=&quot;font-family:&amp;#39;Times New Roman&amp;#39;&quot;&gt;&lt;font size=&quot;3&quot;&gt;I messaggi di &lt;/font&gt;&lt;/span&gt;&lt;span style=&quot;font-family:&amp;#39;Times New Roman&amp;#39;&quot;&gt;&lt;font size=&quot;3&quot;&gt;FAIL &lt;/font&gt;&lt;/span&gt;&lt;span style=&quot;font-family:&amp;#39;Times New Roman&amp;#39;&quot;&gt;&lt;font size=&quot;3&quot;&gt;di gtest sono Visual Studio friendly.&lt;/font&gt;&lt;/span&gt; &lt;span style=&quot;font-family:&amp;#39;Times New Roman&amp;#39;&quot;&gt;&lt;font size=&quot;3&quot;&gt;Ora vediamo come sfruttare quest&lt;/font&gt;&lt;/span&gt;&lt;span style=&quot;font-family:&amp;#39;Times New Roman&amp;#39;&quot;&gt;&lt;font size=&quot;3&quot;&gt;a feature&lt;/font&gt;&lt;/span&gt;&lt;span style=&quot;font-family:&amp;#39;Times New Roman&amp;#39;&quot;&gt;&lt;font size=&quot;3&quot;&gt;.&lt;/font&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin:0pt 0pt 12pt&quot;&gt;&lt;span style=&quot;color:#000000; font-family:&amp;#39;Times New Roman&amp;#39;&quot;&gt;&lt;font size=&quot;4&quot;&gt; &lt;/font&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin:0pt 0pt 12pt&quot;&gt;&lt;span style=&quot;font-family:&amp;#39;Times New Roman&amp;#39;&quot;&gt;&lt;font size=&quot;3&quot;&gt;Con il Post-Build Event diciamo Visual Studio di &lt;/font&gt;&lt;/span&gt;&lt;span style=&quot;font-family:&amp;#39;Times New Roman&amp;#39;&quot;&gt;&lt;font size=&quot;3&quot;&gt;avviare i test dopo ogni build.&lt;/font&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin:0pt 0pt 12pt&quot;&gt;&lt;span style=&quot;font-family:&amp;#39;Times New Roman&amp;#39;&quot;&gt;&lt;font size=&quot;3&quot;&gt;P&lt;/font&gt;&lt;/span&gt;&lt;span style=&quot;font-family:&amp;#39;Times New Roman&amp;#39;&quot;&gt;&lt;font size=&quot;3&quot;&gt;er farlo &lt;/font&gt;&lt;/span&gt;&lt;span style=&quot;font-family:&amp;#39;Times New Roman&amp;#39;&quot;&gt;&lt;font size=&quot;3&quot;&gt;impostiamo &lt;/font&gt;&lt;/span&gt;&lt;span style=&quot;font-family:&amp;#39;Times New Roman&amp;#39;&quot;&gt;&lt;font size=&quot;3&quot;&gt;in&lt;/font&gt;&lt;/span&gt;&lt;span style=&quot;font-family:&amp;#39;Times New Roman&amp;#39;&quot;&gt;&lt;font size=&quot;3&quot;&gt; &lt;/font&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin:0pt 0pt 12pt 36pt&quot;&gt;&lt;span style=&quot;font-family:&amp;#39;Times New Roman&amp;#39;&quot;&gt;&lt;i&gt;&lt;font size=&quot;3&quot;&gt;Project Settings &amp;gt; Configuration Properties &amp;gt; Build Events &amp;gt; Post-Build Event &amp;gt; Command Line&lt;/font&gt;&lt;/i&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin:0pt 0pt 12pt&quot;&gt;&lt;span style=&quot;font-family:&amp;#39;Times New Roman&amp;#39;&quot;&gt;&lt;font size=&quot;3&quot;&gt;il valore:&lt;/font&gt;&lt;/span&gt;&lt;span style=&quot;font-family:&amp;#39;Times New Roman&amp;#39;&quot;&gt;&lt;font size=&quot;3&quot;&gt; &lt;/font&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin:0pt 0pt 12pt&quot;&gt;&lt;span style=&quot;font-family:&amp;#39;Courier New&amp;#39;&quot;&gt;&lt;font size=&quot;2&quot;&gt;&amp;quot;$(TargetDir)\$(TargetName).exe&amp;quot;&lt;/font&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin:0pt 0pt 12pt&quot;&gt;&lt;span style=&quot;font-family:&amp;#39;Times New Roman&amp;#39;&quot;&gt;&lt;font size=&quot;3&quot;&gt;Ora, se avviamo la build (F7) dovrebbe ritrovarci i risultati dei test nella finestra &lt;/font&gt;&lt;/span&gt;&lt;span style=&quot;font-family:&amp;#39;Times New Roman&amp;#39;&quot;&gt;&lt;font size=&quot;3&quot;&gt;O&lt;/font&gt;&lt;/span&gt;&lt;span style=&quot;font-family:&amp;#39;Times New Roman&amp;#39;&quot;&gt;&lt;font size=&quot;3&quot;&gt;utput.&lt;/font&gt;&lt;/span&gt;&lt;span style=&quot;font-family:&amp;#39;Times New Roman&amp;#39;&quot;&gt;&lt;font size=&quot;3&quot;&gt; Ma non è finita qui. Simuliamo un fallimento nel nostro test:&lt;/font&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin:0pt 0pt 12pt&quot;&gt;&lt;span style=&quot;font-family:&amp;#39;Times New Roman&amp;#39;&quot;&gt;&lt;font size=&quot;3&quot;&gt; &lt;/font&gt;&lt;/span&gt;&lt;/p&gt;&lt;table cellspacing=&quot;0&quot; cellpadding=&quot;0&quot; style=&quot; margin-left:0pt&quot; class=&quot;zeroBorder&quot;&gt;&lt;tr&gt;&lt;td style=&quot; vertical-align:top; width:221.4pt&quot;&gt;&lt;p style=&quot;margin:0pt&quot;&gt;&lt;span style=&quot;color:#008000; font-family:&amp;#39;Courier New&amp;#39;&quot;&gt;&lt;font size=&quot;2&quot;&gt;// LearningGoogleTest.cpp&lt;/font&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin:0pt&quot;&gt;&lt;span style=&quot;color:#008000; font-family:&amp;#39;Courier New&amp;#39;&quot;&gt;&lt;font size=&quot;2&quot;&gt; &lt;/font&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin:0pt&quot;&gt;&lt;span style=&quot;color:#0000ff; font-family:&amp;#39;Courier New&amp;#39;&quot;&gt;&lt;font size=&quot;2&quot;&gt;#include&lt;/font&gt;&lt;/span&gt; &lt;span style=&quot;color:#a31515; font-family:&amp;#39;Courier New&amp;#39;&quot;&gt;&lt;font size=&quot;2&quot;&gt;&amp;lt;stdio.h&amp;gt;&lt;/font&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin:0pt&quot;&gt;&lt;span style=&quot;color:#0000ff; font-family:&amp;#39;Courier New&amp;#39;&quot;&gt;&lt;font size=&quot;2&quot;&gt;#include&lt;/font&gt;&lt;/span&gt; &lt;span style=&quot;color:#a31515; font-family:&amp;#39;Courier New&amp;#39;&quot;&gt;&lt;font size=&quot;2&quot;&gt;&amp;lt;gtest/gtest.h&amp;gt;&lt;/font&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin:0pt&quot;&gt;&lt;span style=&quot;color:#a31515; font-family:&amp;#39;Courier New&amp;#39;&quot;&gt;&lt;font size=&quot;2&quot;&gt; &lt;/font&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin:0pt&quot;&gt;&lt;span style=&quot;font-family:&amp;#39;Courier New&amp;#39;&quot;&gt;&lt;font size=&quot;2&quot;&gt;TEST(foo,bar) {&lt;/font&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin:0pt&quot;&gt;&lt;span style=&quot;font-family:&amp;#39;Courier New&amp;#39;&quot;&gt;&lt;font size=&quot;2&quot;&gt;              &lt;/font&gt;&lt;/span&gt;&lt;span style=&quot;font-family:&amp;#39;Courier New&amp;#39;&quot;&gt;&lt;font size=&quot;2&quot;&gt;ASSERT_EQ(&lt;/font&gt;&lt;/span&gt;&lt;span style=&quot;background-color:#ffff00; font-family:&amp;#39;Courier New&amp;#39;&quot;&gt;&lt;b&gt;&lt;font size=&quot;2&quot;&gt;1&lt;/font&gt;&lt;/b&gt;&lt;/span&gt;&lt;span style=&quot;font-family:&amp;#39;Courier New&amp;#39;&quot;&gt;&lt;font size=&quot;2&quot;&gt;,1);&lt;/font&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin:0pt&quot;&gt;&lt;span style=&quot;font-family:&amp;#39;Courier New&amp;#39;&quot;&gt;&lt;font size=&quot;2&quot;&gt;}&lt;/font&gt;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td style=&quot; vertical-align:top; width:221.4pt&quot;&gt;&lt;p style=&quot;margin:0pt&quot;&gt;&lt;span style=&quot;color:#008000; font-family:&amp;#39;Courier New&amp;#39;&quot;&gt;&lt;font size=&quot;2&quot;&gt;// LearningGoogleTest.cpp&lt;/font&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin:0pt&quot;&gt;&lt;span style=&quot;color:#008000; font-family:&amp;#39;Courier New&amp;#39;&quot;&gt;&lt;font size=&quot;2&quot;&gt; &lt;/font&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin:0pt&quot;&gt;&lt;span style=&quot;color:#0000ff; font-family:&amp;#39;Courier New&amp;#39;&quot;&gt;&lt;font size=&quot;2&quot;&gt;#include&lt;/font&gt;&lt;/span&gt; &lt;span style=&quot;color:#a31515; font-family:&amp;#39;Courier New&amp;#39;&quot;&gt;&lt;font size=&quot;2&quot;&gt;&amp;lt;stdio.h&amp;gt;&lt;/font&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin:0pt&quot;&gt;&lt;span style=&quot;color:#0000ff; font-family:&amp;#39;Courier New&amp;#39;&quot;&gt;&lt;font size=&quot;2&quot;&gt;#include&lt;/font&gt;&lt;/span&gt; &lt;span style=&quot;color:#a31515; font-family:&amp;#39;Courier New&amp;#39;&quot;&gt;&lt;font size=&quot;2&quot;&gt;&amp;lt;gtest/gtest.h&amp;gt;&lt;/font&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin:0pt&quot;&gt;&lt;span style=&quot;color:#a31515; font-family:&amp;#39;Courier New&amp;#39;&quot;&gt;&lt;font size=&quot;2&quot;&gt; &lt;/font&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin:0pt&quot;&gt;&lt;span style=&quot;font-family:&amp;#39;Courier New&amp;#39;&quot;&gt;&lt;font size=&quot;2&quot;&gt;TEST(foo,bar) {&lt;/font&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin:0pt&quot;&gt;&lt;span style=&quot;font-family:&amp;#39;Courier New&amp;#39;&quot;&gt;&lt;font size=&quot;2&quot;&gt;              &lt;/font&gt;&lt;/span&gt;&lt;span style=&quot;font-family:&amp;#39;Courier New&amp;#39;&quot;&gt;&lt;font size=&quot;2&quot;&gt;ASSERT_EQ(&lt;/font&gt;&lt;/span&gt;&lt;span style=&quot;background-color:#ffff00; font-family:&amp;#39;Courier New&amp;#39;&quot;&gt;&lt;b&gt;&lt;font size=&quot;2&quot;&gt;0&lt;/font&gt;&lt;/b&gt;&lt;/span&gt;&lt;span style=&quot;font-family:&amp;#39;Courier New&amp;#39;&quot;&gt;&lt;font size=&quot;2&quot;&gt;,1);&lt;/font&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin:0pt&quot;&gt;&lt;span style=&quot;font-family:&amp;#39;Courier New&amp;#39;&quot;&gt;&lt;font size=&quot;2&quot;&gt;}&lt;/font&gt;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;p style=&quot;margin:0pt 0pt 12pt&quot;&gt;&lt;span style=&quot;font-family:&amp;#39;Times New Roman&amp;#39;&quot;&gt;&lt;font size=&quot;3&quot;&gt;Avviamo la build (F7) e otteniamo qualcosa del tipo:&lt;/font&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin:0pt 0pt 12pt&quot;&gt;&lt;img src=&quot;http://docs.google.com/File?id=dcwhf6k8_96qtvrxvfn_b&quot; width=&quot;576&quot; height=&quot;214&quot; alt=&quot;&quot; style=&quot;border:none&quot;&gt;&lt;/img&gt;&lt;/p&gt;&lt;p style=&quot;margin:0pt 0pt 12pt&quot;&gt;&lt;span style=&quot;font-family:&amp;#39;Times New Roman&amp;#39;&quot;&gt;&lt;font size=&quot;3&quot;&gt;Cliccando sul messaggio di errore il Visual Studio ci porta alla linea che l’ha provocato.&lt;/font&gt;&lt;/span&gt;&lt;/p&gt;&lt;/div&gt;&lt;br&gt;&lt;/div&gt;
&lt;h2&gt;Comments&lt;/h2&gt;
&lt;div class=&#39;comments&#39;&gt;
&lt;div class=&#39;comment&#39;&gt;
&lt;div class=&#39;author&#39;&gt;Andrea Francia&lt;/div&gt;
&lt;div class=&#39;content&#39;&gt;
@des4maisons: Thanks, the next time maybe I&amp;#39;ll use directly English.&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#39;comment&#39;&gt;
&lt;div class=&#39;author&#39;&gt;des4maisons&lt;/div&gt;
&lt;div class=&#39;content&#39;&gt;
This was very helpful, even after being fed through google translator. Thank you!&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
</content>
  </entry>
  
  <entry>
    <title>Understanding the output of rsync --itemize-changes</title>
    <link href="http://andreafrancia.it"/>
    <updated>2010-03-06T00:00:00+01:00</updated>
    <id>http://andreafrancia.it/2010/03/understanding-the-output-of-rsync-itemize-changes</id>
    <content type="html">&lt;h1&gt;Understanding the output of rsync --itemize-changes&lt;/h1&gt;
&lt;div class=&#39;post&#39;&gt;
&lt;p&gt;As you may know the rsync&#39;s &lt;code&gt;--delete&lt;/code&gt; options if misused could make 
severe damage.&lt;/p&gt;

&lt;p&gt;To prevent this you can use the &lt;code&gt;--itemize-change&lt;/code&gt; and the 
&lt;code&gt;--dry-run&lt;/code&gt; options to figure out how the command will behave before 
launching the real one.&lt;/p&gt;

&lt;p&gt;The output will be something like that:
&lt;pre&gt;
.d..t..g... ./
.f...p.g... Something.pdf
.f.....g... md5sum-2010-02-21.txt
.f...p.g... prova.rb
.d.....g... .metadata/
.f...p.g... .metadata/.lock
.f...p.g... .metadata/.log
.f...p.g... .metadata/version.ini
&gt;f+++++++++ Parameter_Usage.txt
&lt;/pre&gt;

Where the first field of each line tell what rsync would do to each file.&lt;br/&gt;&lt;/p&gt;

&lt;p&gt;
I wrote this little schema that helped me to understand this output format and 
I&#39;m publishing hoping it will be useful for others.

&lt;pre&gt;
YXcstpoguax  path/to/file
|||||||||||
`----------- the type of update being done::
 ||||||||||   &lt;: file is being transferred to the remote host (sent).
 ||||||||||   &gt;: file is being transferred to the local host (received).
 ||||||||||   c: local change/creation for the item, such as:
 ||||||||||      - the creation of a directory
 ||||||||||      - the changing of a symlink,
 ||||||||||      - etc.
 ||||||||||   h: the item is a hard link to another item (requires --hard-links).
 ||||||||||   .: the item is not being updated (though it might have attributes that are being modified).
 ||||||||||   *: means that the rest of the itemized-output area contains a message (e.g. &quot;deleting&quot;).
 ||||||||||
 `---------- the file type:
  |||||||||   f for a file,
  |||||||||   d for a directory,
  |||||||||   L for a symlink,
  |||||||||   D for a device,
  |||||||||   S for a special file (e.g. named sockets and fifos).
  |||||||||
  `--------- c: different checksum (for regular files)
   ||||||||     changed value (for symlink, device, and special file)
   `-------- s: Size is different
    `------- t: Modification time is different
     `------ p: Permission are different
      `----- o: Owner is different
       `---- g: Group is different
        `--- u: The u slot is reserved for future use.
         `-- a: The ACL information changed
&lt;/pre&gt;

This schema is based on the contents of the 
&lt;a href=&quot;http://www.samba.org/ftp/rsync/rsync.html&quot;&gt;rsync manual&lt;/a&gt;.
&lt;/p&gt;&lt;/div&gt;
</content>
  </entry>
  
  <entry>
    <title>Presentazione sul Single Responsibility Principle</title>
    <link href="http://andreafrancia.it"/>
    <updated>2010-02-27T00:00:00+01:00</updated>
    <id>http://andreafrancia.it/2010/02/presentazione-sul-single-responsibility-principle</id>
    <content type="html">&lt;h1&gt;Presentazione sul Single Responsibility Principle&lt;/h1&gt;
&lt;div class=&#39;post&#39;&gt;
&lt;p&gt;Oggi sono stato in svizzera all&#39;&lt;a href=&quot;http://barcamp.org/AgileCamp&quot;&gt;AgileCamp&lt;/a&gt; ospitato da &lt;a href=&quot;http://www.sketchin.ch/&quot;&gt;sketchin&lt;/a&gt;. Ho trovato tutti gli interventi interessanti, e ... ho presentato anch&#39;io!&lt;/p&gt;

&lt;p&gt;L&#39;argomento che ho trattato è il &quot;Single Responsibility Principle&quot;, la S di &lt;a href=&quot;http://butunclebob.com/ArticleS.UncleBob.PrinciplesOfOod&quot;&gt;SOLID&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Le slide sono già su &lt;a href=&quot;http://www.slideshare.net/andreafrancia/single-responsibility-principle/&quot;&gt;slideshare&lt;/a&gt;.&lt;/p&gt;&lt;/div&gt;
</content>
  </entry>
  
  <entry>
    <title>Applicazioni REST standalone (senza Tomcat o Glasshfish)</title>
    <link href="http://andreafrancia.it"/>
    <updated>2010-02-10T00:00:00+01:00</updated>
    <id>http://andreafrancia.it/2010/02/applicazioni-rest-standalone-senza-tomcat-o-glasshfish</id>
    <content type="html">&lt;h1&gt;Applicazioni REST standalone (senza Tomcat o Glasshfish)&lt;/h1&gt;
&lt;div class=&#39;post&#39;&gt;
&lt;p&gt;Ho cercato di capire come sia possibile avviare 
&lt;a href=&quot;https://jersey.dev.java.net/&quot;&gt;Jersey&lt;/a&gt; in modalità standalone, cioè 
senza dover ricorrere ad inutili (per ora) complessità, come:&lt;ul&gt;
  &lt;li&gt;application servers (e.g. &lt;a href=&quot;https://glassfish.dev.java.net&quot;&gt;Glasshfish&lt;/a&gt;)
  &lt;li&gt;web containers (e.g. &lt;a href=&quot;http://tomcat.apache.org&quot;&gt;Tomcat&lt;/a&gt;)
  &lt;li&gt;sistemi di build lenti e complicati (e.g.&lt;a href=&quot;http://maven.apache.org/&quot;&gt;maven&lt;/a&gt;)
&lt;/ul&gt;
Inoltre non volevo avere tra i piedi un file &quot;web.xml&quot;.&lt;/p&gt;
&lt;p&gt;Ho scoperto che è possibile! La documentazione non è facile da 
trovare, sembra quasi che Oracle (ex Sun) spinga per complicarti la vita.&lt;/p&gt;
&lt;p&gt;Se volete provare anche voi dovete prima di tutto procurarvi le librerie 
necessarie:&lt;ul&gt;
 &lt;li&gt;&lt;a href=&quot;http://download.java.net/maven/2/com/sun/grizzly/grizzly-http-webserver/1.9.18-e/grizzly-http-webserver-1.9.18-e.jar&quot;&gt;grizzly-servlet-webserver-1.9.18-e.jar&lt;/a&gt;&lt;/li&gt;
 &lt;li&gt;asm-3.1.jar&lt;/li&gt;
 &lt;li&gt;jersey-core-1.1.5.jar&lt;/li&gt;
 &lt;li&gt;jersey-server-1.1.5.jar&lt;/li&gt;
 &lt;li&gt;jsr311-api-1.1.1.jar&lt;/li&gt;
&lt;/ul&gt;

La prima contiene &lt;a href=&quot;https://grizzly.dev.java.net/&quot;&gt;Grizzly&lt;/a&gt; (un 
embeddeddable web server), le restanti fanno parte della distribuzione di jersey
e sono scaricabili in un unica soluzione: 
&lt;a href=&quot;http://download.java.net/maven/2/com/sun/jersey/jersey-archive/1.1.5/jersey-archive-1.1.5.zip&quot;&gt;jersey-archive-1.1.5.zip&lt;/a&gt;
&lt;/p&gt;

&lt;p&gt;Una volta aggiunte le librerie al progetto potete passare alla creazione 
della risorsa di esempio:

&lt;pre&gt;
// file Hello.java
package learn.jersey.grizzly;
import javax.ws.rs.*;

@Path(&quot;/hello&quot;)
public class Hello {
    @GET @Produces(&quot;text/plain&quot;)
    public String sayHello() {
        return &quot;Hello World!&quot;;
    }
}
&lt;/pre&gt;
&lt;/p&gt;&lt;p&gt;E infine il main (che è cortissimo!):

&lt;pre&gt;
// Main.java
package learn.jersey.grizzly;

import com.sun.grizzly.tcp.Adapter;
import com.sun.jersey.api.container.ContainerFactory;
import com.sun.jersey.api.container.grizzly.GrizzlyServerFactory;
import java.io.IOException;

public class Main {

    public static void main(String[] args) throws IOException {
        Adapter adapter = ContainerFactory.createContainer(Adapter.class, Hello.class);
        GrizzlyServerFactory.create(&quot;http://localhost/&quot;, adapter);
    }

}
&lt;/pre&gt;

Dopo aver avviato verificatene il funzionamento seguendo 
&lt;a href=&quot;http://localhost/hello&quot;&gt;http://localhost/hello&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;Che bella la semplicità!&lt;/p&gt;&lt;/div&gt;
</content>
  </entry>
  
  <entry>
    <title>Semplificare le espressioni regolari</title>
    <link href="http://andreafrancia.it"/>
    <updated>2010-02-04T00:00:00+01:00</updated>
    <id>http://andreafrancia.it/2010/02/semplificare-le-espressioni-regolari</id>
    <content type="html">&lt;h1&gt;Semplificare le espressioni regolari&lt;/h1&gt;
&lt;div class=&#39;post&#39;&gt;
&lt;div&gt;Sono convinto che le espressioni regolari siano uno strumento potente per esprimere in modo compatto per esprimere patterns.&lt;/div&gt;&lt;div&gt;Sono però sono anche convinto che per molti problemi siano troppo potenti e che, proprio per il fatto che sono il loro linguaggio e molto compatto, possano essere poco leggibili.&lt;/div&gt;  &lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;Inoltre quando usate in un linguaggio di programmazione sono un linguaggio nel linguaggio con tutti i problemi che ne derivano. Se per esempio le state usando in Java per fare il matching delle string che iniziano con &amp;quot;C:\&amp;quot; bisogna scrivere qualcosa del tipo:&lt;/div&gt;  &lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;        assertTrue(path.matches(&amp;quot;C:\\\\.*&amp;quot;));&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;C&amp;#39;e&amp;#39; un modo per semplificare le cose? Io ho provato creando un piccolo DSL.&lt;/div&gt;&lt;div&gt;Si usa così:&lt;/div&gt;  &lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;        String output = &amp;quot;Killing process 1624...done\n&amp;quot;;&lt;/div&gt;&lt;div&gt;        assertThat(output, looksLike(&amp;quot;Killing process NNNN...done\n&amp;quot;)&lt;/div&gt;&lt;div&gt;                                     .where(&amp;quot;NNNN&amp;quot;).isA(anyNumber()));&lt;/div&gt;  &lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;In questo caso il matching è soddisfatto per ogni stringa dove al posto del termine &amp;quot;NNNN&amp;quot; appare un qualsiasi numero.&lt;/div&gt;&lt;div&gt;Questo è  un&amp;#39;altro esempio:&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;        String path = &amp;quot;C:\\Program Files&amp;quot;;&lt;/div&gt;  &lt;div&gt;&lt;div&gt;        assertThat(path, looksLike(&amp;quot;C:\\&amp;lt;path&amp;gt;&amp;quot;)&lt;/div&gt;&lt;div&gt;                                     .where(&amp;quot;&amp;lt;path&amp;gt;&amp;quot;).isA(anyString()));&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;In questo caso mi sono inventato il termine &amp;quot;&amp;lt;path&amp;gt;&amp;quot;, il bello è che non ci sono vincoli sul nome del termine.&lt;/div&gt;  &lt;div&gt;La libreria è poco più di una proof of concept e non gestisce ancora il caso in cui il termine è ripetuto più di una volta. &lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;Però è funzionante e testata, e presto la metterò online.&lt;/div&gt;  &lt;br&gt;&lt;/div&gt; &lt;/div&gt;&lt;/div&gt;
&lt;h2&gt;Comments&lt;/h2&gt;
&lt;div class=&#39;comments&#39;&gt;
&lt;div class=&#39;comment&#39;&gt;
&lt;div class=&#39;author&#39;&gt;Giorgio Vespucci&lt;/div&gt;
&lt;div class=&#39;content&#39;&gt;
A me &amp;#39;sti DSL mi stanno piacendo sempre di più! :)&lt;br /&gt;Scorre così bene la lettura del codice dei test, dà un senso più di semantica e meno di sintassi :)&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
</content>
  </entry>
  
  <entry>
    <title>Installare Ruby on Rails su Cygwin</title>
    <link href="http://andreafrancia.it"/>
    <updated>2010-01-21T00:00:00+01:00</updated>
    <id>http://andreafrancia.it/2010/01/installare-ruby-on-rails-su-cygwin</id>
    <content type="html">&lt;h1&gt;Installare Ruby on Rails su Cygwin&lt;/h1&gt;
&lt;div class=&#39;post&#39;&gt;
&lt;pre&gt;
In questi giorni sto imparando ad usare Ruby on Rails, un famoso framework per 
scrivere applicazioni web. In queste note descrivo i passi necessari 
all&#39;installazione delle dipendenze.

Prima di tutto avete bisogno di `gem` il comando per scaricare i pacchetti ruby.
Andate sulla pagina http://rubyforge.org/frs/?group_id=126 e individuate 
l&#39;ultima tarball.

Scaricate e installate con::

    wget http://rubyforge.org/frs/download.php/60718/rubygems-1.3.5.tgz
    tar xvfz rubygems-1.3.5.tgz
    cd rubygems-1.3.5
    ruby setup.rb install

Ora installare rails è un gioco da ragazzi, basta fare::

    gem install rails

Però non è finita, qui, perché avrete bisogno di sqlite per fare le vostre 
prove. A meno che non vogliate imbarcarvi nell&#39;uso di mysql.

Per poter usare sqlite dovrete sia installare sqlite vero e proprio sia i 
bindings ruby. Per installare sqlite3 usate::

    apt-cyg install libsqlite3_0  libsqlite3-devel
    
se non avete apt-cyg potete installarlo con i comandi:

    wget http://apt-cyg.googlecode.com/svn/trunk/apt-cyg -O/bin/apt-cyg
    chmod u+x /bin/apt-cyg

Ora installiamo i bindings::
    
    gem install sqlite3-ruby

Ora abbiamo quasi finito e possiamo usare rails::

    rails nome-dell-applicazione
&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;Comments&lt;/h2&gt;
&lt;div class=&#39;comments&#39;&gt;
&lt;div class=&#39;comment&#39;&gt;
&lt;div class=&#39;author&#39;&gt;ynw&lt;/div&gt;
&lt;div class=&#39;content&#39;&gt;
Ciao,&lt;br /&gt;&lt;br /&gt;mi chiedevo se con Cygwin è possibile installare (meglio dire compilare) Ruby utilizzando rvm come spiegato &lt;a href=&quot;http://yeahnowow.com/2010/rvm-installare-tante-versioni-di-ruby-e-tante-versioni-di-rails/&quot; rel=&quot;nofollow&quot;&gt;in questo articolo&lt;/a&gt;.&lt;br /&gt;&lt;br /&gt;Grazie :)&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
</content>
  </entry>
  
  <entry>
    <title>Presentazione all JUG</title>
    <link href="http://andreafrancia.it"/>
    <updated>2009-12-10T00:00:00+01:00</updated>
    <id>http://andreafrancia.it/2009/12/presentazione-all-jug</id>
    <content type="html">&lt;h1&gt;Presentazione all JUG&lt;/h1&gt;
&lt;div class=&#39;post&#39;&gt;
Domani terrò una &lt;a href=&quot;http://www.jugmilano.it/vqwiki/jsp/Wiki?Meeting11Dicembre2009&quot;&gt;presentazione&lt;/a&gt; sull&#39;uso di subversion al jug di milano.

Le slide che userò sono su &lt;a href=&quot;http://www.slideshare.net/andreafrancia/subversion-jug-milano-11-dic-2009&quot;&gt;slideshare&lt;/a&gt;.&lt;/div&gt;
</content>
  </entry>
  
  <entry>
    <title>Presentazione alll'XPUG</title>
    <link href="http://andreafrancia.it"/>
    <updated>2009-12-03T00:00:00+01:00</updated>
    <id>http://andreafrancia.it/2009/12/presentazione-alll-xpug</id>
    <content type="html">&lt;h1&gt;Presentazione alll&#39;XPUG&lt;/h1&gt;
&lt;div class=&#39;post&#39;&gt;
Ieri ho fatto la mia prima presentazione all&#39;&lt;a id=&quot;f1vf&quot; href=&quot;http://milano-xpug.pbworks.com/&quot; title=&quot;XPUG di Milano&quot;&gt;XPUG di Milano&lt;/a&gt;.&amp;nbsp;&lt;div&gt;Ho presentato quello che ho capito del libro &quot;&lt;a id=&quot;j9:o&quot; href=&quot;http://www.amazon.com/Working-Effectively-Legacy-Michael-Feathers/dp/0131177052&quot; title=&quot;Working Effectively with Legacy Code&quot;&gt;Working Effectively with Legacy Code&lt;/a&gt;&quot; di M. Feathers.&amp;nbsp;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;La cosa più bella è che la mia fidanzata è venuta a vedermi presentare ed ha avuto pure la pazienza di restare per la cena che abbiamo fatto dopo. Chissà quanto si è stufata? Continuavamo a parlare di programmazione ;)&lt;/div&gt;&lt;br&gt;&lt;/div&gt;
</content>
  </entry>
  
  <entry>
    <title>Cos'è il codice legacy (secondo Feathers)?</title>
    <link href="http://andreafrancia.it"/>
    <updated>2009-11-22T00:00:00+01:00</updated>
    <id>http://andreafrancia.it/2009/11/cos-il-codice-legacy-secondo-feathers</id>
    <content type="html">&lt;h1&gt;Cos&#39;è il codice legacy (secondo Feathers)?&lt;/h1&gt;
&lt;div class=&#39;post&#39;&gt;
&lt;div&gt;Come vi ho detto ho appena letto questo &lt;a id=&quot;bbna&quot; href=&quot;http://www.amazon.com/Working-Effectively-Legacy-Michael-Feathers/dp/0131177052&quot; title=&quot;Working Effectively with Legacy Code&quot;&gt;libro&lt;/a&gt; e una delle cose più interessanti che vi ho trovato è la definizione di software legacy data usata dall&#39;&lt;a id=&quot;heax&quot; href=&quot;http://www.michaelfeathers.com/&quot; title=&quot;Michael Feathers&quot;&gt;autore&lt;/a&gt;. Infatti secondo Feathers l&#39;aspetto caratterizzante del codice legacy è l&#39;assenza dei test di unità automatici.&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;A prima vista sembra questa affermazione non abbia senso. A noi sembra che il problema dei software legacy è semplicemente che sono progettati (e scritti) male.&amp;nbsp;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;Come sappiamo questo potrebbe non essere un gran problema se solo potessimo migliorare il design esistente, magari riscrivendo qualche porzione. Questo tipo di modifiche ha pure un nome, si chiama &lt;b&gt;&lt;a id=&quot;b_pc&quot; href=&quot;http://en.wikipedia.org/wiki/Refactoring&quot; title=&quot;Refactoring&quot;&gt;Refactoring&lt;/a&gt;&lt;/b&gt; e consiste nel cambiare la struttura interna di un programma mantenendone intatto il comportamento esterno.&lt;/div&gt;&lt;div style=&quot;text-align: auto;&quot;&gt;&lt;br&gt;&lt;/div&gt;&lt;div style=&quot;text-align: auto;&quot;&gt;Il refactoring comporta la modifica del codice esistente e quindi, come tutte le modifiche, se fatta in assenza del feedback di test automatici rischia di &quot;rompere&quot; il comportamento esistente.&lt;/div&gt;&lt;div style=&quot;text-align: auto;&quot;&gt;&lt;br&gt;&lt;/div&gt;&lt;div style=&quot;text-align: auto;&quot;&gt;Senza test è così facile introdurre bachi durante il refactoring che presto i programmatori e managers sviluppano una grande avversione alle modifiche del codice esistente.&lt;/div&gt;&lt;div style=&quot;text-align: auto;&quot;&gt;&lt;br&gt;&lt;/div&gt;&lt;div style=&quot;text-align: auto;&quot;&gt;Le conseguenze di questa &quot;paura del refactoring&quot; l&#39;instaurarsi un circolo vizioso secondo il quale il nuovo codice non può essere scritto bene perché il codice esistente è scritto male. Quindi modifica dopo modifica il codice non migliora e, spesso, peggiora.&lt;/div&gt;&lt;div style=&quot;text-align: auto;&quot;&gt;&lt;br&gt;&lt;/div&gt;&lt;div style=&quot;text-align: auto;&quot;&gt;Questi sono i ragionamenti che portano a pensare che la caratteristica principale del codice legacy sia l&#39;assenza di test di unità automatici.&lt;/div&gt;&lt;div style=&quot;text-align: auto;&quot;&gt;&lt;br&gt;&lt;/div&gt;&lt;div style=&quot;text-align: auto;&quot;&gt;A questo punto è facile capire quale sia la soluzione per interrompere il ciclo vizioso: è necessario mettere sotto test automatici le parti di applicazione che si intende modificare. Gran parte del libro è dedicata all&#39;aggiunta dei test automatici al software legacy per abilitarne il refactoring e renderlo sempre di più un po&#39; meno legacy.&lt;/div&gt;&lt;/div&gt;&lt;br&gt;&lt;/div&gt;
</content>
  </entry>
  
  <entry>
    <title>Cos'è il software legacy</title>
    <link href="http://andreafrancia.it"/>
    <updated>2009-11-16T00:00:00+01:00</updated>
    <id>http://andreafrancia.it/2009/11/cos-il-software-legacy</id>
    <content type="html">&lt;h1&gt;Cos&#39;è il software legacy&lt;/h1&gt;
&lt;div class=&#39;post&#39;&gt;
&lt;div&gt;
  &lt;img id=&quot;uykh&quot; src=&quot;http://docs.google.com/a/andreafrancia.it/File?id=dgbjhsb4_161dn2p7jg9_b&quot; style=&quot;WIDTH:240px; HEIGHT:240px; FLOAT:right; MARGIN-LEFT:1em; MARGIN-RIGHT:0px&quot;&gt;Ho recentemente finito di studiare &lt;a href=&quot;http://www.amazon.com/Working-Effectively-Legacy-Michael-Feathers/dp/0131177052&quot; id=&quot;i942&quot; title=&quot;Working Effectively with Legacy Code&quot;&gt;Working Effectively with Legacy Code&lt;/a&gt; di Michael Feathers.&amp;nbsp;&lt;br&gt;
  &lt;br&gt;
  Come immaginerete il libro parla di codice legacy. Noi abbiamo tutti un&#39;idea di cosa sia il codice legacy.&amp;nbsp;&lt;br&gt;
  Tutti noi ne abbiamo avuto a che fare, a volte lo abbiamo creato e forse lo stiamo pure creando. Feathers nel suo libro utilizza una definizione tutta particolare ed interessante per definirlo ma in questo post vorrei invece ragionare sulla definizione di senso comune di codice legacy.&lt;br&gt;
  &lt;br&gt;
  Secondo me, e penso secondo altri, il software legacy è qualcosa che possiede le seguenti caratteristiche:&lt;br&gt;
  &lt;ul&gt;
    &lt;li&gt;
      &lt;b&gt;è utile:&lt;/b&gt;&lt;/li&gt;
    &lt;ul&gt;
      &lt;li&gt;
        cioé serve alla azienda, crea valore.
      &lt;/li&gt;
    &lt;/ul&gt;
    &lt;li&gt;
      &lt;b&gt;è difficile capirne il funzionamento:&lt;/b&gt;
    &lt;/li&gt;
    &lt;ul&gt;
      &lt;li&gt;
        a volte ci sono delle incosistenze,&amp;nbsp;
      &lt;/li&gt;
      &lt;li&gt;
        l&#39;interfaccia d&#39;uso non è lineare e contiene refusi ed errori storici&amp;nbsp;
      &lt;/li&gt;
    &lt;/ul&gt;
    &lt;li&gt;
      &lt;b&gt;è fragile:&lt;/b&gt;
    &lt;/li&gt;
    &lt;ul&gt;
      &lt;li&gt;
        ogni modifica può comportare un malfunzionamento, per esempio ti chiedono di modificare la formattazione dell&#39;output e poi scopri che non salva più sul database!
      &lt;/li&gt;
    &lt;/ul&gt;
    &lt;li&gt;
      &lt;b&gt;è difficile da modificare:&lt;/b&gt;
    &lt;/li&gt;
    &lt;ul&gt;
      &lt;li&gt;
        a volte una &quot;piccola&quot; modifica ai requisiti richiede di rivedere grandi porzioni di programma, pensarci su, discutere e alla fine si riduce al cambiare una riga di codice in un certo punto magico
      &lt;/li&gt;
      &lt;li&gt;
        a volte invece una &quot;piccola&quot; modifica ai requisiti richiede di fare delle modifiche in tanti diversi posti e devi ricordarti tutti i posti in cui lo devi modificare
      &lt;/li&gt;
    &lt;/ul&gt;
    &lt;li&gt;
      (a volte) &lt;b&gt;è stato scritto da altre persone/enti:&lt;/b&gt;
    &lt;/li&gt;
    &lt;ul&gt;
      &lt;li&gt;
        questo sarebbe il vero significato del termine legacy (cioè retaggio). Però nell&#39;uso comune della parola in ambito software gli altri aspetti sono considerati più caratterizzanti. Infatti a volte si parla anche di software legacy riferendosi a software scritto da noi stessi (intesi come persona o azienda).
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/ul&gt;
  &lt;br&gt;
  La caratteristica che ritengo più importante di questo tipo di software è la prima. Cioé&lt;br&gt;
&lt;/div&gt;
&lt;div&gt;
  &lt;blockquote&gt;
    &lt;b&gt;&lt;font size=&quot;2&quot;&gt;si tratta di un software utile e che crea utile!&lt;/font&gt;&lt;/b&gt;
  &lt;/blockquote&gt;
  Secondo me questo punto è veramente importante.&amp;nbsp;&lt;br&gt;
  &lt;br&gt;
  Il fatto che il programma, anche se brutto, crei valore è il motivo per cui i nostri capi ci chiedono di lavorarci.&amp;nbsp;&lt;br&gt;
  E&#39; il motivo per cui dobbiamo impegnarci per manutenere il programma e rendendolo migliore, o almeno ... non peggiore.&lt;br&gt;
  &lt;br&gt;
&lt;/div&gt;
&lt;div&gt;
  Però non è come dirlo. Non è facile. Ci vuole tecnica e impegno.&lt;br&gt;
  &lt;br&gt;
  Riguardo all&#39;&lt;b&gt;impegno&lt;/b&gt; considero politiche del tipo &quot;cerchiamo di toccarlo il meno possibile&quot;, &quot;moltiplichiamo per 3.14 le stime prima di darle al management&quot;, &quot;opponiamoci ad ogni richiesta di modifica&quot; semplicemente non professionali.&lt;br&gt;
  &lt;br&gt;
  Riguardo alla &lt;b&gt;tecnica&lt;/b&gt;&amp;nbsp;questa si è raccontata in questo libro e si acquisce studiandoloe applicandone gli insegnamenti.&lt;br&gt;
&lt;/div&gt;
&lt;br&gt;&lt;/div&gt;
</content>
  </entry>
  
  <entry>
    <title>Creare una finestra trascinabile in Java</title>
    <link href="http://andreafrancia.it"/>
    <updated>2009-10-12T00:00:00+02:00</updated>
    <id>http://andreafrancia.it/2009/10/creare-una-finestra-trascinabile-in-java</id>
    <content type="html">&lt;h1&gt;Creare una finestra trascinabile in Java&lt;/h1&gt;
&lt;div class=&#39;post&#39;&gt;
Oggi ho fatto un po&#39; di esercizio con Swing di Java. Swing è uno dei GUI toolkit di Java ed è utile conoscerlo perché è compreso nella piattaforma Java. Swing non è l&#39;unica scelta, ne esistono altre, sul web ci sono &lt;a href=&quot;http://stackoverflow.com/questions/138722/which-gui-library-is-the-best-in-java&quot;&gt;alcune&lt;/a&gt; &lt;a href=&quot;http://www.ibm.com/developerworks/java/library/os-swingswt/index.html&quot;&gt;risorse&lt;/a&gt; che vi possono aiutare nella scelta.&lt;br /&gt;
&lt;br /&gt;
Pero&#39; io ho provato con Swing. Volevo provare una draggable window, una finestra senza bordi che si può spostare trascinandola con il mouse. Ecco il risultato:&lt;br /&gt;
&lt;br /&gt;
&lt;pre class=&quot;java:nogutter&quot; name=&quot;code&quot;&gt;import java.awt.Container;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import javax.swing.JWindow;

public class DraggableBorderlessWindow {

    public static void main(String[] args) {
        final JWindow win = new JWindow();

        makeDraggable(win);

        win.setSize(100, 100);
        win.setVisible(true);
        win.setLocation(100, 100);
    }

    private static void makeDraggable(final Container window) {
        MouseAdapter dragger = new Dragger(window);
        window.addMouseMotionListener(dragger);
        window.addMouseListener(dragger);
    }

    private static class Dragger extends MouseAdapter {

        private int offsetX;
        private int offsetY;
        private final Container window;

        public Dragger(Container window) {
            this.window = window;
        }

        @Override
        public void mousePressed(MouseEvent e) {
            offsetX = window.getX() - e.getXOnScreen();
            offsetY = window.getY() - e.getYOnScreen();
        }

        @Override
        public void mouseDragged(MouseEvent e) {
            window.setLocation(e.getXOnScreen() + offsetX,
                               e.getYOnScreen() + offsetY);
        }

    }
}

&lt;/pre&gt;&lt;/div&gt;
</content>
  </entry>
  
  <entry>
    <title>Creare un menu popup</title>
    <link href="http://andreafrancia.it"/>
    <updated>2009-10-12T00:00:00+02:00</updated>
    <id>http://andreafrancia.it/2009/10/creare-un-menu-popup</id>
    <content type="html">&lt;h1&gt;Creare un menu popup&lt;/h1&gt;
&lt;div class=&#39;post&#39;&gt;
Oggi ho imparato a creare popup menu...&lt;br /&gt;
&lt;br /&gt;
&lt;pre name=&quot;code&quot; class=&quot;java:nogutter&quot;&gt;import java.awt.*;
import java.awt.event.*;
import javax.swing.*;

public class PopupMenuExamle {

    public static void main(String[] args) {
        JFrame frame = new JFrame();
        frame.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        frame.setVisible(true);
        frame.setSize(100, 100);

        final JPopupMenu popup = new JPopupMenu() { {

            add(new JMenuItem(&quot;aaa&quot;));
            add(new JMenuItem(&quot;bbb&quot;));
            add(new JMenuItem(&quot;ccc&quot;));
        } };

        addPopupMenuTo(popup, frame);

    }

    private static void addPopupMenuTo(final JPopupMenu popup, Container dest) {
        dest.addMouseListener(new MouseAdapter() {

            @Override
            public void mousePressed(MouseEvent e) {
                maybeShowPopup(e);
            }

            @Override
            public void mouseReleased(MouseEvent e) {
                maybeShowPopup(e);
            }

            private void maybeShowPopup(MouseEvent e) {
                if (e.isPopupTrigger()) {
                    popup.show(e.getComponent(),
                            e.getX(), e.getY());
                }
            }
        });
    }
}
&lt;/pre&gt;&lt;/div&gt;
</content>
  </entry>
  
  <entry>
    <title>Fuffa</title>
    <link href="http://andreafrancia.it"/>
    <updated>2009-10-06T00:00:00+02:00</updated>
    <id>http://andreafrancia.it/2009/10/fuffa</id>
    <content type="html">&lt;h1&gt;Fuffa&lt;/h1&gt;
&lt;div class=&#39;post&#39;&gt;
Sapreste spiegare cosa fa il vostro prodotto in modo conciso e chiaro in modo da invogliare i potenziali clienti? Oppure vi vergognate tanto di dire cosa realmente fa il vostro prodotto da &lt;br /&gt;
sembrarvi riduttivo dirlo e ci girate intorno?&lt;br /&gt;
&lt;br /&gt;
Facciamo un esempio preso dalla pagina ufficiale di un prodotto a caso.&lt;br /&gt;
Il target di questo prodotto sono sviluppatori Java. Il nome del prodotto è stato nascosto sotto delle anonime XXXXX. (Non voglio problemi e quindi cancellerò qualsiasi commento che dica il nome vero del prodotto) &lt;br /&gt;
&lt;br /&gt;
Ecco l&#39;esempio:&lt;br /&gt;
&lt;blockquote&gt;XXXXX is an award-winning productivity tool for Java EE development. It enables your team to complete more features, fix more bugs, and release quality software on schedule and under budget by eliminating time-wasting build and redeploy phases. Your whole team can use the free 30-day evaluation.&lt;br /&gt;
&lt;/blockquote&gt;&lt;br /&gt;
In tutto ci sono 296 caratteri, vediamo quanti di questi sono utili.&lt;br /&gt;
I primi sei caratteri (contando lo spazio) sono utili, dicono il nome del prodotto.&lt;br /&gt;
Analizziamo il resto.&lt;br /&gt;
&lt;br /&gt;
&lt;emphasis&gt;&quot;is an award-winning productivity tool &quot;&lt;/emphasis&gt;. &lt;br /&gt;
&lt;blockquote&gt;Bene. Si tratta un prodotto che ha vinto premi (tipo l&#39;oscar immagino) ed un productivity tool. Probabilmente un tool che &quot;aumenta la produttività&quot; ... di solito i tool si comprano pensando che la produttività aumenti. Insomma 38 caratteri di fuffa.&lt;br /&gt;
&lt;/blockquote&gt;&lt;br /&gt;
&lt;emphasis&gt;&quot;for Java EE development. &quot;&lt;/emphasis&gt;. &lt;br /&gt;
&lt;blockquote&gt;Ahh sappiamo almeno il campo di applicazione! Caratteri utili: 25. &lt;br /&gt;
Totale parziale: 31 utili, 38 fuffa.&lt;br /&gt;
&lt;/blockquote&gt;&lt;br /&gt;
&lt;emphasis&gt;&quot;It enables your team to complete more features, fix more bugs, and release quality software on schedule and under budget &quot;&lt;/emphasis&gt;. &lt;br /&gt;
&lt;blockquote&gt;Wow! Ma che cosa è una nuova metodologia di sviluppo? &lt;br /&gt;
E&#39; una sfera di cristallo che legge nella mente del committente?&lt;br /&gt;
E&#39; una sorta di tempo liofilizzato da usare quando si arriva la scadenza?&lt;br /&gt;
O sono le solite balle, un po&#39; come quando ci ha detto che è un tool che aumenta la produttività? Insomma: 121 caratteri sprecati.&lt;br /&gt;
Totale parziale: 31 utili, 159 fuffa.&lt;br /&gt;
&lt;/blockquote&gt;&lt;br /&gt;
&lt;emphasis&gt;by eliminating time-wasting build and redeploy phases. &quot;&lt;/emphasis&gt;&lt;br /&gt;
&lt;blockquote&gt;Ahh, finalmente. Qualcosa si capisce. Ha a che fare con la fase di build e redeploy.&lt;br /&gt;
Non ho ancora capito a cosa serve ma un idea ce l&#39;ho.&lt;br /&gt;
Caratteri utili: 55&lt;br /&gt;
Totale parziale: 86 utili, 159 fuffa.&lt;br /&gt;
&lt;/blockquote&gt;&lt;br /&gt;
&lt;emphasis&gt;&quot;Your whole team can use the free 30-day evaluation. &quot;&lt;/emphasis&gt;&lt;br /&gt;
&lt;blockquote&gt;Questa è un informazione sul periodo di prova, è utile ma non entra nel conteggio, ne in bene ne in male.&lt;br /&gt;
&lt;/blockquote&gt;&lt;br /&gt;
Tirando le somme abbiamo:&lt;br /&gt;
Caratteri utili: 86&lt;br /&gt;
Caratteri fuffa: 159&lt;br /&gt;
Percentuale fuffa: 86/159 = 54%&lt;br /&gt;
&lt;br /&gt;
&lt;h3&gt;Adesso miglioriamolo&lt;/h3&gt;Le parti utili sono:&lt;br /&gt;
&lt;ul&gt;&lt;li&gt;XXXXX is a tool &lt;/li&gt;
&lt;li&gt;for Java EE development&lt;/li&gt;
&lt;li&gt;eliminating time-wasting build and redeploy phases.&lt;/li&gt;
&lt;/ul&gt;&lt;br /&gt;
Facciamo una prova:&lt;br /&gt;
&lt;br /&gt;
&lt;blockquote&gt;XXXXX is a tool that eliminates the build and redeploy phases in Java EE development.&lt;br /&gt;
&lt;/blockquote&gt;&lt;br /&gt;
E&#39; ancora oscuro ma è molto meno rumoroso. Possiamo fare di meglio. Studiamo cosa fa realmente e magari facciamoci aiutare da wikipedia.&lt;br /&gt;
&lt;blockquote&gt;XXXXX is a plugin for the Java Virtual Machine that enables on-the-fly reloading of changes made to Java class files.&lt;br /&gt;
&lt;/blockquote&gt;&lt;br /&gt;
Mettiamo tutto assieme:&lt;br /&gt;
&lt;blockquote&gt;XXXXX is a plugin for the Java Virtual Machine that enables on-the-fly reloading of changes made to Java class files. This is great because you can actually change source code when debugging and, more importantly, works also with Java EE applications servers.&lt;br /&gt;
&lt;/blockquote&gt;&lt;br /&gt;
Conteggio fuffa:&lt;ul&gt;&lt;li&gt;&quot;XXXXX is a plugin for the Java Virtual Machine that enables on-the-fly reloading of changes made to Java class files. &quot; -&amp;gt; 118 utili&lt;/li&gt;
&lt;li&gt;&quot;This is great because &quot; -&amp;gt; 22 fuffa&lt;/li&gt;
&lt;li&gt;&quot;you can actually change source code when debugging and, &quot; -&gt; 56 utili&lt;/li&gt;
&lt;li&gt;&quot;more importantly, &quot; -&amp;gt; 18 fuffa &lt;/li&gt;
&lt;li&gt;&quot;works also with Java EE applications servers.&quot; -gt; 45 utili&lt;/li&gt;
&lt;/ul&gt;&lt;br /&gt;
Caratteri utili: 118+56+45 = 219&lt;br /&gt;
Caratteri fuffa: 22+18 = 40&lt;br /&gt;
Percentuale fuffa: 40/219 = 18%&lt;br /&gt;
&lt;br /&gt;
PS: Se pensate che ho sbagliato qualche conto probabilmente avete ragione&lt;/div&gt;
</content>
  </entry>
  
  <entry>
    <title>Utilities for managing svn:ignore properties</title>
    <link href="http://andreafrancia.it"/>
    <updated>2009-10-04T00:00:00+02:00</updated>
    <id>http://andreafrancia.it/2009/10/utilities-for-managing-svn-ignore-properties</id>
    <content type="html">&lt;h1&gt;Utilities for managing svn:ignore properties&lt;/h1&gt;
&lt;div class=&#39;post&#39;&gt;
I&#39;ve just created a few commands for simplifying the usage of svn:ignore property of Subversion from command line. You can download, and see the sources on the &lt;a href=&quot;http://code.google.com/p/svn-ignore/&quot;&gt;project page&lt;/a&gt;.&lt;br /&gt;
&lt;br /&gt;
The usage is simple, typing:&lt;br /&gt;
&lt;blockquote&gt;&lt;span style=&quot;font-family: &#39;Courier New&#39;, Courier, monospace;&quot;&gt;&lt;span class=&quot;Apple-style-span&quot; style=&quot;background-color: black;&quot;&gt;&lt;span style=&quot;color: white;&quot;&gt;svn-ignore-add path/to/file-to-ignore&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/blockquote&gt;&lt;span style=&quot;font-family: inherit;&quot;&gt;will append to the current &lt;/span&gt;&lt;span style=&quot;font-family: &#39;Courier New&#39;, Courier, monospace;&quot;&gt;svn:ignore&lt;/span&gt;&lt;span style=&quot;font-family: inherit;&quot;&gt; property of &quot;&lt;/span&gt;&lt;span style=&quot;font-family: &#39;Courier New&#39;, Courier, monospace;&quot;&gt;path/to&lt;/span&gt;&lt;span style=&quot;font-family: inherit;&quot;&gt;&quot; the string &quot;&lt;/span&gt;&lt;span style=&quot;font-family: &#39;Courier New&#39;, Courier, monospace;&quot;&gt;file-to-ignore&lt;/span&gt;&lt;span style=&quot;font-family: inherit;&quot;&gt;&quot;.&lt;/span&gt;&lt;br /&gt;
&lt;br /&gt;
The project was written in Bash with TDD.&lt;br /&gt;
The xUnit framework used is an modified version of shunit2 that I hacked sometime ago for the trash-cli project.&lt;/div&gt;
</content>
  </entry>
  
  <entry>
    <title>My Small Software Pomodoro Timer</title>
    <link href="http://andreafrancia.it"/>
    <updated>2009-10-03T00:00:00+02:00</updated>
    <id>http://andreafrancia.it/2009/10/my-small-software-pomodoro-timer</id>
    <content type="html">&lt;h1&gt;My Small Software Pomodoro Timer&lt;/h1&gt;
&lt;div class=&#39;post&#39;&gt;
I&#39;ve just created my own home made software Pomodoro Timer.&amp;nbsp;
&lt;div&gt;Unlike other timers has a very simple interface.&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;Features/bugs:&lt;/div&gt;&lt;div&gt;&lt;ul&gt;&lt;li&gt;Left time always visible.&lt;/li&gt;&lt;li&gt;You can drag the window where you want.&lt;/li&gt;&lt;li&gt;The interface is minimalist (less features, simpler interface)&lt;/li&gt;&lt;li&gt;The window waste less than 3k pixel of your screen.&lt;/li&gt;&lt;li&gt;Only three actions: start, stop, close&lt;/li&gt;&lt;li&gt;No Sounds&lt;/li&gt;&lt;li&gt;Works on Windows Only&lt;/li&gt;&lt;li&gt;Sources &lt;a id=&quot;soyw&quot; href=&quot;http://code.google.com/p/franciapomo/&quot; title=&quot;available&quot;&gt;available&lt;/a&gt;.&lt;/li&gt;&lt;li&gt;Free &lt;a id=&quot;sl6x&quot; href=&quot;http://code.google.com/p/franciapomo/downloads&quot; title=&quot;download&quot;&gt;download&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;Screenshots:&lt;/div&gt;&lt;div&gt;&lt;ul&gt;&lt;li&gt;Start!&lt;/li&gt;&lt;/ul&gt;&lt;blockquote class=&quot;webkit-indent-blockquote&quot; style=&quot;margin: 0 0 0 40px; border: none&quot;&gt;&lt;blockquote class=&quot;webkit-indent-blockquote&quot; style=&quot;margin: 0 0 0 40px; border: none&quot;&gt;&lt;img src=&quot;http://docs.google.com/a/andreafrancia.it/File?id=dgbjhsb4_133kwgnbcg8_b&quot; style=&quot;width: 94px; height: 26px&quot;&gt;&lt;/blockquote&gt;&lt;/blockquote&gt;&lt;ul&gt;&lt;li&gt;Running:&lt;/li&gt;&lt;/ul&gt;&lt;blockquote class=&quot;webkit-indent-blockquote&quot; style=&quot;margin: 0 0 0 40px; border: none&quot;&gt;&lt;blockquote class=&quot;webkit-indent-blockquote&quot; style=&quot;margin: 0 0 0 40px; border: none&quot;&gt;&lt;img src=&quot;http://docs.google.com/a/andreafrancia.it/File?id=dgbjhsb4_132ccmmfgfz_b&quot; style=&quot;width: 94px; height: 26px&quot;&gt;&lt;/blockquote&gt;&lt;/blockquote&gt;&lt;/div&gt;&lt;/div&gt;&lt;br&gt;&lt;/div&gt;
&lt;h2&gt;Comments&lt;/h2&gt;
&lt;div class=&#39;comments&#39;&gt;
&lt;div class=&#39;comment&#39;&gt;
&lt;div class=&#39;author&#39;&gt;Maurizio&lt;/div&gt;
&lt;div class=&#39;content&#39;&gt;
Visto e provato. Complimenti ;)&lt;br /&gt;Ho apportato una piccola modifica per visualizzare minuti e secondi a due cifre (sempre, anche quando &amp;lt; 10). La trovi nella lista delle issue, perché un bug di Google Code non mi permette di clonare il repo sul server :(&lt;br /&gt;&lt;br /&gt;ciao!&lt;br /&gt;Maurizio&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
</content>
  </entry>
  
  <entry>
    <title>How Compare Word Documents in TortoiseHG using TortoiseSVN</title>
    <link href="http://andreafrancia.it"/>
    <updated>2009-09-14T00:00:00+02:00</updated>
    <id>http://andreafrancia.it/2009/09/how-compare-word-documents-in-tortoisehg-using-tortoisesvn</id>
    <content type="html">&lt;h1&gt;How Compare Word Documents in TortoiseHG using TortoiseSVN&lt;/h1&gt;
&lt;div class=&#39;post&#39;&gt;
&lt;h4&gt;Introduction&lt;/h4&gt;&lt;div&gt;TortoiseSVN is a mature and complete product that provides some useful features like comparison of non text based files like Word, PowerPoint, Excels and images files.&lt;/div&gt;&lt;div&gt;The TortoiseHg hasn&#39;t this feature so you can&#39;t, for example, visual compare Word files. Nevertheless we can configure TortoiseHg in a way that it can use the comparison features &amp;nbsp;of TortoiseSVN. In this post I will choose you how to do such configuration.&lt;/div&gt;&lt;h4&gt;Create an the invoke-tortoisesvn-diff.cmd&lt;/h4&gt;&lt;div&gt;First of all we create a command that will invoke TortoiseSVN Diff.&lt;/div&gt;&lt;div&gt;Create a file named &lt;font class=&quot;Apple-style-span&quot; face=&quot;&#39;Courier New&#39;&quot;&gt;invoke-tortoisesvn-diff.cmd&lt;/font&gt; with the code:&lt;/div&gt;&lt;div&gt;&lt;blockquote&gt;&lt;font class=&quot;Apple-style-span&quot; face=&quot;&#39;Courier New&#39;&quot;&gt;SET LEFT=%1&lt;br&gt;SET RIGHT=%2&lt;br&gt;SET PROC=C:\Program Files\TortoiseSVN\bin\TortoiseProc.exe&lt;br&gt;&quot;%PROC%&quot; /command:diff /path:%LEFT% /path2:%RIGHT%&lt;/font&gt;&lt;/blockquote&gt;&lt;/div&gt;&lt;div&gt;Place it when you want, for example in &lt;font class=&quot;Apple-style-span&quot; face=&quot;&#39;Courier New&#39;&quot;&gt;C:\Program Files\TortoiseHg&lt;/font&gt;.&lt;/div&gt;&lt;div&gt;Before continuing test the command, for example comparing two word files:&lt;/div&gt;&lt;blockquote&gt;&lt;font class=&quot;Apple-style-span&quot; face=&quot;&#39;Courier New&#39;&quot;&gt;&lt;font size=&quot;2&quot;&gt;invoke-tortoisesvn-diff.cmd C:\path\to\left\document.doc C:\path\to\right\document.doc&lt;/font&gt;&lt;/font&gt;&lt;/blockquote&gt;&lt;div&gt;Using absolutes path is essential.&lt;/div&gt;&lt;h4&gt;Integrate invoke-tortoisesvn-diff in TortoiseHg&lt;/h4&gt;&lt;div&gt;Next we tells to TortoiseHg to use this command editing the mercurial.ini.&lt;/div&gt;&lt;div&gt;Placed in &lt;font class=&quot;Apple-style-span&quot; face=&quot;&#39;Courier New&#39;&quot;&gt;C:\Documents and Settings\&amp;lt;user&amp;gt;\mercurial.ini&lt;/font&gt;.&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;And add the followings::&lt;/div&gt;&lt;blockquote&gt;[extdiff]&lt;br&gt;cmd.tortoise_svn_diff = C:\Program Files\TortoiseHg\invoke-tortoisesvn-diff.cmd&lt;/blockquote&gt;&lt;div&gt;Now we can test the integration with TortoiseHG. From a mercurial working directory do right click &amp;gt; &lt;i&gt;TortoiseHG...&lt;/i&gt; &amp;gt; &lt;i&gt;Visual Diff &lt;/i&gt;and the usual&amp;nbsp;&lt;b&gt;&quot;Visual Diffs&quot;&lt;/b&gt;&amp;nbsp;window should be displayed.&lt;/div&gt;&lt;div&gt;&lt;div style=&quot;text-align: center&quot; id=&quot;d6b1&quot;&gt;&lt;img src=&quot;http://docs.google.com/a/andreafrancia.it/File?id=dgbjhsb4_119f9jc2bg4_b&quot; style=&quot;width: 418px; height: 223px&quot;&gt;&lt;/div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;From the tools dropdown list choose&amp;nbsp;&lt;i&gt;tortoise_svn_diff &lt;span style=&quot;font-style: normal;&quot;&gt;and then&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;font-style: normal&quot;&gt;double click the document name and the differences should be shown in a new word document.&lt;/span&gt;&lt;/i&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;br&gt;&lt;/div&gt;
</content>
  </entry>
  
  <entry>
    <title>Duke Nukem Forever</title>
    <link href="http://andreafrancia.it"/>
    <updated>2009-09-03T00:00:00+02:00</updated>
    <id>http://andreafrancia.it/2009/09/duke-nukem-forever</id>
    <content type="html">&lt;h1&gt;Duke Nukem Forever&lt;/h1&gt;
&lt;div class=&#39;post&#39;&gt;
Oggi in rete ho scoperto la storia di un videogioco chiamato &lt;a id=&quot;n.vp&quot; href=&quot;http://en.wikipedia.org/wiki/Duke_Nukem_Forever&quot; title=&quot;Duke Nukem Forever&quot;&gt;Duke Nukem Forever&lt;/a&gt;.&lt;br&gt;Si tratta di un videogioco che potrebbe essere considerato il simbolo dello sviluppo software mal gestito: lo sviluppo è iniziato 12 anni fa e non è ancora terminato!&lt;div&gt;&lt;br&gt;&lt;div&gt;&lt;div&gt;I motivi del ritardo non li conosciamo ma si possono intuire leggendo la storia dello sviluppo su wikipedia (per esempio si legge che hanno cambiato tecnologia più di una volta, che hanno riscritto da zero alcuni componenti al posto di usare quelli già fatti, e che hanno cambiato spesso il personale).&amp;nbsp;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;La cosa che mi lascia sconcertato è come fa un progetto a durare così tanto senza morire? Quanti soldi avranno speso? Chi ne ha spesi così tanti e chi ha continuato a spenderli non vedendo risultati?&lt;br&gt;Incredibile.&lt;br&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;br&gt;&lt;/div&gt;
</content>
  </entry>
  
  <entry>
    <title>Il protocollo di Subversion si rinnova</title>
    <link href="http://andreafrancia.it"/>
    <updated>2009-07-21T00:00:00+02:00</updated>
    <id>http://andreafrancia.it/2009/07/il-protocollo-di-subversion-si-rinnova</id>
    <content type="html">&lt;h1&gt;Il protocollo di Subversion si rinnova&lt;/h1&gt;
&lt;div class=&#39;post&#39;&gt;
&lt;div&gt;&lt;div&gt;Avete presente il protocollo HTTP di Subversion? Lo stanno migliorando e studiare come gestiscono questa miglioria mi aiuta a capire come gestire i progetti software.&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;Subversion supporta diversi protocolli (svn, http, e svn+ssh). Il protocollo che poggia su HTTP è forse il più comodo da usare come client perché usa solo la porta 80 (buono per i firewall e proxy trasparenti), e permette il browsing del repository con un semplice browser. Lato server il protocollo over HTTP fornisce una serie di goodies ereditate da Apache come la possibilità di usare l&amp;#39;autenticazione LDAP, e le stessi strumenti di logging usati per Apache. Fino ad ora questa comodità si pagava in termini di prestazioni. Come ammette lo stesso &lt;a href=&quot;http://svnbook.red-bean.com/en/1.5/svn.serverconfig.choosing.html#svn.serverconfig.choosing.apache&quot;&gt;manuale&lt;/a&gt; di Subversion il protocollo over HTTP è più lento degli altri due.&lt;/div&gt;  &lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;Oltre alla velocità ci sono questioni di semplicità e di leggibilità che riguardano il protocollo. Se ho capito bene &lt;a href=&quot;http://blog.red-bean.com/sussman/?p=139&quot;&gt;questo post&lt;/a&gt; che lo letto il problema sta nel fatto che il protocollo Subversion over HTTP è stato su una specifica over-ingegnerizzata: &lt;a href=&quot;http://www.ietf.org/rfc/rfc3253.txt&quot;&gt;l&amp;#39;estensione di versioning di WebDAV&lt;/a&gt;.&lt;/div&gt;  &lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;Ora si è deciso di cambiare! La modifica è stata definita in una &lt;a href=&quot;http://svn.collab.net/repos/svn/trunk/notes/http-protocol-v2.txt&quot;&gt;nuova specifica&lt;/a&gt;. In questo nuovo protocollo sono state rimosse tutte le complicazioni non necessarie. La parte interessante (per me) è vedere come la modifica è gestita!&lt;/div&gt;  &lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;Le specifiche sono scritte in un documento testo semplice messo sotto controllo di versione e automaticamente messe a disposizione su HTTP (grazie all&amp;#39;uso di Subversion over HTTP tra l&amp;#39;altro).&lt;/div&gt;  &lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;All&amp;#39;inizio c&amp;#39;e&amp;#39; una introduzione che contestualizza le modifiche e di seguito le specifiche sono dettagliate in senso top down. Lo stesso documento funge da report sullo stato del lavoro. Scendendo nel documento si trovano infatti gli elenchi di cose da implementare taggati con la scritta [DONE] o [STARTED]. Scorrendo indietro nella storia si potrebbe addirittura vedere la storia del documento e come si è evoluto il design e lo stato di implementazione.&lt;/div&gt;  &lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;Molto istruttivo.&lt;/div&gt;&lt;div&gt;-- &lt;br&gt;Andrea Francia&lt;br&gt;&lt;a href=&quot;http://andreafrancia.blogspot.com/&quot;&gt;http://andreafrancia.blogspot.com/&lt;/a&gt;&lt;br&gt; &lt;/div&gt;&lt;/div&gt; &lt;/div&gt;
</content>
  </entry>
  
  <entry>
    <title>Confronti numerici con ndiff</title>
    <link href="http://andreafrancia.it"/>
    <updated>2009-07-02T00:00:00+02:00</updated>
    <id>http://andreafrancia.it/2009/07/confronti-numerici-con-ndiff</id>
    <content type="html">&lt;h1&gt;Confronti numerici con ndiff&lt;/h1&gt;
&lt;p&gt;Ndiff permette di confrontare i file numericamente. E&amp;#8217; molto comodo se si vogliono confrontar gli output di programmi di calcolo numerico trascurando le differenze di formato di rappresentazione dei numeri.&lt;/p&gt;

&lt;p&gt;Io lo installo così::&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;mkdir --parent .local/{bin,src,man/man1}

cd  .local/src
wget http://ftp.math.utah.edu/pub//misc/ndiff-2.00.tar.gz
tar xvfz ndiff-2.00.tar.gz

cd ndiff-2.00
./configure --prefix ~/.local
make install

echo &amp;#39;export PATH=~/.local/bin:&amp;quot;$PATH&amp;quot;&amp;#39; &amp;amp;gt;&amp;amp;gt; ~/.bashrc
echo &amp;#39;export MANPATH=~/.local/man:&amp;quot;$MANPATH&amp;quot;&amp;#39; &amp;amp;gt;&amp;amp;gt; ~/.bashrc&lt;/code&gt;&lt;/pre&gt;</content>
  </entry>
  
  <entry>
    <title>Mission Impossible</title>
    <link href="http://andreafrancia.it"/>
    <updated>2009-06-24T00:00:00+02:00</updated>
    <id>http://andreafrancia.it/2009/06/mission-impossible</id>
    <content type="html">&lt;h1&gt;Mission Impossible&lt;/h1&gt;
&lt;div class=&#39;post&#39;&gt;
Oggi dovevo recarmi a Roma per lavoro. Alla fine ce l&amp;#39;ho fatta ma è stata un&amp;#39;impresa!&lt;br&gt;&lt;br&gt;Sono partito da casa alle 7.40, ho preso il Freccia Rossa di trenitalia.&lt;br&gt;Prima di salire alla stazione avevo letto sul tabellone: &amp;quot;possibili ritardi di 20 minuti dei treni da e verso Roma&amp;quot;.&lt;br&gt; &lt;br&gt;A Bologna mi hanno soppresso il treno. Nessun avviso prima di Bologna. E&amp;#39; venuto il capotreno in carrozza a gridare: &amp;quot;questo treno è sopresso! andate a prendere quello al binario 10&amp;quot;.&lt;br&gt;Il nuovo treno conteneva la gente di tre treni diversi. I posti non bastavano. Ho gentilmente offerto il mio ad una suora.&lt;br&gt; &lt;br&gt;il treno è arrivato a Roma con un ritardo mostruoso. Circa 160 minuti.&lt;br&gt;&lt;br&gt;Arrivato a Termini mi dirigo verso la metro. Lì scopro che la linea B di Roma è inutilizzabile: Guasto elettrico!&lt;br&gt;Prendo due autobus strapieni e arrivo al lavoro.&lt;br&gt; &lt;br&gt;Arrivo sul posto di lavoro con circa 3 ore di ritardo e non sono ancora passato dall&amp;#39;albergo a lasciare la valigia.&lt;br&gt;Lavoro per il poco tempo che rimane alla chiusura dell&amp;#39;azienda e mi dirigo verso il BnB.&lt;br&gt; &lt;br&gt;Il BnB sembra non esistere e sembra un tentativo di truffa o qualcosa di simile.&lt;br&gt;&lt;br&gt;Chiedo alla fidanzata di trovarmi il numero di un hotel che ho già usato in passato.&lt;br&gt;Chiamo questo hotel e la receptionist mi propone un prezzo che è il 30% più alto di quello scritto su Internet.&lt;br&gt; &lt;br&gt;Contratto il prezzo è ottengo che sia solo 2 euro più alto di quello rilevato dalla mia fidanzata su Internet.&lt;br&gt;&lt;br&gt;Che giornata!&lt;br&gt; &lt;/div&gt;
</content>
  </entry>
  
  <entry>
    <title>Mio papà è un grande</title>
    <link href="http://andreafrancia.it"/>
    <updated>2009-06-17T00:00:00+02:00</updated>
    <id>http://andreafrancia.it/2009/06/mio-pap-un-grande</id>
    <content type="html">&lt;h1&gt;Mio papà è un grande&lt;/h1&gt;
&lt;div class=&#39;post&#39;&gt;
Ieri dopo il lavoro mi sono diretto verso la Città per incontrare alcuni amici.&lt;br&gt;&lt;br&gt;Ho preso l&amp;#39;autostrada e dopo qualche kilometro la macchina ha cominciato a perdere potenza!!!! Panico!&lt;br&gt;Ma che gli è successo! Chiamo mio padre al cellulare: &amp;quot;Papà! La macchina è strana ha perso potenza! ... non va oltre i 2000 giri ... pero&amp;#39; va&amp;#39; ... sto andando avanti con le quattro frecce ... se riesco esco al prossimo casello altrimenti mi tocca fare venire il carroattrezzi e pagare un sacco per la chiamata&amp;quot;.&lt;br&gt; &lt;br&gt;Andando a 40 km/h arrivo fino al casello più vicino esco dall&amp;#39;autostrada e aspetto mio padre.&lt;br&gt;&lt;br&gt;Lui arriva, sente il rumore del motore e capisce qualcosa, poi mi chiede &amp;quot;accellera un po&amp;#39;&amp;quot; sente il rumore e capisce qualcosa...&lt;br&gt; Guarda il motore e capisce qualcosa e dice: &amp;quot;Mmmh ... forse la cinghia ... mi ci vorrebbe una chiave del 13 ... &amp;quot;&lt;br&gt;&lt;br&gt;Poi mi dice: &amp;quot;Vai pure alla Città a trovare i tuoi amici con la mia macchina, io torno a casa con la tua e cerco di capire cos&amp;#39;ha&amp;quot;.&lt;br&gt; &lt;br&gt;&amp;quot;Grazie!&amp;quot; è la mia risposta.&lt;br&gt;&lt;br&gt;Riprendo il viaggio e dopo 10 minuti il cellulare squilla ... è mio padre! cavolo! si sarà fermata la macchina? Rispondo. &lt;br&gt;Mio padre: &amp;quot;Andrea! Ho incontrato un signore che mi ha gentilmente una chiave del 13. Adesso la macchina va che è una meraviglia! Comunque adesso la porto a casa e la stringo bene&amp;quot;&lt;br&gt; &lt;br&gt;Certo che è bravo!&lt;br&gt; &lt;/div&gt;
&lt;h2&gt;Comments&lt;/h2&gt;
&lt;div class=&#39;comments&#39;&gt;
&lt;div class=&#39;comment&#39;&gt;
&lt;div class=&#39;author&#39;&gt;pino&lt;/div&gt;
&lt;div class=&#39;content&#39;&gt;
Bel post: il tuo papà rassomiglia al mio!&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
</content>
  </entry>
  
  <entry>
    <title>Milano XPUG 13/5/09: Deep Dynamics and Lean Startups</title>
    <link href="http://andreafrancia.it"/>
    <updated>2009-05-14T00:00:00+02:00</updated>
    <id>http://andreafrancia.it/2009/05/milano-xpug-13-5-09-deep-dynamics-and-lean-startups</id>
    <content type="html">&lt;h1&gt;Milano XPUG 13/5/09: Deep Dynamics and Lean Startups&lt;/h1&gt;
&lt;div class=&#39;post&#39;&gt;
Ieri sono andato ad meeting su XP.&lt;/div&gt;
</content>
  </entry>
  
  <entry>
    <title>Come vedere i film sul Nintendo DS</title>
    <link href="http://andreafrancia.it"/>
    <updated>2009-03-09T00:00:00+01:00</updated>
    <id>http://andreafrancia.it/2009/03/come-vedere-i-film-sul-nintendo-ds</id>
    <content type="html">&lt;h1&gt;Come vedere i film sul Nintendo DS&lt;/h1&gt;
&lt;div class=&#39;post&#39;&gt;
&lt;pre&gt;
==================================
Come vedere i film sul Nintendo DS
==================================

Lo sapevate che si possono vedere intermi film sul Nintendo DS? Sapevatelo.

I filmati si possono vedere usando MoonShell, un media player per Nintendo DS.

Date le limitazione hardware del dispositivo non è possibile visualizzare i 
video nel formato originale, essi vanno ridotti a livelli di bitrate che il 
Nintendo DS sia in grado si sopportare. Il formato di questi video a bitrate 
ridotto si chiama DPG.

Questo post spiega come convertire un video in formato .AVI in formato .DPG in 
modo che possano essere visti sul Nintendo DS. 
La guida è basata su Ubuntu 8.10 ma probabilmente sono sufficienti piccole 
modifiche per applicarla ad altri sistemi GNU/Linux.

Installazione
=============
Il software si chiama `dpgconv` ed è uno script python che richiede altri 
due software:

 - mplayer (e mencoder)
 - mpeg_stat
 
Installazione di mplayer e mencoder
-----------------------------------
Questi due software si installano semplicemente con::

  sudo apt-get install mplayer mencoder

Installazione di mpeg_stat
--------------------------
Il software `mpeg_stat` sembra che non abbia più una sua homepage, per 
scaricarlo dovete cercare e trovare qualche mirror che ne abbia ancora una 
copia. Io l&#39;ho trovato qui: 
ftp://ftp.riken.go.jp/pub/FreeBSD/distfiles/mpeg_stat-2.2b-src.tar.gz e l&#39;ho 
installato con i seguenti comandi::

  cd ~/.local/src
  wget ftp://ftp.riken.go.jp/pub/FreeBSD/distfiles/mpeg_stat-2.2b-src.tar.gz
  mkdir mpeg_stat-2.2b
  cd mpeg_stat-2.2b
  tar xvfz ../mpeg_stat-2.2b-src.tar.gz
  cd mpeg_stat
  make
  cd ~/.local/bin
  ln -s ../src/mpeg_stat-2.2b/mpeg_stat

Installazione di dpgconv
------------------------
Dato che si tratta di un semplice script la procedura di installazione 
consiste solo nello scaricare questo script e renderlo eseguibile.

Io ho fatto così::

  wget http://theli.ho.com.ua/dpgconv/dpgconv-8.py
  chmod u+x dpgconv-8.py

Una volta installato verifichiamo che dpkgconv rilevi tutti i programmi che 
servono digitando::

  ./dpgconv-8.py

Dovrebbe dire qualcosa di simile a::

   mpeg_stat -- MPEG Analyzer for MPEG I video streams (version 2.2b)
   MPlayer 1.0rc2-4.3.2 (C) 2000-2007 MPlayer Team
   MEncoder 2:1.0~rc2-0ubuntu17 (C) 2000-2007 MPlayer Team
   It seems we found all programs :)...continuing
   ______________________________________________

Conversione dei filmati
=======================
La conversione è semplicissima, per convertire il video `esempio.avi` si usa
il comando::

  ./dpgconv-8.py esempio.avi

La conversione potrebbe durare un po&#39;, specialmente su macchine lente. Il 
risultato della conversione è un file con lo stesso basename ma con estensione 
.dpg (nel nostro caso `esempio.dpg`), naturalmente questo file è quello che 
deve essere copiato sulla vostra flash card e visualizzato sul Nintendo DS.

Qualità video/audio
===================
Non aspettatevi un&#39;alta qualità video, il Nintendo DS non è stato progettato è 
limitato e non è stato progettato per questo. Se avete bisogno di una 
qualità alta forse avete bisogno di qualcos&#39;altro, come la PSP. 

References
==========
 - Home page di dpgconv: http://theli.is-a-geek.org/blog/static/dpgconv
 - MoonShell on Wikipedia: http://en.wikipedia.org/wiki/MoonShell
 - DPG on Wikipedia: http://en.wikipedia.org/wiki/NDs-mPeG
&lt;/pre&gt;&lt;/div&gt;
</content>
  </entry>
  
  <entry>
    <title>Building Chandler on an am64 Ubuntu</title>
    <link href="http://andreafrancia.it"/>
    <updated>2009-02-04T00:00:00+01:00</updated>
    <id>http://andreafrancia.it/2009/02/building-chandler-on-an-am64-ubuntu</id>
    <content type="html">&lt;h1&gt;Building Chandler on an am64 Ubuntu&lt;/h1&gt;
&lt;div class=&#39;post&#39;&gt;
After many days of tries finally I managed to run &lt;a href=&quot;http://chandlerproject.org/&quot;&gt;Chandler Desktop&lt;/a&gt; on my Ubuntu.
I had tried the binary installation but it didn&#39;t work, running chandler the following problem is reported:

&lt;pre name=&quot;code&quot; class=&quot;shell:nogutter:nocontrol&quot;&gt;
$ chandler
...
ImportError: /home/andrea/.python-eggs/PyICU-0.8-py2.5-linux-i686.egg-tmp/_PyICU.so: wrong ELF class: ELFCLASS32
&lt;/pre&gt;
Fortunately you can always build it from sources. Unfortunately downloading the sources and compiling take much time and is not so easy know which packages you need to build it.

To install all(? surely I missed someone) the needed packages do:
&lt;pre name=&quot;code&quot; class=&quot;shell:nogutter:nocontrol&quot;&gt;
sudo apt-get install libicu-dev
sudo apt-get install libssl-dev
sudo apt-get install python-gdata
sudo apt-get install ant
sudo apt-get install default-jdk
sudo apt-get install lib32icu38
sudo apt-get install curl
&lt;/pre&gt;
To get the sources and build them:
&lt;pre name=&quot;code&quot; class=&quot;shell:nogutter:nocontrol&quot;&gt;
svn checkout http://svn.osafoundation.org/chandler/trunk chandler
cd chandler
cd external
export BUILD_ROOT=$(pwd)
make world # wait ... wait ... wait
&lt;/pre&gt;
Now, if the build succeed you can run chandler with:
&lt;pre name=&quot;code&quot; class=&quot;shell:nogutter:nocontrol&quot;&gt;
cd ../chandler
./chandler
&lt;/pre&gt;
If the build fails you, probably, need to install some package that I missed. To discover which package you can use google. For example if you got this error:
&lt;pre name=&quot;code&quot; class=&quot;shell:nogutter:nocontrol&quot;&gt;
SWIG/_m2crypto.i:23: Error: Unable to find &#39;openssl/opensslv.h&#39;
&lt;/pre&gt;

You should search on google these words &lt;a href=&quot;http://www.google.it/search?q=openssl%2Fopensslv.h+Ubuntu+filelist&quot;&gt;&quot;openssl/opensslv.h Ubuntu filelist&quot;&lt;/a&gt;, the first results should be the page of missing package, in this case is

&lt;quote&gt;
&lt;span style=&quot;font-style: italic;&quot;&gt;  http://packages.ubuntu.com/feisty/amd64/&lt;/span&gt;&lt;span style=&quot;font-weight: bold; font-style: italic;&quot;&gt;libssl-dev&lt;/span&gt;&lt;span style=&quot;font-style: italic;&quot;&gt;/filelist&lt;/span&gt;
&lt;/quote&gt;

So it&#39;s simple add the needed package:
&lt;pre name=&quot;code&quot; class=&quot;shell:nogutter:nocontrol&quot;&gt;
apt-get install libssl-dev
&lt;/pre&gt;&lt;/div&gt;
</content>
  </entry>
  
  <entry>
    <title>Utility screen</title>
    <link href="http://andreafrancia.it"/>
    <updated>2009-01-19T00:00:00+01:00</updated>
    <id>http://andreafrancia.it/2009/01/utility-screen</id>
    <content type="html">&lt;h1&gt;Utility screen&lt;/h1&gt;
&lt;div class=&#39;post&#39;&gt;
&lt;pre&gt;
Come usare screen
=================
Questo articolo introduce l&#39;utilizzo dell&#39;utility screen. L&#39;articolo è scritto
per la mia fidanzata, ciò nonostante, l&#39;articolo potrebbe risultare utile 
anche ad altre persone.

La mia fidanzata deve utilizzare PuTTY per collegarsi ai computer del lavoro 
sui quali avvia programmi di calcolo scientifico. L&#39;esecuzione di questi 
programmi dura spesso parecchie ore. Il problema è che, durante l&#39;esecuzione di 
questi programmi, la connessione potrebbe cadere con il risultato di terminare 
prematuramente l&#39;esecuzione del programma. 

Dato che questa scocciatura capita spesso alla mia fidanzata e dato che le 
voglio bene le spiegherò come evitare questo problema.

Nel mondo unix e linux esistono due soluzioni a questo problema e si tratta 
delle utility `nohup` e `screen`. In questo articolo spiegherò come usare 
`screen`. 

Cos&#39;è screen
------------
`screen` è un utility che permette di creare terminali virtuali che rimangono
attivi anche dopo aver fatto il log out dal sistema o dopo che la connessione è
interrotta.

Esempio di utilizzo
-------------------
Dopo esserci collegati al server con PuTTY avviamo `screen`:

 $ screen

Apparirà una schermata che riporta qualche informazioni riguardanti il copyright
e la licenza di utilizzo. Usiamo RETURN per chiudere questa schermata.
 
A questo punto saremo entrati nel terminale virtuale di screen.
Adesso possiamo avviare il programma di calcolo la cui durata è molto lunga. 
Dato che io non ho tale programma ne simulerò l&#39;esecuzione usando il comando

 $ yes &gt; /dev/null

che ha durata indefinita.

Ora simuliamo l&#39;interruzione del collegamento chiudendo la finestra di PuTTY.
Ricolleghiamoci al server (sempre con PuTTY) e scriviamo:

 $ screen -r 

e magicamente recuperiamo la sessione precedente dove il comando `yes` (o il 
programma di calcolo) sta ancora girando.

Adesso supponiamo che il comando non abbia ancora terminato ma vogliamo comunque
tornare in possesso della shell. Per uscire da screen usiamo
la combinazione di tasti &quot;CTRL+A, D&quot;. Questo dovrebbe farci ritornare alla shell
iniziale.

    $ screen -r
    [detached]
    $

Lo screen è passato allo stato &quot;Detached&quot;, cioé è ancora attivo ma non è più 
associato a nessun terminale.

Per recuperare questo screen è sufficente scrivere:

 $ screen -r

Infine, per terminare uno screen è sufficiente terminare la shell caricata da 
esso, quindi (quasi per tutte le shell) si tratta di usare il comando exit.

 $ exit

Avviare molti screen
--------------------
E&#39; possibile tenere in esecuzione più di uno screen alla volta. Per avviare un 
secondo screen è sufficiente scrivere il comando screen, anche da un terminale 
screen.
Con il comando &quot;screen -ls&quot; invece è possibile elencare gli screen attualmente 
in esecuzione, ad esempio 

 $ screen -ls
 There are screens on:
        2893.pts-0.ubuntu       (01/18/2009 07:40:56 PM)        (Attached)
        2854.pts-3.ubuntu       (01/18/2009 07:37:57 PM)        (Attached)
        2727.pts-0.ubuntu       (01/18/2009 07:35:23 PM)        (Detached)
 3 Sockets in /var/run/screen/S-andrea.

L&#39;output nell&#39;esempio mostra che ci tre &quot;screen&quot; attivi. Due screen sono nello 
stato &quot;Attached&quot; (cioè attualmente visualizzato su un terminale), mentre un 
terzo si trova nello stato &quot;Detached&quot; (cioé in esecuzione in background, quindi
non visibile su nessun terminale).

Per ogni &quot;screen&quot; è inoltre indicato un numero identificativo. Il numero 
identificativo è utile per specificare su quale istanza si vuole eseguire un 
comando, per esempio è possibile scrivere:

 $ screen -r 2727
&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;Comments&lt;/h2&gt;
&lt;div class=&#39;comments&#39;&gt;
&lt;div class=&#39;comment&#39;&gt;
&lt;div class=&#39;author&#39;&gt;Andrea Francia&lt;/div&gt;
&lt;div class=&#39;content&#39;&gt;
@Anonimo: non capisco la tua domanda. Dove non c&amp;#39;era?&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#39;comment&#39;&gt;
&lt;div class=&#39;author&#39;&gt;Anonymous&lt;/div&gt;
&lt;div class=&#39;content&#39;&gt;
Ma non c&amp;#39;era la possibilita&amp;#39; di far girare i programmi remoti in batch ?&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#39;comment&#39;&gt;
&lt;div class=&#39;author&#39;&gt;Ritch&lt;/div&gt;
&lt;div class=&#39;content&#39;&gt;
Grazie, mi hai salvato la vita!&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
</content>
  </entry>
  
  <entry>
    <title>Creare un repository personale svn+ssh://</title>
    <link href="http://andreafrancia.it"/>
    <updated>2008-12-30T00:00:00+01:00</updated>
    <id>http://andreafrancia.it/2008/12/creare-un-repository-personale-svn-ssh</id>
    <content type="html">&lt;h1&gt;Creare un repository personale svn+ssh://&lt;/h1&gt;
&lt;div class=&#39;post&#39;&gt;
&lt;span style=&quot;font-size:180%;&quot;&gt;Ingredienti (requisiti):&lt;/span&gt;
&lt;ul&gt;&lt;li&gt;Un server unix (o unix-like) accessibile da internet
&lt;/li&gt;&lt;li&gt;Subversion installato sul server unix&lt;/li&gt;&lt;li&gt;Una macchina Windows che fa da client
&lt;/li&gt;&lt;li&gt;TortoiseSVN e PuTTY installati sulla macchina Windows&lt;/li&gt;&lt;li&gt;Una file .ppk con la propria chiave SSH
&lt;/li&gt;&lt;/ul&gt;&lt;span style=&quot;font-size:180%;&quot;&gt;Procedimento:&lt;/span&gt;

Accedere al server unix e creare il repository, con  i comandi:
&lt;code&gt;
mkdir ~/svn-repo
svnadmin create  ~/svn-repo
&lt;/code&gt;
Installare la propria chiave pubblica sul server unix:

&lt;code&gt;mkdir ~/.ssh
chmod 700 ~/.ssh
echo &quot;echo &amp;lt;my-rsa-key&amp;gt; &lt;/code&gt;&lt;code&gt;&amp;gt;&lt;/code&gt;&lt;code&gt;&amp;gt; &lt;/code&gt;&lt;code&gt;.ssh/authorized_keys&quot;&lt;/code&gt;

Per conoscere la propria chiave pubblica aprite il vostro file .ppk con PuTTYgen. Se non avete un file .ppk createlo (sempre con PuTTYgen).

Usate Pageant per caricare la chiave .ppk.

Verificate che quando vi collegate con PuTTY che l&#39;autenticazione avvenga senza dover immettere la password.

A questo punto provate a collegarvi al server con TortoiseSVN usando il seguente url of repository:
&lt;code&gt;
svn+ssh://username@server-unix.com/home/username/svn-repo/
&lt;/code&gt;
E&#39; importante che l&#39;url contenga anche la specifica dello username (la parte &quot;serenity@&quot;) altrimenti TortoiseSVN te lo chiederebbe e ciò sarebbe noioso.

Se non conoscete il path assoluto usate il comando &quot;pwd&quot; dalla shell del server unix.

&lt;span style=&quot;font-size:180%;&quot;&gt;Commenti:&lt;/span&gt;
&lt;ul&gt;&lt;li&gt;L&#39;utilizzo di Pageant e dell&#39;autenticazione basata su chiave pubblica è consigliato perché altrimenti  altrimenti dovresti  riscrivere più e più volte la password durante anche una singola operazione.&lt;/li&gt;&lt;li&gt;Il server svn+ssh:// è comodo perché è più facile da installare che il corrispondente servizio http:// ma ha una serie di svantaggi, questi sono descritti nel libro &lt;a href=&quot;http://svnbook.red-bean.com/en/1.5/svn.serverconfig.choosing.html#svn.serverconfig.choosing.svn-ssh&quot;&gt;svnbook&lt;/a&gt;.
&lt;/li&gt;&lt;/ul&gt;&lt;/div&gt;
</content>
  </entry>
  
  <entry>
    <title>Installare setuptools per python 2.6</title>
    <link href="http://andreafrancia.it"/>
    <updated>2008-12-11T00:00:00+01:00</updated>
    <id>http://andreafrancia.it/2008/12/installare-setuptools-per-python-2-6</id>
    <content type="html">&lt;h1&gt;Installare setuptools per python 2.6&lt;/h1&gt;
&lt;div class=&#39;post&#39;&gt;
&lt;div&gt;   &lt;div&gt;     &lt;div&gt;       Lo sapete che Python è produttivo, vero?

&lt;i style=&quot;color: rgb(0, 0, 0);&quot;&gt;E&#39; così produttivo che c&#39;e&#39; una libreria per fare gli enum. &lt;/i&gt;
Già inclusa nell&#39;installazione ? No, te la devi scaricare ...
&lt;i style=&quot;color: rgb(0, 0, 0);&quot;&gt;Come? Semplice! Python è produttivo, basta usare il comando easy_install! Basta fare &lt;/i&gt;
&lt;pre class=&quot;literal-block&quot;&gt;&lt;span&gt;    &lt;/span&gt;easy_install enum&lt;/pre&gt;       Ok! Bello! Ma non va. Come mai?
&lt;span style=&quot;color: rgb(0, 0, 0);&quot;&gt;Perché prima ti devi installare easy_install! Basta andare sulla pagina ufficiale di &lt;/span&gt;&lt;a style=&quot;color: rgb(0, 0, 0);&quot; href=&quot;http://pypi.python.org/pypi/setuptools#downloads&quot;&gt;setuptools&lt;/a&gt;&lt;span style=&quot;color: rgb(0, 0, 0);&quot;&gt; per farlo.&lt;/span&gt;
Pero&#39; ...
&lt;ul&gt;&lt;li&gt;io ho Windows         &lt;/li&gt;&lt;li&gt;           io l&#39;ultima versione (stabile) di Python la 2.6.1
        &lt;/li&gt;&lt;li&gt;           sulla pagina di Download di setuptools non c&#39;e&#39; l&#39;installer per la 2.6.1!         &lt;/li&gt;&lt;/ul&gt;      
Va bene allora cosa posso fare? Ci sono tante possibilità (certo python è produttivo), tutte elencate nella pagina , eccole:
      &lt;ul&gt;&lt;li&gt; Posso sempre installarlo con easy_install ... -_- ... certo posso installare il programma che non ho con il programma che non ho! &lt;/li&gt;&lt;li&gt;           Posso installarlo usando il mio comando sh, con
          &lt;pre class=&quot;literal-block&quot;&gt;sh setuptools-0.6c9-py2.6.egg&lt;/pre&gt;         &lt;/li&gt;&lt;/ul&gt;       &lt;div style=&quot;margin-left: 40px;&quot;&gt; peccato che funziona con tutto (cygwin, linux, unix, ...) ma non con Windows ... per forza non c&#39;e&#39; la bash in Windows (o per lo meno non ce ne sono molte).
      &lt;/div&gt;      
    &lt;/div&gt;   &lt;/div&gt;   La soluzione comunque c&#39;e&#39;, ma non si trova sulla graziosa pagina di setuptools, &lt;a href=&quot;http://mail.python.org/pipermail/distutils-sig/2008-November/010502.html&quot; id=&quot;x9gh&quot; title=&quot;ma si trova con google&quot;&gt;ma si trova con google&lt;/a&gt; ed è questa.
 
  &lt;ul&gt;&lt;li&gt;       Ti scarichi il file &lt;span style=&quot;white-space: nowrap;&quot;&gt;&lt;a href=&quot;http://pypi.python.org/packages/source/s/setuptools/setuptools-0.6c9.tar.gz#md5=3864c01d9c719c8924c455714492295e&quot;&gt;setuptools-0.6c9.tar.gz&lt;/a&gt; &lt;/span&gt;dalla pagina di &lt;a href=&quot;http://pypi.python.org/pypi/setuptools#downloads&quot; id=&quot;ez6d&quot; title=&quot;setuptools&quot;&gt;setuptools&lt;/a&gt;      &lt;/li&gt;&lt;li&gt;       Lo decomprimi (con 7-Zip per esempio)     &lt;/li&gt;&lt;li&gt;       E crei da solo la distribuzione per Windows     &lt;/li&gt;&lt;/ul&gt;   &lt;pre class=&quot;literal-block&quot; style=&quot;margin-left: 40px; font-family: Courier New;&quot;&gt;cd setuptools-0.6c9

python setup.py bdist_exe

&lt;/pre&gt;   &lt;ul&gt;&lt;li&gt;       Si dovresti ottenere un file setuptools-0.6c9.win32.zip, che contiene le cartelle
           &lt;/li&gt;&lt;ul&gt;&lt;li&gt;         Python26       &lt;/li&gt;&lt;ul&gt;&lt;li&gt;           Libs         &lt;/li&gt;&lt;li&gt;           Scripts         &lt;/li&gt;&lt;/ul&gt;&lt;/ul&gt;&lt;/ul&gt; &lt;/div&gt;
&lt;ul&gt;&lt;li&gt;     Le cartelle Libs e Script vanno messe sotto C:\Python26   &lt;/li&gt;&lt;li&gt;     La cartella C:\Python26\Scripts va aggiunta al PATH.   &lt;/li&gt;&lt;/ul&gt;
A questo punto dovreste essere in grado di usare easy_install...

&lt;div style=&quot;margin-left: 40px;&quot;&gt;&lt;span style=&quot;font-family: Courier New;&quot;&gt;C:\Documents and Settings\Andrea&gt;easy_install enum&lt;/span&gt;
&lt;span style=&quot;font-family: Courier New;&quot;&gt;Searching for enum&lt;/span&gt;
&lt;span style=&quot;font-family: Courier New;&quot;&gt;Reading http://pypi.python.org/simple/enum/&lt;/span&gt;
&lt;span style=&quot;font-family: Courier New;&quot;&gt;Best match: enum 0.4.3&lt;/span&gt;
&lt;span style=&quot;font-family: Courier New;&quot;&gt;...&lt;/span&gt;
&lt;/div&gt;
Finalmente posso usare gli enum ... in Java erano già dentro il linguaggio ... alla faccia della produttività.&lt;/div&gt;
</content>
  </entry>
  
  <entry>
    <title>Python è produttivo?</title>
    <link href="http://andreafrancia.it"/>
    <updated>2008-11-16T00:00:00+01:00</updated>
    <id>http://andreafrancia.it/2008/11/python-produttivo</id>
    <content type="html">&lt;h1&gt;Python è produttivo?&lt;/h1&gt;
&lt;div class=&#39;post&#39;&gt;
&lt;span style=&quot;font-size:180%;&quot;&gt;Introduzione&lt;/span&gt;
In giro per la rete si dice che &quot;Python è più produttivo di Java&quot;.
Uno degli articoli che ne parla è http://www.ferg.org/projects/python_java_side-by-side.html. La tesi di base dell&#39;articolo può essere riassunta con la seguente frase: &quot;Dato che i programmi in Python sono più corti dei programmi in Java allora si fa prima a scrivere un programma in Python&quot;.
&lt;br/&gt;
Questa affermazione non mi ha mai convinto più di tanto ma sembra che sia entrata nella cultura popolare dei programmatori, almeno della parte che usa Python.
&lt;br/&gt;
Io mi sto trovando male con Python, e non mi sento più produttivo, di seguito vi racconto una delle mie ultime esperienze con Python e che dovrebbe farvi capire quali sono le mie perplessità riguardo a questa teoria della maggiore produttività.
&lt;br/&gt;
Sono conscio del fatto che potrei non essere produttivo perché non lo conosco abbastanza bene, oppure perché conosco troppo bene il Java. Il problema è: quanto studio prima di diventare &quot;produttivi&quot; in Python?
&lt;br/&gt;
&lt;span style=&quot;font-size:180%;&quot;&gt;Personalizzare la classe OptionParser.
&lt;/span&gt;La classe optparse.OptionParser della libreria standard di python aiuta ad
implementare in maniera semplice un&#39;interfaccia a linea di comando.
&lt;br/&gt;
La documentazione su http://www.python.org/doc/2.5.2/lib/module-optparse.html
spiega come utilizzare la classe nel caso più semplice.
&lt;br/&gt;
&lt;pre name=&quot;code&quot; class=&quot;python:nogutter:nocontrols&quot;&gt;
from optparse import OptionParser

parser = OptionParser()
parser.add_option(&quot;-f&quot;, &quot;--file&quot;, dest=&quot;filename&quot;,
                  help=&quot;write report to FILE&quot;, metavar=&quot;FILE&quot;)
parser.add_option(&quot;-q&quot;, &quot;--quiet&quot;,
                  action=&quot;store_false&quot;, dest=&quot;verbose&quot;, default=True,
                  help=&quot;don&#39;t print status messages to stdout&quot;)

(options, args) = parser.parse_args()
&lt;/pre&gt;
&lt;br/&gt;
OptionParser è configurabile. Per esempio è possibile specificare un oggetto 
formatter diverso da quello di default per avere maggiore controllo sul 
formato del messaggio di help.
&lt;br/&gt;
La signature del costruttore di OptionFormatter è la seguente:
&lt;br/&gt;
&lt;pre name=&quot;code&quot; class=&quot;python:nogutter:nocontrols&quot;&gt;
class OptionParser (OptionContainer):
    def __init__(self,
                 usage=None,
                 option_list=None,
                 option_class=Option,
                 version=None,
                 conflict_handler=&quot;error&quot;,
                 description=None,
                 formatter=None,
                 add_help_option=True,
                 prog=None,
                 epilog=None):
&lt;/pre&gt;
&lt;br/&gt;
Per cui per utilizzare un oggetto formatter diverso da quello predefinito 
basterebbe fare:
&lt;br/&gt;
&lt;pre name=&quot;code&quot; class=&quot;python:nogutter:nocontrols&quot;&gt;
from optparse import OptionParser

parser = OptionParser(formatter=MyFormatter())
parser.add_option(&quot;-f&quot;, &quot;--file&quot;, dest=&quot;filename&quot;,
                  help=&quot;write report to FILE&quot;, metavar=&quot;FILE&quot;)
parser.add_option(&quot;-q&quot;, &quot;--quiet&quot;,
                  action=&quot;store_false&quot;, dest=&quot;verbose&quot;, default=True,
                  help=&quot;don&#39;t print status messages to stdout&quot;)

(options, args) = parser.parse_args()
&lt;/pre&gt;

Ma rimane il problema: come costruisco la classe MyFormatter? Quali metodi 
deve implementare? La documentazione del costruttore di OptionParser non ci 
aiuta: non c&#39;è! La signature del metodo non ci aiuta: in Python non è richiesto 
e non si usa specificare l&#39;interfaccia che un oggetto in input deve 
implementare. Come faccio a disegnare la mia implementazione di Formatter se non 
esiste una specifica dell&#39;interfaccia?
&lt;br/&gt;
Perché dicono che il python è più produttivo? Dicono che Python è più 
produttivo &quot;perché scrivi meno codice&quot;. E&#39; questo il codice che si risparmia 
di scrivere? Lo scrittore di OptionParser ha risparmiato due secondi ha 
scrivere il nome dell&#39;interfaccia nella signature del metodo, bene. Io quanto 
tempo devo perdere per capire quali sono i metodi che devo implementare per 
scrivere un Formatter? Per andarmi a rivedere il codice sorgente della classe 
OptionParser e le altre classi del modulo optparse?&lt;/div&gt;
&lt;h2&gt;Comments&lt;/h2&gt;
&lt;div class=&#39;comments&#39;&gt;
&lt;div class=&#39;comment&#39;&gt;
&lt;div class=&#39;author&#39;&gt;Anonymous&lt;/div&gt;
&lt;div class=&#39;content&#39;&gt;
guarda il seguente articolo...&lt;BR/&gt;http://code.activestate.com/recipes/425345/&lt;BR/&gt;&lt;BR/&gt;ciao Loris(aka) orcim&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
</content>
  </entry>
  
  <entry>
    <title>To change this template, choose Tools | Templates</title>
    <link href="http://andreafrancia.it"/>
    <updated>2008-10-16T00:00:00+02:00</updated>
    <id>http://andreafrancia.it/2008/10/to-change-this-template-choose-tools-templates</id>
    <content type="html">&lt;h1&gt;To change this template, choose Tools | Templates&lt;/h1&gt;
&lt;div class=&#39;post&#39;&gt;
Every time I create a new class in Netbeans it creates a file with this text an the top of the .java file:&lt;pre name=&quot;code&quot; class=&quot;java:nogutter&quot;&gt;
/*
* To change this template, choose Tools | Templates
* and open the template in the editor.
*/
&lt;/pre&gt;What is this? I dont want it? How to remove it? I try to follow the instructions.

I select from the menu Tools &gt; Template and the Template Manager appears.
&lt;a onblur=&quot;try {parent.deselectBloggerImageGracefully();} catch(e) {}&quot; href=&quot;http://1.bp.blogspot.com/_bikdOOm3kpc/SPeuiZaCruI/AAAAAAAABbs/xZVJnx2Qg6s/s1600-h/Template+Manager.jpg&quot;&gt;&lt;img style=&quot;cursor: pointer;&quot; src=&quot;http://1.bp.blogspot.com/_bikdOOm3kpc/SPeuiZaCruI/AAAAAAAABbs/xZVJnx2Qg6s/s400/Template+Manager.jpg&quot; alt=&quot;&quot; id=&quot;BLOGGER_PHOTO_ID_5257862995937242850&quot; border=&quot;0&quot; /&gt;&lt;/a&gt;

Now. Where I should go?
I asked this to myself for a lot of time...
Now I discovered the solution, I should choose

   License &gt; Default Licenses

then click Open in Editor. This will open the Default License file that you can easily customize:&lt;pre name=&quot;code&quot; class=&quot;text:nogutter&quot;&gt;
&lt;#if licenseFirst??&gt;
${licenseFirst}
&lt;!--#if--&gt;
${licensePrefix}To change this template, choose Tools | Templates
${licensePrefix}and open the template in the editor.
&lt;#if licenseLast??&gt;
${licenseLast}
&lt;!--#if--&gt;
&lt;/pre&gt;&lt;/div&gt;
</content>
  </entry>
  
  <entry>
    <title>Avviare Un Processo In Java</title>
    <link href="http://andreafrancia.it"/>
    <updated>2008-08-15T00:00:00+02:00</updated>
    <id>http://andreafrancia.it/2008/08/avviare-un-processo-in-java</id>
    <content type="html">&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot; &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;
&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot;&gt;
&lt;head&gt;
&lt;meta http-equiv=&quot;Content-Type&quot; content=&quot;text/html; charset=iso-8859-1&quot; /&gt;
&lt;title&gt;Untitled Document&lt;/title&gt;
&lt;script src=&quot;http://www.google-analytics.com/urchin.js&quot; type=&quot;text/javascript&quot;&gt;
&lt;/script&gt;
&lt;script type=&quot;text/javascript&quot;&gt;
_uacct = &quot;UA-4316218-1&quot;;
urchinTracker();
&lt;/script&gt;
&lt;/head&gt;
&lt;body&gt;
&lt;h1&gt;Avviare un processo da java&lt;/h1&gt;
&lt;h2&gt;Problema&lt;/h2&gt;
Avviare il programma /usr/bin/program.
&lt;h2&gt;Soluzione&lt;/h2&gt;
&lt;pre&gt;01  &lt;font color=&quot;#804040&quot;&gt;&lt;b&gt;try&lt;/b&gt;&lt;/font&gt; {
02      &lt;font color=&quot;#2e8b57&quot;&gt;&lt;b&gt;final&lt;/b&gt;&lt;/font&gt; Process process = Runtime.getRuntime().exec(&lt;font color=&quot;#ff00ff&quot;&gt;&amp;quot;/usr/bin/program&amp;quot;&lt;/font&gt;);
03      (&lt;font color=&quot;#804040&quot;&gt;&lt;b&gt;new&lt;/b&gt;&lt;/font&gt; Thread() {
04          &lt;font color=&quot;#2e8b57&quot;&gt;&lt;b&gt;public&lt;/b&gt;&lt;/font&gt; &lt;font color=&quot;#2e8b57&quot;&gt;&lt;b&gt;void&lt;/b&gt;&lt;/font&gt; run() {
05              &lt;font color=&quot;#804040&quot;&gt;&lt;b&gt;try&lt;/b&gt;&lt;/font&gt; {
06                  &lt;font color=&quot;#804040&quot;&gt;&lt;b&gt;while&lt;/b&gt;&lt;/font&gt;(process.getInputStream().read()!=-&lt;font color=&quot;#ff00ff&quot;&gt;1&lt;/font&gt;);
07              } &lt;font color=&quot;#804040&quot;&gt;&lt;b&gt;catch&lt;/b&gt;&lt;/font&gt; (IOException ex) {
08              }
09          }}).start();
10      (&lt;font color=&quot;#804040&quot;&gt;&lt;b&gt;new&lt;/b&gt;&lt;/font&gt; Thread() {
11          &lt;font color=&quot;#2e8b57&quot;&gt;&lt;b&gt;public&lt;/b&gt;&lt;/font&gt; &lt;font color=&quot;#2e8b57&quot;&gt;&lt;b&gt;void&lt;/b&gt;&lt;/font&gt; run() {
12              &lt;font color=&quot;#804040&quot;&gt;&lt;b&gt;try&lt;/b&gt;&lt;/font&gt; {
13                  &lt;font color=&quot;#804040&quot;&gt;&lt;b&gt;while&lt;/b&gt;&lt;/font&gt;(process.getErrorStream().read()!=-&lt;font color=&quot;#ff00ff&quot;&gt;1&lt;/font&gt;);
14              } &lt;font color=&quot;#804040&quot;&gt;&lt;b&gt;catch&lt;/b&gt;&lt;/font&gt; (IOException ex) {
15              }
16          }}).start();
17      &lt;font color=&quot;#804040&quot;&gt;&lt;b&gt;try&lt;/b&gt;&lt;/font&gt; {
18          process.waitFor();
19      } &lt;font color=&quot;#804040&quot;&gt;&lt;b&gt;catch&lt;/b&gt;&lt;/font&gt; (InterruptedException ex) {
20      }
21  } &lt;font color=&quot;#804040&quot;&gt;&lt;b&gt;catch&lt;/b&gt;&lt;/font&gt; (IOException ex) {
22      ex.printStackTrace();
23  }
&lt;/pre&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;

  &lt;!-- Histats.com  START  --&gt; 
 &lt;a href=&quot;http://www.histats.com/it/&quot; target=&quot;_blank&quot; title=&quot;contatore free&quot; &gt; 
 &lt;script  type=&quot;text/javascript&quot; language=&quot;javascript&quot;&gt; 
  
 var s_sid = 321314;var st_dominio = 4; 
 var cimg = 0;var cwi =150;var che =30; 
 &lt;/script&gt; 
 &lt;script  type=&quot;text/javascript&quot; language=&quot;javascript&quot; src=&quot;http://s11.histats.com/js9.js&quot;&gt;&lt;/script&gt; 
 &lt;/a&gt; 
 &lt;noscript&gt;&lt;a href=&quot;http://www.histats.com/it/&quot; target=&quot;_blank&quot;&gt; 
 &lt;img  src=&quot;http://s103.histats.com/stats/0.gif?321314&amp;1&quot; alt=&quot;contatore free&quot; border=&quot;0&quot;&gt;&lt;/a&gt; 
 &lt;/noscript&gt; 

&lt;/body&gt;
&lt;/html&gt;
</content>
  </entry>
  
  <entry>
    <title>Print the stack trace in bash</title>
    <link href="http://andreafrancia.it"/>
    <updated>2008-07-30T00:00:00+02:00</updated>
    <id>http://andreafrancia.it/2008/07/print-the-stack-trace-in-bash</id>
    <content type="html">&lt;h1&gt;Print the stack trace in bash&lt;/h1&gt;
&lt;p&gt;Ieri ho partorito una semplice funzione che trovo molto comoda per debuggare gli scritp shell, si chiama print_stack_trace.&lt;/p&gt;

&lt;p&gt;print_stack_trace andrebbe invocata quando si incontra una condizione di errore e si vuole risalire a qual&amp;#8217;e&amp;#8217; stato il flusso delle chiamate che l&amp;#8217;ha provocata.&lt;/p&gt;

&lt;p&gt;Un esempio di utilizzo è il seguente::&lt;/p&gt;
&lt;div class=&#39;code&#39;&gt;

&lt;div class=&#39;highlight&#39;&gt;&lt;pre&gt;&lt;code class=&#39;bash&#39;&gt;save_to_file&lt;span class=&#39;o&#39;&gt;()&lt;/span&gt; &lt;span class=&#39;o&#39;&gt;{&lt;/span&gt;
    &lt;span class=&#39;nb&#39;&gt;local &lt;/span&gt;&lt;span class=&#39;nv&#39;&gt;filename&lt;/span&gt;&lt;span class=&#39;o&#39;&gt;=&lt;/span&gt;&lt;span class=&#39;s2&#39;&gt;&amp;quot;$1&amp;quot;&lt;/span&gt;

    &lt;span class=&#39;k&#39;&gt;if&lt;/span&gt; &lt;span class=&#39;o&#39;&gt;[[&lt;/span&gt; -e &lt;span class=&#39;nv&#39;&gt;$filename&lt;/span&gt; &lt;span class=&#39;o&#39;&gt;]]&lt;/span&gt;; &lt;span class=&#39;k&#39;&gt;then&lt;/span&gt;
&lt;span class=&#39;k&#39;&gt;        &lt;/span&gt;&lt;span class=&#39;nb&#39;&gt;echo&lt;/span&gt; &lt;span class=&#39;s2&#39;&gt;&amp;quot;File already exists: $filename&amp;quot;&lt;/span&gt; &amp;gt;2
        print_stack_trace
        &lt;span class=&#39;nb&#39;&gt;exit &lt;/span&gt;1
    &lt;span class=&#39;k&#39;&gt;fi&lt;/span&gt;

    ... &lt;span class=&#39;c&#39;&gt;# scrittura su file&lt;/span&gt;
&lt;span class=&#39;o&#39;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;/div&gt;
&lt;p&gt;Quando per qualsiasi motivo la funzione save_to_file() è invocata con un argomento non valido stampa un messaggio di errore seguito dall&amp;#8217;elenco delle chiamate a funzione che hanno portato all&amp;#8217;errore. Per esempio:&lt;/p&gt;
&lt;pre class=&#39;terminal&#39;&gt;
File already exists: test-file
Stack trace:
 save_to_file(./print-stack-trace.bash:13)
 function_three(./print-stack-trace.bash:22)
 function_two(./print-stack-trace.bash:26)
 function_one(./print-stack-trace.bash:30)
 main(./print-stack-trace.bash:33)
&lt;/pre&gt;
&lt;p&gt;La funzione print_stack_trace è la seguente:&lt;/p&gt;
&lt;div class=&#39;code&#39;&gt;

&lt;div class=&#39;highlight&#39;&gt;&lt;pre&gt;&lt;code class=&#39;bash&#39;&gt;&lt;span class=&#39;c&#39;&gt;# print_stack_trace: print the stack trace in bash&lt;/span&gt;
print_stack_trace&lt;span class=&#39;o&#39;&gt;()&lt;/span&gt; &lt;span class=&#39;o&#39;&gt;{&lt;/span&gt;
    &lt;span class=&#39;nb&#39;&gt;echo&lt;/span&gt; &lt;span class=&#39;s2&#39;&gt;&amp;quot;Stack trace:&amp;quot;&lt;/span&gt;
    &lt;span class=&#39;k&#39;&gt;for&lt;/span&gt; &lt;span class=&#39;o&#39;&gt;((&lt;/span&gt; &lt;span class=&#39;nv&#39;&gt;i&lt;/span&gt;&lt;span class=&#39;o&#39;&gt;=&lt;/span&gt;1; i&amp;lt;&lt;span class=&#39;k&#39;&gt;${#&lt;/span&gt;&lt;span class=&#39;nv&#39;&gt;FUNCNAME&lt;/span&gt;&lt;span class=&#39;p&#39;&gt;[@]&lt;/span&gt;&lt;span class=&#39;k&#39;&gt;}&lt;/span&gt;; i++&lt;span class=&#39;o&#39;&gt;))&lt;/span&gt;; &lt;span class=&#39;k&#39;&gt;do&lt;/span&gt;
&lt;span class=&#39;k&#39;&gt;        &lt;/span&gt;&lt;span class=&#39;nb&#39;&gt;echo&lt;/span&gt; &lt;span class=&#39;s2&#39;&gt;&amp;quot; ${FUNCNAME[$i]}(${BASH_SOURCE[$i]}:${BASH_LINENO[$i-1]})&amp;quot;&lt;/span&gt;
    &lt;span class=&#39;k&#39;&gt;done&lt;/span&gt;
&lt;span class=&#39;o&#39;&gt;}&lt;/span&gt; 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;/div&gt;</content>
  </entry>
  
  <entry>
    <title>coLinux - Linux dentro Windows</title>
    <link href="http://andreafrancia.it"/>
    <updated>2008-07-24T00:00:00+02:00</updated>
    <id>http://andreafrancia.it/2008/07/colinux-linux-dentro-windows</id>
    <content type="html">&lt;h1&gt;coLinux - Linux dentro Windows&lt;/h1&gt;
&lt;div class=&#39;post&#39;&gt;
In questi giorni ho reinstallato coLinux.
Sapete cos&#39;è?
E la manna dal cielo per quelli che come me hanno deciso di tenere tutto su Windows ma hanno ancora bisogno di usare Linux. E&#39; un software che consente di avviare il kernel di Linux all&#39;interno di Windows.

Una volta avviato coLinux è possibile accedervi sia attraverso la console (virtuale) oppure via rete (attraverso una scheda di rete virtuale).

Io lo uso per continuare a sviluppare il mio programma per linux senza dover riavviare il computer. Quando ne ho bisogno mi ci collego in ssh attraverso putty e faccio quello che devo fare.

Sul mio sito su google sites ho creato una &lt;a href=&quot;http://sites.google.com/site/andreafrancia/articles/colinux&quot;&gt;pagina&lt;/a&gt; che riporta un po&#39; di appunti riguardo coLinux.&lt;/div&gt;
&lt;h2&gt;Comments&lt;/h2&gt;
&lt;div class=&#39;comments&#39;&gt;
&lt;div class=&#39;comment&#39;&gt;
&lt;div class=&#39;author&#39;&gt;Andrea Francia&lt;/div&gt;
&lt;div class=&#39;content&#39;&gt;
@Evilripper:&lt;BR/&gt;coLinux e molto piu&#39; performante di una macchina virtuale. La linuxvm gira sullo stesso processore (quello reale) su cui girano i programmi del sistema operativo ospitante, non gira su una CPU virtuale.&lt;BR/&gt;&lt;BR/&gt;Inoltre cose come il CoFS non sarebbero possibile usando un sistema operativo su una virtual machine.&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#39;comment&#39;&gt;
&lt;div class=&#39;author&#39;&gt;Evilripper&lt;/div&gt;
&lt;div class=&#39;content&#39;&gt;
ma usare una virtual machine no? :-D&lt;BR/&gt;&lt;BR/&gt;Ciao&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
</content>
  </entry>
  
  <entry>
    <title>trash-cli incluso in Ubuntu e in Debian</title>
    <link href="http://andreafrancia.it"/>
    <updated>2008-07-17T00:00:00+02:00</updated>
    <id>http://andreafrancia.it/2008/07/trash-cli-incluso-in-ubuntu-e-in-debian</id>
    <content type="html">&lt;h1&gt;trash-cli incluso in Ubuntu e in Debian&lt;/h1&gt;
&lt;div class=&#39;post&#39;&gt;
Cercando su internet ho scoperto con mia grande sorpresa che il mio software è stato aggiunto sia a Ubuntu che a Debian:
&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;http://packages.ubuntu.com/trash-cli&quot;&gt;http://packages.ubuntu.com/trash-cli&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;http://packages.debian.com/trash-cli&quot;&gt;http://packages.debian.com/trash-cli&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;Credo che per installarlo basti fare:
    apt-get install trash-cli

Però dovrebbe funzionare solo sulle versioni intrepid di Ubuntu e unstable di Debian.

Provate e fatemi sapere.&lt;/div&gt;
&lt;h2&gt;Comments&lt;/h2&gt;
&lt;div class=&#39;comments&#39;&gt;
&lt;div class=&#39;comment&#39;&gt;
&lt;div class=&#39;author&#39;&gt;Andrea Francia&lt;/div&gt;
&lt;div class=&#39;content&#39;&gt;
Grazie del tuo interessamento.&lt;br /&gt;E&#39; molto bello venirne a conoscenza.&lt;br /&gt;&lt;br /&gt;Se mi dessi il permesso di aggiungere le tue modifiche con licenza GPL nel source tree principale sarebbe molto bello. Verrai citato nei credits.&lt;br /&gt;&lt;br /&gt;Se ti va puoi creare un ticket di tipo enanchement con scritto: &quot;Add Solaris support&quot; e allegando per esempio il file .patch.&lt;br /&gt;&lt;br /&gt;Eventualmente se fossi interessato potresti diventare il mantainer del pacchetto per Solaris.&lt;br /&gt;&lt;br /&gt;Il mio indirizzo è andrea punto francia chioccio-la gmail dot com.&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#39;comment&#39;&gt;
&lt;div class=&#39;author&#39;&gt;Anonymous&lt;/div&gt;
&lt;div class=&#39;content&#39;&gt;
Ciao, ho scaricato il tuo programmino (0.11.1.2) da Google Code: ho fatto qualche piccola modifica per renderlo funzionante anche su Solaris e nel contempo corretto qualche cosettina.&lt;br /&gt;- tutti i files: modificato lo sh-bang usando il comando env&lt;br /&gt;- trash.py: su linea 467, aggiunta la condizione &quot;if not self.path.parent.exists() :&quot;&lt;br /&gt;- filesystem.py: aggiunto il codice per usare getmntent su sunos&lt;br /&gt;- restore.py: modificato su linea 89 path in path.absolute() nel messaggio di errore&lt;br /&gt;&lt;br /&gt;Se mi dici come contattarti posso mandarti la mia revisione.&lt;br /&gt;RoL&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
</content>
  </entry>
  
  <entry>
    <title>Differenze tra AWT, Swing e SWT</title>
    <link href="http://andreafrancia.it"/>
    <updated>2008-07-11T00:00:00+02:00</updated>
    <id>http://andreafrancia.it/2008/07/differenze-tra-awt-swing-e-swt</id>
    <content type="html">&lt;h1&gt;Differenze tra AWT, Swing e SWT&lt;/h1&gt;
&lt;div class=&#39;post&#39;&gt;
Per Java sono disponibili tre diversi gui toolkit: awt, Swing,swt.

Perché esistono tre diverse soluzioni per lo stesso problema? Perché non esiste (ancora) una soluzione che va bene in tutti casi. Quest&#39;&lt;a href=&quot;http://www.ibm.com/developerworks/grid/library/os-swingswt/&quot;&gt;articolo&lt;/a&gt; che è stato recentemente segnalato su &lt;a href=&quot;news://it.comp.java&quot;&gt;it.comp.java &lt;/a&gt;spiega i pregi, i difetti, e le particolarità di ognuna di queste tecnologie.&lt;/div&gt;
</content>
  </entry>
  
  <entry>
    <title>L'ideona del loggingDecorator</title>
    <link href="http://andreafrancia.it"/>
    <updated>2008-07-01T00:00:00+02:00</updated>
    <id>http://andreafrancia.it/2008/07/l-ideona-del-loggingdecorator</id>
    <content type="html">&lt;h1&gt;L&#39;ideona del loggingDecorator&lt;/h1&gt;
&lt;div class=&#39;post&#39;&gt;
Oggi ho partorito l&#39;ideona del loggingDecorator.
Anche se sono sicuro che è già venuta a mille altre persone ve la dico lo stesso.

Fate finta che vi serve aggiungere ad ogni metodo dei messaggi di debug del tipo &quot;sono entrato nel metodo&quot;, &quot;sto uscendo dal metodo&quot; o simili.

Uno con poca fantasia farebbe così:
&lt;pre name=&quot;code&quot; class=&quot;java:nogutter&quot;&gt;public void someMethod() {
  logger.debug(&quot;Begin of someMethod()&quot;);

  ... // corpo del metodo

  logger.debug(&quot;End of someMethod()&quot;);
}
&lt;/pre&gt;Io pero&#39; dovevo debbuggare le chiamate a una classe che aveva molti metodi e non volevo usare il copia incolla. Ho preferito scomodare il design pattern decorator e la Java Reflection.

Ho usato:
&lt;pre name=&quot;code&quot; class=&quot;java:nogutter&quot;&gt;    EntityManager em = ...
  em  = LoggingDecorators.loggingDecorator(em, EntityManager.class)
&lt;/pre&gt;Avendo definito
&lt;pre name=&quot;code&quot; class=&quot;java:nogutter&quot;&gt;public class LoggingDecorators {
  private static final Logger logger =
          Logger.getLogger(LoggingDecorators.class.getName());

  public static &amp;lt;T&amp;gt; T loggingDecorator(
              final T target,
              final Class&amp;lt;T&amp;gt; targetClass) {
      return (T) Proxy.newProxyInstance(targetClass.getClassLoader(),
              new Class[] { targetClass}, new InvocationHandler() {

          public Object invoke(Object proxy, Method method, Object[] args) throws Throwable {
              logger.info(&quot;Begin of &quot; + method);
              try {
                  return method.invoke(target, args);
              } catch(InvocationTargetException ex) {
                  throw ex.getCause();
              } finally {
                  logger.info(&quot;End of &quot; + method);
              }
          }
      });
  }
}
&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;Comments&lt;/h2&gt;
&lt;div class=&#39;comments&#39;&gt;
&lt;div class=&#39;comment&#39;&gt;
&lt;div class=&#39;author&#39;&gt;Andrea Francia&lt;/div&gt;
&lt;div class=&#39;content&#39;&gt;
Hai ragione, c&#39;era un baco nel codice del mio post, adesso l&#39;ho corretto.&lt;BR/&gt;&lt;BR/&gt;Il secondo parametro è l&#39;interfaccia che deve implementare il decorator.&lt;BR/&gt;&lt;BR/&gt;Comunque trovi un esempio &lt;A HREF=&quot;http://code.google.com/p/andreafrancia-util/source/browse/trunk/src/andreafrancia/util/LoggingDecorators.java#48&quot; REL=&quot;nofollow&quot;&gt;qui&lt;/A&gt;, alla riga 48.&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#39;comment&#39;&gt;
&lt;div class=&#39;author&#39;&gt;Anonymous&lt;/div&gt;
&lt;div class=&#39;content&#39;&gt;
Ciao, direi che io stavo cercando qualcosa di simile, ma non ho ben capito come funziona il tuo esempio, ecco alcune delle cose che non ho capito: tu chiami il metodo in questo modo &quot;loggingDecorator(em)&quot; ma quel metodo ha una segnatura diversa; poi come fai a chiamare il metodo originale?&lt;BR/&gt;&lt;BR/&gt;Federico&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
</content>
  </entry>
  
  <entry>
    <title>Su Linux.com esce un articolo riguardo a trash-cli</title>
    <link href="http://andreafrancia.it"/>
    <updated>2008-06-21T00:00:00+02:00</updated>
    <id>http://andreafrancia.it/2008/06/su-linux-com-esce-un-articolo-riguardo-a-trash-cli</id>
    <content type="html">&lt;h1&gt;Su Linux.com esce un articolo riguardo a trash-cli&lt;/h1&gt;
&lt;div class=&#39;post&#39;&gt;
Ho scoperto che su linux.com è uscito un &lt;a href=&quot;http://www.linux.com/feature/138331&quot;&gt;articolo&lt;/a&gt; che parla del mio progetto opensource.
Non vi dico quanto mi faccia piacere questa cosa.
Adesso ho capito perché il 17 giugno 2008 il mio sito ha ricevuto così tante visite.&lt;/div&gt;
</content>
  </entry>
  
  <entry>
    <title>Relazioni molti a molti con JPA</title>
    <link href="http://andreafrancia.it"/>
    <updated>2008-06-20T00:00:00+02:00</updated>
    <id>http://andreafrancia.it/2008/06/relazioni-molti-a-molti-con-jpa</id>
    <content type="html">&lt;h1&gt;Relazioni molti a molti con JPA&lt;/h1&gt;
&lt;div class=&#39;post&#39;&gt;
Oggi ho imparato a fare le relazioni molti a molti con JPA.

E&#39; abbastanza semplice. Ve lo spiego con un esempio.
Abbiamo due entità
&lt;ol&gt;&lt;li&gt;Book
&lt;/li&gt;&lt;li&gt;Author&lt;/li&gt;&lt;/ol&gt;Un libro puo&#39; essere stato scritto da uno o piu&#39; autori.
Un autore può aver scritto uno o piu&#39; libri.

Per rendere la relazione basta usare @ManyToMany, nel nostro caso:

Book.java:
&lt;pre name=&quot;code&quot; class=&quot;java:nogutter&quot;&gt;
public class Book implements Serializable {
private Long id;
private List&amp;lt;Author&amp;gt; authors = new ArrayList&amp;lt;Author&amp;gt;();
protected String title;

@Id
@GeneratedValue(strategy = GenerationType.IDENTITY)
@Column(name=&quot;id&quot;)
public Long getId() {
    return id;
}

@ManyToMany(cascade=CascadeType.PERSIST)
public List&amp;lt;Author&amp;gt; getAuthors() {
    return authors;
}

public String getTitle() {
    return title;
}

public void setTitle(String title) {
    this.title = title;
}

public void setId(Long id) {
    this.id = id;
}

public void setAuthors(List&amp;lt;Author&amp;gt; authors) {
    this.authors = authors;
}

}
&lt;/pre&gt;
Author.java
&lt;pre name=&quot;code&quot; class=&quot;java:nogutter&quot;&gt;
@Entity
@Table(name=&quot;Autores&quot;)
public class Author implements Serializable {
private Long id;
protected String name;
private List&amp;lt;Book&amp;gt; books;

@Id
@GeneratedValue(strategy = GenerationType.IDENTITY)
@Column(name=&quot;id&quot;)
public Long getId() {
    return id;
}

@ManyToMany(mappedBy = &quot;authors&quot;)
public List&amp;lt;Book&amp;gt; getBooks() {
    return books;
}

public String getName() {
    return name;
}

public void setId(Long id) {
    this.id = id;
}

public void setName(String name) {
    this.name = name;
}

public void setBooks(List&amp;lt;Book&amp;gt; books) {
    this.books = books;
}

}
&lt;/pre&gt;

Esempio di utilizzo:
&lt;pre name=&quot;code&quot; class=&quot;java:nogutter&quot;&gt;
EntityManager em = ...

Author author1 = new Author();
Author author2 = new Author();
Author author3 = new Author();

author1.setName(&quot;Pippo&quot;);
author1.setName(&quot;Pluto&quot;);
author1.setName(&quot;Paperino&quot;);

Book book1 = new Book();
book1.setTitle(&quot;Vivere a topolinia&quot;);
book1.getAuthors().add(author1);
book1.getAuthors().add(author2);
book1.getAuthors().add(author3);

Book book2 = new Book();
book2.setTitle(&quot;Vivere a Paperopoli&quot;);
book2.getAuthors().add(author3);

em.persist(book1);
em.persist(book2);
&lt;/pre&gt;&lt;span style=&quot;font-size:180%;&quot;&gt;Nota sul mapping&lt;/span&gt;
Le relazioni molti a molti non possono essere espresse direttamente sui database relazionali, è infatti necessario introdurre una tabella che faccia da ponte. Nei casi semplici è possibile ignorare questi dettagli perché sono gestiti dal provider JPA.

Però nel caso la struttura del database sia già definita e necessario istruire JPA in modo che utilizzi la tabella ponte giusta. Questo si fa usando l&#39;annotazione @JoinTable.

Per esempio nel caso la tabella ponte sia definita come:
&lt;pre name=&quot;code&quot; class=&quot;sql:nogutter&quot;&gt;CREATE TABLE &quot;LIBROS_AUTORES&quot; (
  &quot;libros_id&quot; BIGINT NOT NULL,
  &quot;autores_id&quot; BIGINT NOT NULL);
&lt;/pre&gt;Useremo annoteremo getAuthors nel seguente modo:
&lt;pre name=&quot;code&quot; class=&quot;java:nogutter&quot;&gt; @JoinTable(
    name=&quot;LIBROS_AUTORES&quot;,
    joinColumns=@JoinColumn(name=&quot;libros_id&quot;, referencedColumnName=&quot;id&quot;),
    inverseJoinColumns=@JoinColumn(name=&quot;autores_id&quot;,referencedColumnName=&quot;id&quot;)
)
public List&amp;lt;Author&amp;gt; getAuthors() {
    return authors;
}
&lt;/pre&gt;&lt;/div&gt;
</content>
  </entry>
  
  <entry>
    <title>Dov'è il preprocessore di Java?</title>
    <link href="http://andreafrancia.it"/>
    <updated>2008-06-11T00:00:00+02:00</updated>
    <id>http://andreafrancia.it/2008/06/dov-il-preprocessore-di-java</id>
    <content type="html">&lt;h1&gt;Dov&#39;è il preprocessore di Java?&lt;/h1&gt;
&lt;div class=&#39;post&#39;&gt;
&lt;p&gt;
In C e C++ c&#39;e&#39; il preprocessore, e in Java?
In Java non c&#39;è.
Solitamente il preprocessore in C o C++ si usa per fare una delle seguenti cose:
&lt;ol&gt;&lt;li&gt;definire costanti (vedi nota sotto)&lt;/li&gt;&lt;li&gt;mettere funzioni inline  (vedi nota sotto)
&lt;/li&gt;&lt;li&gt;gestire l&#39;inclusione multipla degli header &lt;/li&gt;&lt;li&gt;includere selettivamente una parte machine dependent &lt;/li&gt;&lt;li&gt;attivare o disattivare il debug
&lt;/li&gt;&lt;/ol&gt;In Java queste necessità sono generalmente risolte in maniera diversa oppure non sono risolte perché non sono così sentite.&lt;/p&gt;

&lt;p&gt;Vediamole una per una.&lt;/p&gt;

&lt;h2&gt;1) Definire costanti&lt;/h2&gt;
Le costanti si definiscono con la parola chiave final, esempio:
&lt;pre name=&quot;code&quot; class=&quot;java:nogutter:nocontrols&quot;&gt;
public static final double PI = 3,14;
&lt;/pre&gt;&lt;span style=&quot;font-size:180%;&quot;&gt;2) Mettere funzioni inline&lt;/span&gt;
Le funzioni inline non si possono mettere in Java. In Java di solito queste ottimizzazioni di basso livello sono lasciate al compilatore e al compilatore JIT. L&#39;unica cosa che si può fare è dichiarare una funzione final.
&lt;pre name=&quot;code&quot; class=&quot;java:nogutter:nocontrols&quot;&gt;public static final int sum(int a, int b) {
return a+b;
}
&lt;/pre&gt;Se il compilatore vuole potrebbe decidere di mettere questa funzione inline, ma non è garantito.

&lt;br/&gt;
&lt;span style=&quot;font-size:180%;&quot;&gt;3) Gestire l&#39;inclusione multipla degli header&lt;/span&gt;
Questo problema in Java non esiste in quanto non ci sono header files.

&lt;br/&gt;
&lt;span style=&quot;font-size:180%;&quot;&gt;4) Includere selettivamente una parte machine dependent&lt;/span&gt;
Il codice machine dependent in Java solitamente viene affrontato nel seguente modo.
Si crea una classe astratta neutrale che va bene per tutti i sistemi operativi ma che di fatto evita di implementare i metodi specifici dalla piattoforma.
In seguito si crea per ogni piattaforma supportata una classe concreta che estende la classe astratta.

&lt;br/&gt;
A volte al posto di usare una classe astratta come ancestor comune si utilizza un interfaccia, ma la filosofia è sempre la stessa.

&lt;br/&gt;
Alcuni esempi di utilizzo di questo pattern sono le classi &lt;a href=&quot;http://java.sun.com/javase/6/docs/api/java/lang/Process.html&quot;&gt;java.lang.Process&lt;/a&gt; e &lt;a href=&quot;http://java.sun.com/javase/6/docs/api/java/io/File.html&quot;&gt;java.io.File&lt;/a&gt; della libreria standard.

&lt;br/&gt;
&lt;h2&gt;5) Attivare o disattivare il debug.&lt;/h2&gt;
L&#39;abilitazione/disabilitazione del debug dipende dal framework di logging che si utilizza.
I più famosi sono due:
&lt;ul&gt;&lt;li&gt;Java Logging framework&lt;/li&gt;&lt;li&gt;Log4J
&lt;/li&gt;&lt;/ul&gt;Entrambi permettono di attivare/disattivare il logging del debug sia attraverso i file di configurazione oppure per via programmatica.

&lt;br/&gt;
&lt;h2&gt;Quello che non si può fare in Java&lt;/h2&gt;
Come si è visto i problemi affrontati con il preprocessore in C/C++ sono in Java sono risolti in altra maniera.
Questo non vuol dire che le soluzioni sono equivalenti.
Ad esempio in Java non è possibile escludere una parte del codice dalla compilazione.
Non è neanche possibile definire macro.

&lt;br/&gt;
In genere la mancanza di queste caratteristiche non si sente.
Se si sente questo potrebbe indicare che Java potrebbe non essere il linguaggio giusto per il problema in esame.

&lt;br/&gt;
Se uno non può proprio fare a meno del preprocessore in rete ci sono progetti che estendono il linguaggio aggiungendo funzionalità simili.
L&#39;adozione di questi strumenti dovrebbe essere fatta responsabilmente perché può portare a dover mantenere codice scritto in un linguaggio Java modificato che quindi diventa meno accessibile perché meno conosciuto.

&lt;br/&gt;
&lt;h2&gt;Nota: costanti e funzioni inline&lt;/h2&gt;
Anche se in molti progetti scritti in C o C++ capita che il preprocessore sia usato per definire costanti o funzioni inline questo non vuol dire che sia una buona pratica. In questi casi la cosa migliore e fare uso delle parole chiave &lt;span style=&quot;font-weight: bold;&quot;&gt;const&lt;/span&gt; e &lt;span style=&quot;font-weight: bold;&quot;&gt;inline&lt;/span&gt;&lt;span&gt; entrambe disponibili sia in C che in C++.
&lt;/span&gt;&lt;/div&gt;
</content>
  </entry>
  
  <entry>
    <title>Macross Frontier</title>
    <link href="http://andreafrancia.it"/>
    <updated>2008-06-03T00:00:00+02:00</updated>
    <id>http://andreafrancia.it/2008/06/macross-frontier</id>
    <content type="html">&lt;h1&gt;Macross Frontier&lt;/h1&gt;
&lt;div class=&#39;post&#39;&gt;
Vi ricordate Macross? Sicuramente no. In Italia è uscita la serie ultra rieditata dagli americani chiamata Robotech, era in onda su Rete 4 anni fa e, nonostante fosse un cartone di culto, è stato trasmesso per poco tempo.

Comunque vi spiego tutto io. Nel lontano &lt;a href=&quot;http://it.wikipedia.org/wiki/1982&quot;&gt;millenovecentoambaradam&lt;/a&gt; in giappone creano una serie tv chiamata &lt;small&gt;&lt;i&gt;Chō Jikū Yōsai Makurosu&lt;/i&gt;&lt;/small&gt;. Qualche tempo dopo (nel &lt;a href=&quot;http://it.wikipedia.org/wiki/1985&quot;&gt;millenovecentoambaradampiùenne&lt;/a&gt;) in America la &lt;a href=&quot;http://en.wikipedia.org/wiki/Harmony_Gold_USA&quot; title=&quot;Harmony Gold USA&quot;&gt;Harmony Gold&lt;/a&gt; dice: &quot;Che figata! La voglio anch&#39;io.&quot;, però invece di fare semplicemente il doppiaggio decide di rieditare tutta la serie.

Gli &lt;a href=&quot;http://upload.wikimedia.org/wikipedia/commons/f/f1/Monkey-typing.jpg&quot;&gt;sceneggiatori&lt;/a&gt; dell&#39;Harmony Gold, che pare avessero appena scoperto il copia e incolla, decidono di tagliare alcune scene, spostarne altre e di riscrivere totalmente i dialoghi. Risultato&lt;a href=&quot;http://it.wikipedia.org/wiki/Robotech&quot; title=&quot;Robotech&quot;&gt;: Robotech&lt;/a&gt;, un prodotto che mantiene gli stessi robottoni della serie orginale ma dove gli aspetti più trascinanti della storia sono snaturati.

La serie sbarca in Italia assieme a Beautiful, il Tenente Colombo e tutte le altre serie che importiamo dagli stati uniti.

Così a noi ci è giunta la serie scrausa americana. Dopo un po&#39; i fan rompono gli zebedei e ci è arrivata pure la serie doppiata dall&#39;originale giapponese.

A questo punto in giappone han visto che la serie tirava e han pensato bene di farne dei seguiti per capitalizzare sul nome conquistato dal prodotto. Fioriscono i seguenti titoli:
&lt;ul&gt;&lt;li&gt;The Super Dimension Fortress Macross: Do You Remember Love?&lt;/li&gt;&lt;li&gt;The Super Dimension Fortress Macross: Flash Back 2012&lt;/li&gt;&lt;li&gt;The Super Dimension Fortress Macross II: Lovers, Again&lt;/li&gt;&lt;li&gt;Macross Plus&lt;/li&gt;&lt;li&gt;Macross 7&lt;/li&gt;&lt;li&gt;...&lt;/li&gt;&lt;li&gt;e altri ennemila altri titoli che neanche &lt;a href=&quot;http://en.wikipedia.org/wiki/Studio_Nue&quot; title=&quot;Studio Nue&quot;&gt;quelli che li hanno prodotti&lt;/a&gt; si ricordano bene quali sono.&lt;/li&gt;&lt;/ul&gt;L&#39;ultimo titolo è &lt;a href=&quot;http://en.wikipedia.org/wiki/Macross_Frontier&quot;&gt;Macross Frontier&lt;/a&gt; è quello che sto guardando adesso, ho visto solo fino alla quarta puntata.
Fine della storia.&lt;/div&gt;
</content>
  </entry>
  
  <entry>
    <title>Schermare le RemoteException</title>
    <link href="http://andreafrancia.it"/>
    <updated>2008-05-31T00:00:00+02:00</updated>
    <id>http://andreafrancia.it/2008/05/schermare-le-remoteexception</id>
    <content type="html">&lt;h1&gt;Schermare le RemoteException&lt;/h1&gt;
&lt;div class=&#39;post&#39;&gt;
Consideriamo un&#39;applicazione architettura client server basata su RMI.
Il client deve accedere dialoga con il server usando l&#39;interfaccia remota di quest&#39;ultimo. Per fissare le idee supponiamo che il server abbia la seguente interfaccia:
&lt;pre name=&quot;code&quot; class=&quot;java:nogutter:nocontrols&quot;&gt;
public interface League extends Remote {
    void addTeam(String name) throws RemoteException;
    void removeTeam(String name) throws RemoteException;
    List&amp;lt;String&amp;gt; getTeamList() throws RemoteException;
    int getTeamsCount() throws RemoteException;
}&lt;/pre&gt;
Come richiesto da RMI, per ogni metodo è specificato che può sollevare una RemoteException. Le RemoteException dovrebbero essere gestita dal client, ovvero le chiamate dei metodi dovrebbero essere racchiuse in un blocco try/catch come il seguente:
&lt;pre name=&quot;code&quot; class=&quot;java:nogutter:nocontrols&quot;&gt;
    TeamManager manager = ...;
    try {
        n = manager.getTeamsCount();
    } catch(RemoteException ex) {
        // gestione dell&#39;eccezione
    }
&lt;/pre&gt;
Se le chiamate al server sono sparse in varie parti del codice del client la gestione delle eccezioni potrebbe diventare tediosa e ripetitiva.
Utilizzando la tecnica descritta di seguito è possibile concentrare la gestione delle RemoteException in un unico punto.
L&#39;idea è quella di interfacciare il codice client con interfaccia simile a quella remota che però non richieda la gestione delle RemoteException, nel nostro caso:
&lt;pre name=&quot;code&quot; class=&quot;java:nogutter:nocontrols&quot;&gt;
public interface LocalLeague {
    void addTeam(String name);
    void removeTeam(String name);
    List&amp;lt;String&amp;gt; getTeamList();
    int getTeamsCount();
}&lt;/pre&gt;
La soluzione si basa sul concetto di adapter.
Creiamo un oggetto &#39;adapter&#39; che implementa l&#39;interfaccia locale e  delega le chiamate al server remoto. La gestione delle RemoteException  e gestita dall&#39;adapter che di fatto le intercetta prima che possano  arrivare al client.
La situazione che si vuole ottenere e schematizzata in figura.
&lt;div style=&quot;text-align: center;&quot;&gt;&lt;a onblur=&quot;try {parent.deselectBloggerImageGracefully();} catch(e) {}&quot; href=&quot;http://bp3.blogger.com/_bikdOOm3kpc/SEG3zW6n8aI/AAAAAAAABac/uz8bI66fTSw/s1600-h/Main.png&quot;&gt;&lt;img style=&quot;cursor: pointer;&quot; src=&quot;http://bp3.blogger.com/_bikdOOm3kpc/SEG3zW6n8aI/AAAAAAAABac/uz8bI66fTSw/s400/Main.png&quot; alt=&quot;&quot; id=&quot;BLOGGER_PHOTO_ID_5206644737169682850&quot; border=&quot;0&quot; /&gt;&lt;/a&gt;
&lt;/div&gt;Il client utilizza l&#39;interfaccia semplificata (senza RemoteException).
L&#39;adapter inoltra le chiamate al server, e nel caso gestisce la  RemoteException catturandola prima che arrivi al client. Dato che il  client richiede comunque una risposta nel caso di un&#39;eccezione  l&#39;adapter interroga un oggetto fallback che fornisce il valore da  restiuire in questi casi.
Nel nostro caso l&#39;oggetto di fallback è il seguetne:
&lt;pre name=&quot;code&quot; class=&quot;java:nogutter:nocontrols&quot;&gt;
LocalLeague fallback = new LocalLeague() {

    public void addTeam(String name) {
        // nothing
    }

    public void removeTeam(String name) {
        // nothing
    }

    public List&amp;lt;String&amp;gt; getTeamList() {
        return Collections.emptyList();
    }

    public int getTeamsCount() {
        return 0;
    }
};
&lt;/pre&gt;
In oltre l&#39;adapter è in grado di segnalare le eccezioni  interfacciandosi con un oggetto ExceptionListener. L&#39;interfaccia  ExceptionListener è definita nel package java.beans nel seguente modo:
&lt;pre name=&quot;code&quot; class=&quot;java:nogutter:nocontrols&quot;&gt;
public interface ExceptionListener {
    void exceptionThrown(Exception e);
}
&lt;/pre&gt;
Fornedo la propria implementazione di ExceptionListener il client può gestire tutte le RemoteException in un unico punto.
La creazione dell&#39;oggetto adapter avviene nel seguente modo:
&lt;pre name=&quot;code&quot; class=&quot;java:nogutter:nocontrols&quot;&gt;
LocalLeague adapter = AdapterFactory.adapt(LocalLeague.class,
                                           remoteServer,
                                           fallback,
                                           exceptionListener);
&lt;/pre&gt;
Potete scaricare la libreria che contiene queste funzionalità da &lt;a href=&quot;http://code.google.com/p/andreafrancia-util/&quot;&gt;http://code.google.com/p/andreafrancia-util/&lt;/a&gt;.&lt;/div&gt;
</content>
  </entry>
  
  <entry>
    <title>Syntax Highlighter</title>
    <link href="http://andreafrancia.it"/>
    <updated>2008-05-27T00:00:00+02:00</updated>
    <id>http://andreafrancia.it/2008/05/syntax-highlighter</id>
    <content type="html">&lt;h1&gt;Syntax Highlighter&lt;/h1&gt;
&lt;div class=&#39;post&#39;&gt;
Ho installato un plugin sul mio blog che dovrebbe effettuare l&#39;highlight syntax del codice che scrivo nel blog.

Proviamo.
Scrivendo:

&amp;lt;pre name=&quot;code&quot; class=&quot;java:nogutter:nocontrols&quot;&amp;gt;
  /* Commento */
  int variabile = pinkElephant.getNumberOfFoot();
  assert variabile == 4;&lt;/span&gt;
  System.out.println(&quot;Bella lì&quot;);
&amp;lt;/pre&amp;gt;

&lt;/span&gt;Ottengo:
&lt;pre name=&quot;code&quot; class=&quot;java:nogutter:nocontrols&quot;&gt;
/* Commento */
int variabile = pinkElephant.getNumberOfFoot();
assert variabile == 4;
System.out.println(&quot;Bella lì&quot;);
&lt;/pre&gt;
I rigraziamenti vanno ai signori che hanno scritto la libreria &lt;a href=&quot;http://code.google.com/p/syntaxhighlighter/wiki/Overview&quot;&gt;SyntaxHighlighter&lt;/a&gt; e al signore che si è preso la briga di creare il corrispondente &lt;a href=&quot;http://fazibear.blogspot.com/2007/09/blogger-syntax-higlighter.html&quot;&gt;plugin&lt;/a&gt; per Blogger .&lt;/div&gt;
</content>
  </entry>
  
  <entry>
    <title>Java Web Start</title>
    <link href="http://andreafrancia.it"/>
    <updated>2008-05-26T00:00:00+02:00</updated>
    <id>http://andreafrancia.it/2008/05/java-web-start</id>
    <content type="html">&lt;h1&gt;Java Web Start&lt;/h1&gt;
&lt;div class=&#39;post&#39;&gt;
Java Web Start è una tecnologia per la distribuire di applicazioni Java.
Usando Web Start l&#39;installazione si riduce al cliccare su un link o su un bottone in una pagina web.
In questo &lt;a href=&quot;http://andreafrancia.it/articoli/webstart/&quot;&gt;articolo &lt;/a&gt;spiego come si usa questa tecnologia.&lt;/div&gt;
</content>
  </entry>
  
  <entry>
    <title>Usabilità di Sourceforge</title>
    <link href="http://andreafrancia.it"/>
    <updated>2008-05-22T00:00:00+02:00</updated>
    <id>http://andreafrancia.it/2008/05/usabilit-di-sourceforge</id>
    <content type="html">&lt;h1&gt;Usabilità di Sourceforge&lt;/h1&gt;
&lt;p&gt;C&amp;#8217;e&amp;#8217; un gestore dei task associato al progetto. Bene.&lt;/p&gt;

&lt;p&gt;Il mio progetto è piccolo, voglio aggiungere pochi task.&lt;/p&gt;

&lt;p&gt;Posso aggiungerli? No!&lt;br /&gt;Devo prima creare un subproject? Perch&amp;#233;?&lt;/p&gt;

&lt;p&gt;Creo il subproject.&lt;br /&gt;Ci ripenso, voglio cambiare il nome, posso? No!&lt;/p&gt;</content>
  </entry>
  
  <entry>
    <title>Quanto è  complicato pubblicare una release su Sourceforge e su Google Code</title>
    <link href="http://andreafrancia.it"/>
    <updated>2008-05-20T00:00:00+02:00</updated>
    <id>http://andreafrancia.it/2008/05/quanto-complicato-pubblicare-una-release-su-sourceforge-e-su-google-code</id>
    <content type="html">&lt;h1&gt;Quanto è  complicato pubblicare una release su Sourceforge e su Google Code&lt;/h1&gt;
&lt;p&gt;Ho due progettini opensource, uno si chiama bluetrash e sta su Sourceforge, l&amp;#8217;altro si chiama remoted-list e sta su Google Code.&lt;/p&gt;

&lt;p&gt;Per farvi capire la differenza di usabilità tra i due siti vi spiego come si rilascia un nuovo pacchetto su entrambi i sistemi.&lt;/p&gt;

&lt;h2 id=&#39;caso_google_remotedlist&#39;&gt;Caso Google: remoted-list.&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;faccio login su google code&lt;/li&gt;

&lt;li&gt;vado sulla pagina download del mio progetto&lt;/li&gt;

&lt;li&gt;clicco &amp;#8220;new download&amp;#8221;&lt;/li&gt;

&lt;li&gt;clicco Browse&lt;/li&gt;

&lt;li&gt;seleziono il file remoted-lists-0.0.2.jar dal mio disco&lt;/li&gt;

&lt;li&gt;clicco su submit file&lt;/li&gt;

&lt;li&gt;fine&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#39;caso_sourceforge_bluetrash&#39;&gt;Caso Sourceforge: bluetrash.&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;vado sulla pagina download.&lt;/li&gt;

&lt;li&gt;cerco il bottone &amp;#8220;aggiungi nuova release&amp;#8221;&lt;/li&gt;

&lt;li&gt;non lo trovo&lt;/li&gt;

&lt;li&gt;cerco meglio&lt;/li&gt;

&lt;li&gt;trovo File Releases tra una delle 20 voci del menu Admin&lt;/li&gt;

&lt;li&gt;lo clicco&lt;/li&gt;

&lt;li&gt;Appare la pagine File Release System, quasi ci sono&lt;/li&gt;

&lt;li&gt;hai definito un package? se non l&amp;#8217;hai definito non puoi proseguire!&lt;/li&gt;

&lt;li&gt;ok lo definisco&lt;/li&gt;

&lt;li&gt;attento se cambi idea il package una volta aggiunto non puoi rimuoverlo, puoi solo marcarlo hidden!&lt;/li&gt;

&lt;li&gt;va be&amp;#8217; fa niente, alla fine ne ho due bluetrash (errore marcato hidden) e trash (giusto)&lt;/li&gt;

&lt;li&gt;C&amp;#8217;e&amp;#8217; un link Add Release per ogni package (anche per quello hidden).&lt;/li&gt;

&lt;li&gt;Scelgo &amp;#8220;trash&amp;#8221; quindi devo cliccare il link Add release di trash.&lt;/li&gt;

&lt;li&gt;appare un paginone composto da quattro capitoli &amp;#8220;Step 1&amp;#8221;, 2 , 3 e 4.&lt;/li&gt;

&lt;li&gt;Allo step 1 mi chiede il nome della release, ok lo inserisco trash-0.1.8&lt;/li&gt;

&lt;li&gt;mi chiede ancora &amp;#8220;Of which package&amp;#8221; con scelta predefinitta &amp;#8220;trash&amp;#8221;. Ma se te lo detto prima!&lt;/li&gt;

&lt;li&gt;mi chiede il changelog, e il Release note, io non ce li ho, non li ho fatti e non li metto&lt;/li&gt;

&lt;li&gt;clicco i l bottone update&lt;/li&gt;

&lt;li&gt;Vado più sotto nel documento a leggere allo Step 2&lt;/li&gt;

&lt;li&gt;Mi dice che devo fare l&amp;#8217;upload del file file. Ok dov&amp;#8217;e il bottone browse per scegliere il mio file sul file system? Non c&amp;#8217;e&amp;#8217;.&lt;/li&gt;

&lt;li&gt;C&amp;#8217;e&amp;#8217; scritto che posso caricare il file con SFTP, webdav o rsync. Per me uno vale l&amp;#8217;altro, a che mi serve scegliere?&lt;/li&gt;

&lt;li&gt;Decido che lo faccio con SFTP.&lt;/li&gt;

&lt;li&gt;Penso dimmi quelle quattro cose che mi servono l&amp;#8217;indirizzo (hostname, path, username e password). Le avranno scritte qui&amp;#8230; no! non ci sono. bisogna cliccare il link.&lt;/li&gt;

&lt;li&gt;clicco il link che apre la pagina di help.&lt;/li&gt;

&lt;li&gt;Scopro hostname, path, username e password.&lt;/li&gt;

&lt;li&gt;faccio l&amp;#8217;upload del primo dei tre file.&lt;/li&gt;

&lt;li&gt;Pero&amp;#8217; io non voglio mettere sempre la password, posso installare la mia chiave pubblica ssh? No! non si puo&amp;#8217;! vabbe&amp;#8217;.&lt;/li&gt;

&lt;li&gt;Ripeto per gli altri due file mettendo la password a mano e rinunciando al pensiero di automare un giorno la cosa con qualche script.&lt;/li&gt;

&lt;li&gt;Torno sulla pagina, naturalmente non è aggiornata. Devo cliccare il bottone &amp;#8220;Add Files and/or refresh view&amp;#8221;&amp;#8230;. che cosa fa questo bottone? Aggiunge file oppure o anche aggiorna?&lt;/li&gt;

&lt;li&gt;Lo clicco&lt;/li&gt;

&lt;li&gt;appaiono i nomi dei file che caricato: &lt;tt&gt;trash-0.1.8-1.noarch.rpm&lt;/tt&gt;, &lt;tt&gt;trash_0.1.8-2_all.deb&lt;/tt&gt;, &lt;tt&gt;trash-0.1.8.tar.gz&lt;/tt&gt;.&lt;/li&gt;

&lt;li&gt;finito? no!&lt;/li&gt;

&lt;li&gt;bisogna spuntare ognuno dei file e poi cliccare di nuovo il bottone omnicomprensivo : &amp;#8220;Add Files and/or refresh view&amp;#8221;&lt;/li&gt;

&lt;li&gt;Lo step 4 si popola di 3 righe, una per ogni file.&lt;/li&gt;

&lt;li&gt;Per ogni riga devo scegliere tipo di processore, data di rilascio, tipo di file.&lt;/li&gt;

&lt;li&gt;Ok li scelgo tutti poi schiaccio uno dei bottoni &amp;#8220;update/refresh&amp;#8221; (anche in questo caso i bottoni fanno piu&amp;#8217; di un lavoro).&lt;/li&gt;

&lt;li&gt;Scopro che mi ha tenuto solo le scelte del file per cui ho premuto il bottone e le altre scelte sono andate perse.&lt;/li&gt;

&lt;li&gt;Ok ho capito devo modificarne e fare l&amp;#8217;update/refresh di un file alla vota.&lt;/li&gt;

&lt;li&gt;finalmente&lt;/li&gt;

&lt;li&gt;finito.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Comments&lt;/h2&gt;&lt;div class=&#39;comments&#39;&gt;
&lt;div class=&#39;comment&#39;&gt;
&lt;div class=&#39;author&#39;&gt;Anonymous&lt;/div&gt;
&lt;div class=&#39;content&#39;&gt;
Io sto impazzendo su sf :(&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;</content>
  </entry>
  
  <entry>
    <title>RemotedList</title>
    <link href="http://andreafrancia.it"/>
    <updated>2008-05-14T00:00:00+02:00</updated>
    <id>http://andreafrancia.it/2008/05/remotedlist</id>
    <content type="html">&lt;h1&gt;RemotedList&lt;/h1&gt;
&lt;div class=&#39;post&#39;&gt;
I want to create a library to solve a problem which happens to me very often working with RMI and JPA.

Consider having a remote server object with an interface like this:
&lt;pre&gt;public Server implements Remote{
    List&amp;lt;Foo&amp;gt; getFoos() throws RemoteException;
}
&lt;/pre&gt;According to the the RMI specification calling this method will cause that the resulting List is serialized and passed back over the network to the client.
Consider the case when the resulting list is huge and you don&#39;t want pass such a big thing over the network or consider the case when the list is not serializable.

My remoted-list library will address these problems replacing a the actual list with a remoted version that lazily load the elements.

The usage of remote-list is simple. Consider the getFoos() implementation:
&lt;pre&gt;List&amp;lt;Foo&amp;gt; getFoos() {
   List&amp;lt;Foo&amp;gt; actualList = ... // create or get a list according your business logic
   List&amp;lt;Foo&amp;gt; remotedList = RemotedList.remotize(actualList);

   return remotedList;
}
&lt;/pre&gt;Instead to returning the &lt;code&gt;actualList&lt;/code&gt; the method returns a &lt;code&gt;remotedList&lt;/code&gt; which reflects the contents of the actualList mantaining a remote reference to &lt;code&gt;actualList&lt;/code&gt;.
The remoteList is also Serializable and ligth to serialize because it contains only a remote reference to the &lt;code&gt;actualList&lt;/code&gt; instead to contains all reference of all elements.

Now consider the client which retrieve the remotedList from the remote object.&lt;pre&gt;remotedList = server.getFoos();
...
element = remoteList.get(index);
&lt;/pre&gt;When the client call &lt;code&gt;remoteList.get(index)&lt;/code&gt; the &lt;code&gt;remoteList&lt;/code&gt; acts like a proxy and call through RMI the &lt;code&gt;get(index)&lt;/code&gt; method on the &lt;code&gt;actualList&lt;/code&gt; which was left on the server JVM.

This is the idea. Soon I will prepare the library and I will release it for you all!

&lt;span style=&quot;font-weight: bold;&quot;&gt;UPATE 2008-05-15&lt;/span&gt;
I wrote the code and I put it online throuh Google Code.
The project is hosted at &lt;a href=&quot;http://code.google.com/p/remoted-list/&quot;&gt;http://code.google.com/p/remoted-list/&lt;/a&gt;.&lt;/div&gt;
</content>
  </entry>
  
  <entry>
    <title>Libreria per il parsing della linea di comando (args4j)</title>
    <link href="http://andreafrancia.it"/>
    <updated>2008-05-06T00:00:00+02:00</updated>
    <id>http://andreafrancia.it/2008/05/libreria-per-il-parsing-della-linea-di-comando-args4j</id>
    <content type="html">&lt;h1&gt;Libreria per il parsing della linea di comando (args4j)&lt;/h1&gt;
&lt;div class=&#39;post&#39;&gt;
L&#39;altro giorno ho trovato finalmente una libreria che aiuta a fare il parsing della linea di comando.

La libreria a cui mi riferisco è &lt;a href=&quot;https://args4j.dev.java.net/&quot;&gt;arg4j&lt;/a&gt;.
È una libreria open source (&lt;a href=&quot;http://www.opensource.org/licenses/mit-license.php&quot;&gt;MIT License&lt;/a&gt;), creata da &lt;a href=&quot;http://weblogs.java.net/blog/kohsuke/&quot;&gt;Kohsuke Kawaguchi&lt;/a&gt;che tra l&#39;altro è il creatore di &lt;a href=&quot;https://hudson.dev.java.net/&quot;&gt;Hudson &lt;/a&gt;(il sistema di continous integration che usiamo attualmente in azienda).

Funziona sia con le opzioni corte (es. -R) che con quelle lunghe (--recursive).
Non usa lo stile GNU delle opzioni, quindi non potete usarlo per fare il parsing di qualcosa come
&lt;code&gt;rm -Rfv&lt;/code&gt;
Ma riesce solo a fare il parsing di cose come:
&lt;code&gt;rm -R -f -v&lt;/code&gt;

Oltre a fare il parsing genera il messaggio di help per l&#39;utilizzo delle opzioni direttamente dalla definizione delle opzioni.&lt;/div&gt;
</content>
  </entry>
  
  <entry>
    <title>Builder with fluent interface in Java</title>
    <link href="http://andreafrancia.it"/>
    <updated>2008-05-04T00:00:00+02:00</updated>
    <id>http://andreafrancia.it/2008/05/builder-with-fluent-interface-in-java</id>
    <content type="html">&lt;h1&gt;Builder with fluent interface in Java&lt;/h1&gt;
&lt;div class=&#39;post&#39;&gt;
Ho creato una libreria che semplifica la creazione Fluent Builders.
La libreria su un &lt;a href=&quot;http://stephan.reposita.org/archives/2007/10/10/fluent-interface-and-reflection-for-object-building-in-java/&quot; id=&quot;qlxk&quot; title=&quot;idea&quot;&gt;idea&lt;/a&gt; di &lt;a href=&quot;http://stephan.reposita.org/&quot; id=&quot;ga-y&quot; title=&quot;Stephan Schmidt&quot;&gt;Stephan Schmidt&lt;/a&gt; che ho ampliato e modificato.

La libreria permette di creare un builder con interfaccia fluent senza scrivere codice ripetitivo.

La libreria permette di riscrivere il codice seguente:
&lt;pre&gt;Person person = new Person();
person.setFirstName(&quot;John&quot;);
person.setLastName(&quot;Smith&quot;);
person.getLovedThings().add(&quot;pizza&quot;);
person.getLovedThings().add(&quot;soccer&quot;);
person.getLovedThings().add(&quot;jogging&quot;);
person.setAge(30);
&lt;/pre&gt;nel seguente modo:
&lt;pre&gt;Person person2 = Person.builder()
       .withFirstName(&quot;John&quot;)
       .withLastName(&quot;Smith&quot;)
       .withLovedThings(&quot;pizza&quot;, &quot;soccer&quot;, &quot;jogging&quot;)
       .withAge(30)
       .build();
&lt;/pre&gt;

Maggiori dettagli li trovati sul mio sito: &lt;a href=&quot;http://www.andreafrancia.it/articoli/fluent-builder&quot;&gt;Fluent Builder Library&lt;/a&gt;&lt;/div&gt;
</content>
  </entry>
  
  <entry>
    <title>Large File Viewer</title>
    <link href="http://andreafrancia.it"/>
    <updated>2008-04-16T00:00:00+02:00</updated>
    <id>http://andreafrancia.it/2008/04/large-file-viewer</id>
    <content type="html">&lt;h1&gt;Large File Viewer&lt;/h1&gt;
&lt;div class=&#39;post&#39;&gt;
Ho scritto un articolo su come creare in Java un visualizzatore di grandi file di testo, cioé di dimensioni superiori al gigabyte.
Lo messo qua: &lt;a href=&quot;http://www.andreafrancia.it/articoli/large-file-viewer.html&quot;&gt;http://www.andreafrancia.it/articoli/large-file-viewer.html&lt;/a&gt;.&lt;/div&gt;
</content>
  </entry>
  
  <entry>
    <title>Dublino</title>
    <link href="http://andreafrancia.it"/>
    <updated>2007-10-29T00:00:00+01:00</updated>
    <id>http://andreafrancia.it/2007/10/dublino</id>
    <content type="html">&lt;h1&gt;Dublino&lt;/h1&gt;
&lt;div class=&#39;post&#39;&gt;
Oggi posto direttamente da Dublino.
Nonostante quello che qualcuno voleva farmi credere la città è molto bella. 
Apprezzo soprattutto la possibilità di incontrare gente (e soprattutto ragazze) di tutte le nazionalità ... tra argentini, italiani, brasiliani e polacchi, abbiamo trovato anche qualche irlandese. 

La città è ospitale, i prezzi non sono cosi alti come mi aspettavo e ci sono parecchie cose da vedere. 

Lo stile architetturale del centro mi piace molto, le case piccole con le porte di ingresso colorate con le colonne ai lati mi piacciono tantissimo. 

Anche la cucina è ottima.
 
La vita notturna inizia e finisce presto a Dublino, una buona cosa per i &quot;vecchi&quot; come me a cui non piace dover aspettare fino alle 24.00 per trovare qualcuno in discoteca. Qui le discoteche aprono alle 10 e chiudono alle 2.30. Se vuoi iniziare ancora prima puoi trovarti alle 6 pm per una birra in un pub e tirare fino a notte. 
Purtroppo non sembra che ci siano dei buoni posti per ballare la salsa, pochi posti e affollati. 

Il tempo all&#39;internet cafè sta scadendo ... ciao a tutti.&lt;/div&gt;
</content>
  </entry>
  
  <entry>
    <title>Dublino</title>
    <link href="http://andreafrancia.it"/>
    <updated>2007-10-22T00:00:00+02:00</updated>
    <id>http://andreafrancia.it/2007/10/dublino</id>
    <content type="html">&lt;h1&gt;Dublino&lt;/h1&gt;
&lt;div class=&#39;post&#39;&gt;
&lt;img src=&quot;http://www.venetolowcost.com/voli/dublino-saint-patricks-cathedral.JPG&quot; style=&quot;margin: 0pt 0pt 10px 10px; float: right;&quot; title=&quot;&quot; alt=&quot;&quot; /&gt;Tra poco vado in vacanza :)
Venerdì questo (26 ottobre) parto per &lt;a href=&quot;http://it.wikipedia.org/wiki/Dublino&quot;&gt;Dublino&lt;/a&gt; ci starò 10 giorni, fino a domenica 4 novrembre 2007!

Ciao a tutti :)&lt;/div&gt;
</content>
  </entry>
  
  <entry>
    <title>Recycle Bin per Linux</title>
    <link href="http://andreafrancia.it"/>
    <updated>2007-07-24T00:00:00+02:00</updated>
    <id>http://andreafrancia.it/2007/07/recycle-bin-per-linux</id>
    <content type="html">&lt;h1&gt;Recycle Bin per Linux&lt;/h1&gt;
&lt;div class=&#39;post&#39;&gt;
&lt;a onblur=&quot;try {parent.deselectBloggerImageGracefully();} catch(e) {}&quot; href=&quot;http://bp2.blogger.com/_bikdOOm3kpc/RqZfqoq0eAI/AAAAAAAAAMI/kJuZxWuyVQE/s1600-h/David.jpg&quot;&gt;&lt;img style=&quot;margin: 0pt 0pt 10px 10px; float: right; cursor: pointer;&quot; src=&quot;http://bp2.blogger.com/_bikdOOm3kpc/RqZfqoq0eAI/AAAAAAAAAMI/kJuZxWuyVQE/s200/David.jpg&quot; alt=&quot;&quot; id=&quot;BLOGGER_PHOTO_ID_5090861614865086466&quot; border=&quot;0&quot; /&gt;&lt;/a&gt;Ole! Finalmente l&#39;ho finito!
Un cestino a linea di comando per Linux.
Si ricorda da dove hai cancellato il file e quando.

E&#39; interoperabile con il cestino di KDE, cioé se butti un file con questo programma poi lo ritrovi nel cestino di KDE.

Download from &lt;a href=&quot;http://bluetrash.sourceforge.net/&quot;&gt;http://bluetrash.sourceforge.net/.&lt;/a&gt;

La foto non c&#39;entra, ma è carina.&lt;/div&gt;
</content>
  </entry>
  
  <entry>
    <title>Google Pages</title>
    <link href="http://andreafrancia.it"/>
    <updated>2007-07-21T00:00:00+02:00</updated>
    <id>http://andreafrancia.it/2007/07/google-pages</id>
    <content type="html">&lt;h1&gt;Google Pages&lt;/h1&gt;
&lt;div class=&#39;post&#39;&gt;
Ho provato Google Pages.
Comodo. 
Ecco il mio sforzo creativo: &lt;a href=&quot;http://andrea.francia.googlepages.com/moorelawrevisited&quot;&gt;Moore Law Revisited&lt;/a&gt;&lt;/div&gt;
</content>
  </entry>
  
  <entry>
    <title>Toilet a Palazzo Reale</title>
    <link href="http://andreafrancia.it"/>
    <updated>2007-07-18T00:00:00+02:00</updated>
    <id>http://andreafrancia.it/2007/07/toilet-a-palazzo-reale</id>
    <content type="html">&lt;h1&gt;Toilet a Palazzo Reale&lt;/h1&gt;
&lt;div class=&#39;post&#39;&gt;
&lt;a href=&quot;http://bp1.blogger.com/_bikdOOm3kpc/Rp6DytLjc0I/AAAAAAAAAAU/KDaKUUUx44w/s1600-h/100_1024.JPG&quot;&gt;&lt;img id=&quot;BLOGGER_PHOTO_ID_&quot; style=&quot;CLEAR: both; FLOAT: left; MARGIN: 0px 10px 10px 0px&quot; alt=&quot;&quot; src=&quot;http://bp1.blogger.com/_bikdOOm3kpc/Rp6DytLjc0I/AAAAAAAAAAU/KDaKUUUx44w/s320/100_1024.JPG&quot; border=&quot;0&quot; /&gt;&lt;/a&gt;A sinistra potete ammirare le splendide toilette artistiche davanti a Palazzo Reale.
Se ve lo state chiedendo ... Sì dentro sono come tutte gli altri bagni portatili.&lt;div style=&#39;clear:both; text-align:LEFT&#39;&gt;&lt;a href=&#39;http://picasa.google.com/blogger/&#39; target=&#39;ext&#39;&gt;&lt;img src=&#39;http://photos1.blogger.com/pbp.gif&#39; alt=&#39;Posted by Picasa&#39; style=&#39;border: 0px none ; padding: 0px; background: transparent none repeat scroll 0% 50%; -moz-background-clip: initial; -moz-background-origin: initial; -moz-background-inline-policy: initial;&#39; align=&#39;middle&#39; border=&#39;0&#39; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;
</content>
  </entry>
  
  <entry>
    <title>Chiuso fuori!</title>
    <link href="http://andreafrancia.it"/>
    <updated>2007-07-16T00:00:00+02:00</updated>
    <id>http://andreafrancia.it/2007/07/chiuso-fuori</id>
    <content type="html">&lt;h1&gt;Chiuso fuori!&lt;/h1&gt;
&lt;div class=&#39;post&#39;&gt;
OSSEC è un HIDS, un Host-based Intrusion Detection System ...

Lo installi, lo avvi e lui comincia a controllare i log e altri file sulla macchina e capisce se qualcuno ti sta attaccando ...

L&#39;ho provato ...
Funziona ! ... Troppo pero&#39; ...

&lt;a onblur=&quot;try {parent.deselectBloggerImageGracefully();} catch(e) {}&quot; href=&quot;http://farm1.static.flickr.com/148/422909673_67eb05b19e.jpg?v=0&quot;&gt;&lt;img style=&quot;margin: 0pt 0pt 10px 10px; float: right; cursor: pointer; width: 130px; height: 97px;&quot; src=&quot;http://farm1.static.flickr.com/148/422909673_67eb05b19e.jpg?v=0&quot; alt=&quot;&quot; border=&quot;0&quot; /&gt;&lt;/a&gt;Appena l&#39;ho avviato ha deciso di bannare il mio IP ... penso che confonda il mio accesso a Subversion via HTTP con qualche attacco e di conseguenza aggiunge una regola al firewall che mi chiude fuori, qualcosa del tipo
&lt;tt&gt; -A IL.MIO.IP.ADD -J DROP&lt;/tt&gt;

Ehi!! ti sei chiuso dentro!!

All&#39;inizio avevo dato la colpa a Snort un IDS che stavo provando assieme a OSSEC.

Adesso ho scoperto come mettere la mia macchina nella white list e OSSEC non mi lascia piu&#39; sulla porta.&lt;/div&gt;
</content>
  </entry>
  
  <entry>
    <title>WinMerge</title>
    <link href="http://andreafrancia.it"/>
    <updated>2007-07-11T00:00:00+02:00</updated>
    <id>http://andreafrancia.it/2007/07/winmerge</id>
    <content type="html">&lt;h1&gt;WinMerge&lt;/h1&gt;
&lt;div class=&#39;post&#39;&gt;
Licenza: GPL
Ambiente: Windows

Confronta due file di testo. Come il comando diff sotto Unix, solo che il confronto è visuale.
Come WinDiff di Visual Studio solo che funziona meglio.

Supporta l&#39;highlight syntax per un molti linguaggi.
Confronta directory in modo ricorsivo.
Si può configurare per ingnorare i file ausiliari di CVS e Subversion.
Permette di modificare i file che si stanno confrontando.

Utilissimo per lo sviluppatore.

&lt;a href=&quot;http://winmerge.org/&quot;&gt;http://winmerge.org/&lt;/a&gt;&lt;/div&gt;
&lt;h2&gt;Comments&lt;/h2&gt;
&lt;div class=&#39;comments&#39;&gt;
&lt;div class=&#39;comment&#39;&gt;
&lt;div class=&#39;author&#39;&gt;Pinz&lt;/div&gt;
&lt;div class=&#39;content&#39;&gt;
miiiiii...&lt;BR/&gt;tutte queste cose tecniche !!!!!&lt;BR/&gt;hai fatto un blog solo per programmmatori ????&lt;BR/&gt;Viva le cagate !!!!!!!!!!!!!!!!!!&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
</content>
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://andreafrancia.it"/>
    <updated>2007-07-10T00:00:00+02:00</updated>
    <id>http://andreafrancia.it/2007/07/hello-world</id>
    <content type="html">&lt;h1&gt;Hello World&lt;/h1&gt;
&lt;div class=&#39;post&#39;&gt;
Ecco il primo post di un programmatore.&lt;/div&gt;
</content>
  </entry>
  
</feed>
